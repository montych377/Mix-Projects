<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\18a-USB_VirtualCom.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\18a-USB_VirtualCom.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Thu Apr 21 18:52:55 2016
<BR><P>
<H3>Maximum Stack Usage =         60 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USB_EndPoint0 &rArr; USB_ReqSetInterface &rArr; USB_ResetEP
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[46]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[23]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[30]">SystemInit</a> from system_lpc17xx.o(i.SystemInit) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[e]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from serial.o(i.UART0_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from serial.o(i.UART1_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[32]">USB_EndPoint0</a> from usbcore.o(i.USB_EndPoint0) referenced from usbuser.o(.constdata)
 <LI><a href="#[33]">USB_EndPoint1</a> from usbuser.o(i.USB_EndPoint1) referenced from usbuser.o(.constdata)
 <LI><a href="#[34]">USB_EndPoint2</a> from usbuser.o(i.USB_EndPoint2) referenced from usbuser.o(.constdata)
 <LI><a href="#[25]">USB_IRQHandler</a> from usbhw.o(i.USB_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[35]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[35]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[36]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[38]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[86]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[87]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[39]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[88]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3d]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[89]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[90]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[91]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[92]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[93]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[94]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[95]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[96]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[97]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[98]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[99]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[42]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[9f]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[a2]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[a3]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[37]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a5]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[3a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a6]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; UsbSerial_TxString &rArr; UsbSerial_TxChar &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a7]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[47]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[41]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a8]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[43]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a9]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[40]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ac]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ad]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ae]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>CDC_BulkIn</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, cdcuser.o(i.CDC_BulkIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CDC_BulkIn &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_Read
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_AvailChar
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint2
</UL>

<P><STRONG><a name="[4c]"></a>CDC_BulkOut</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cdcuser.o(i.CDC_BulkOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CDC_BulkOut &rArr; USB_ReadEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_WrOutBuf
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint2
</UL>

<P><STRONG><a name="[6e]"></a>CDC_ClearCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_ClearCommFeature))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6d]"></a>CDC_GetCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_GetCommFeature))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6c]"></a>CDC_GetEncapsulatedResponse</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_GetEncapsulatedResponse))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6f]"></a>CDC_GetLineCoding</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_GetLineCoding))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[71]"></a>CDC_SendBreak</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_SendBreak))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[72]"></a>CDC_SendEncapsulatedCommand</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_SendEncapsulatedCommand))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[73]"></a>CDC_SetCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_SetCommFeature))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[70]"></a>CDC_SetControlLineState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(i.CDC_SetControlLineState))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[81]"></a>DELAY_us</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, delay.o(i.DELAY_us))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_TxChar
</UL>

<P><STRONG><a name="[6a]"></a>USB_Configure_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(i.USB_Configure_Event))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[63]"></a>USB_DirCtrlEP</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(i.USB_DirCtrlEP))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[4f]"></a>USB_Reset_Event</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbuser.o(i.USB_Reset_Event))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetCore
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>CDC_GetSerialState</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, cdcuser.o(i.CDC_GetSerialState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CDC_GetSerialState
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_LineState
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
</UL>

<P><STRONG><a name="[53]"></a>CDC_NotificationIn</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, cdcuser.o(i.CDC_NotificationIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CDC_NotificationIn &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
</UL>

<P><STRONG><a name="[54]"></a>CDC_SetLineCoding</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, cdcuser.o(i.CDC_SetLineCoding))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CDC_SetLineCoding
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_OpenPort
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_InitPort0
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ser_ClosePort
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[4e]"></a>CDC_WrOutBuf</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, cdcuser.o(i.CDC_WrOutBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CDC_WrOutBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
</UL>

<P><STRONG><a name="[59]"></a>EPAdr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbhw.o(i.EPAdr))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdEP
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
</UL>

<P><STRONG><a name="[84]"></a>GPIO_PinDirection</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gpio.o(i.GPIO_PinDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>GPIO_PinWrite</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gpio.o(i.GPIO_PinWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>RdCmdDat</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usbhw.o(i.RdCmdDat))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, system_lpc17xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>SystemInit</STRONG> (Thumb, 280 bytes, Stack size 0 bytes, system_lpc17xx.o(i.SystemInit))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, serial.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, serial.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USB_ClrStallEP</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usbhw.o(i.USB_ClrStallEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_ClrStallEP
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[5b]"></a>USB_ConfigEP</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usbhw.o(i.USB_ConfigEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[5c]"></a>USB_Configure</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, usbhw.o(i.USB_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[5d]"></a>USB_Connect</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbhw.o(i.USB_Connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Connect
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_Init
</UL>

<P><STRONG><a name="[5e]"></a>USB_DataInStage</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usbcore.o(i.USB_DataInStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_DataInStage &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[5f]"></a>USB_DataOutStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbcore.o(i.USB_DataOutStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_DataOutStage &rArr; USB_ReadEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[60]"></a>USB_DisableEP</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usbhw.o(i.USB_DisableEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_DisableEP
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[61]"></a>USB_EnableEP</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usbhw.o(i.USB_EnableEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_EnableEP
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[32]"></a>USB_EndPoint0</STRONG> (Thumb, 846 bytes, Stack size 8 bytes, usbcore.o(i.USB_EndPoint0))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USB_EndPoint0 &rArr; USB_ReqSetInterface &rArr; USB_ResetEP
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetAddress
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DirCtrlEP
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure_Event
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetLineCoding
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetControlLineState
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetCommFeature
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SendEncapsulatedCommand
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SendBreak
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetLineCoding
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetEncapsulatedResponse
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetCommFeature
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_ClearCommFeature
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetStatus
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetDescriptor
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>USB_EndPoint1</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbuser.o(i.USB_EndPoint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_EndPoint1 &rArr; CDC_NotificationIn &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>USB_EndPoint2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbuser.o(i.USB_EndPoint2))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_EndPoint2 &rArr; CDC_BulkIn &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>USB_IRQHandler</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, usbhw.o(i.USB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_IRQHandler &rArr; USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Suspend
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Resume
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RdCmdDat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>USB_Init</STRONG> (Thumb, 138 bytes, Stack size 4 bytes, usbhw.o(i.USB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_Init &rArr; USB_SetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_Init
</UL>

<P><STRONG><a name="[4d]"></a>USB_ReadEP</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, usbhw.o(i.USB_ReadEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_ReadEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdEP
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
</UL>

<P><STRONG><a name="[67]"></a>USB_ReqGetDescriptor</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, usbcore.o(i.USB_ReqGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ReqGetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[64]"></a>USB_ReqGetStatus</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, usbcore.o(i.USB_ReqGetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[65]"></a>USB_ReqSetClrFeature</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, usbcore.o(i.USB_ReqSetClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_ReqSetClrFeature &rArr; USB_SetStallEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WakeUpCfg
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[69]"></a>USB_ReqSetConfiguration</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, usbcore.o(i.USB_ReqSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_ReqSetConfiguration &rArr; USB_ResetEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6b]"></a>USB_ReqSetInterface</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, usbcore.o(i.USB_ReqSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_ReqSetInterface &rArr; USB_ResetEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[78]"></a>USB_Reset</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, usbhw.o(i.USB_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>USB_ResetCore</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usbcore.o(i.USB_ResetCore))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
</UL>

<P><STRONG><a name="[7e]"></a>USB_ResetEP</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usbhw.o(i.USB_ResetEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_ResetEP
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[7a]"></a>USB_Resume</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(i.USB_Resume))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>USB_SetAddress</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usbhw.o(i.USB_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_SetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[68]"></a>USB_SetStallEP</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usbhw.o(i.USB_SetStallEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_SetStallEP
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdDat
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[62]"></a>USB_SetupStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(i.USB_SetupStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_SetupStage &rArr; USB_ReadEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[66]"></a>USB_StatusInStage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbcore.o(i.USB_StatusInStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_StatusInStage &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[74]"></a>USB_StatusOutStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(i.USB_StatusOutStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_StatusOutStage &rArr; USB_ReadEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[79]"></a>USB_Suspend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(i.USB_Suspend))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>USB_WakeUpCfg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(i.USB_WakeUpCfg))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[4b]"></a>USB_WriteEP</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, usbhw.o(i.USB_WriteEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WrCmdEP
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_TxChar
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
</UL>

<P><STRONG><a name="[7f]"></a>UsbSerial_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbserial.o(i.UsbSerial_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UsbSerial_Init &rArr; USB_Init &rArr; USB_SetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>UsbSerial_TxChar</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbserial.o(i.UsbSerial_TxChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UsbSerial_TxChar &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_TxString
</UL>

<P><STRONG><a name="[82]"></a>UsbSerial_TxString</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbserial.o(i.UsbSerial_TxString))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UsbSerial_TxString &rArr; UsbSerial_TxChar &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_TxChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>WrCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usbhw.o(i.WrCmd))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>WrCmdDat</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usbhw.o(i.WrCmdDat))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetAddress
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
</UL>

<P><STRONG><a name="[7c]"></a>WrCmdEP</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, usbhw.o(i.WrCmdEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>

<P><STRONG><a name="[3f]"></a>main</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = main &rArr; UsbSerial_TxString &rArr; UsbSerial_TxChar &rArr; USB_WriteEP &rArr; WrCmdEP
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_TxString
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsbSerial_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[49]"></a>ser_AvailChar</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, serial.o(i.ser_AvailChar))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
</UL>

<P><STRONG><a name="[55]"></a>ser_ClosePort</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, serial.o(i.ser_ClosePort))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetLineCoding
</UL>

<P><STRONG><a name="[57]"></a>ser_InitPort0</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, serial.o(i.ser_InitPort0))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetLineCoding
</UL>

<P><STRONG><a name="[52]"></a>ser_LineState</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, serial.o(i.ser_LineState))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>

<P><STRONG><a name="[56]"></a>ser_OpenPort</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, serial.o(i.ser_OpenPort))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetLineCoding
</UL>

<P><STRONG><a name="[4a]"></a>ser_Read</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, serial.o(i.ser_Read))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
