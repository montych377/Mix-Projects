

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun 09 22:20:09 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0013                     _SSPBUF	set	19
   176     0014                     _SSPCONbits	set	20
   177     0014                     _SSPCON	set	20
   178     0006                     _PORTB	set	6
   179     0008                     _PORTD	set	8
   180     0063                     _SSPIF	set	99
   181     0086                     _TRISB	set	134
   182     0088                     _TRISD	set	136
   183     0087                     _TRISCbits	set	135
   184     0091                     _SSPCON2	set	145
   185     0093                     _SSPADD	set	147
   186     0094                     _SSPSTAT	set	148
   187     0463                     _SSPIE	set	1123
   188                           
   189                           	psect	strings
   190     0003                     __pstrings:
   191     0003                     stringtab:
   192     0003                     __stringtab:
   193                           
   194                           ;	String table - string pointers are 1 byte each
   195     0003  1BFF               	btfsc	btemp+1,7
   196     0004  280D               	ljmp	stringcode
   197     0005  1383               	bcf	3,7
   198     0006  187F               	btfsc	btemp+1,0
   199     0007  1783               	bsf	3,7
   200     0008  0800               	movf	0,w
   201     0009  0A84               	incf	4,f
   202     000A  1903               	skipnz
   203     000B  0AFF               	incf	btemp+1,f
   204     000C  0008               	return
   205     000D                     stringcode:
   206     000D                     stringdir:
   207     000D  3000               	movlw	high stringdir
   208     000E  008A               	movwf	10
   209     000F  0804               	movf	4,w
   210     0010  0A84               	incf	4,f
   211     0011  0782               	addwf	2,f
   212     0012                     __stringbase:
   213     0012  3400               	retlw	0
   214     0013                     __end_of__stringtab:
   215     0013                     STR_1:
   216     0013  3452               	retlw	82	;'R'
   217     0014  3465               	retlw	101	;'e'
   218     0015  3463               	retlw	99	;'c'
   219     0016  3465               	retlw	101	;'e'
   220     0017  3469               	retlw	105	;'i'
   221     0018  3476               	retlw	118	;'v'
   222     0019  3465               	retlw	101	;'e'
   223     001A  3420               	retlw	32	;' '
   224     001B  342D               	retlw	45	;'-'
   225     001C  343E               	retlw	62	;'>'
   226     001D  3400               	retlw	0
   227                           
   228                           	psect	cinit
   229     07FB                     start_initialization:	
   230                           ; #config settings
   231                           
   232     07FB                     __initialization:
   233                           
   234                           ; Clear objects allocated to COMMON
   235     07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   236     07FC                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239     07FC                     __end_of__initialization:
   240     07FC  0183               	clrf	3
   241     07FD  120A  118A  2FA1   	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMMON
   244     0075                     __pbssCOMMON:
   245     0075                     _receivedData:
   246     0075                     	ds	1
   247                           
   248                           	psect	cstackCOMMON
   249     0070                     __pcstackCOMMON:
   250     0070                     ?_lcd_cmd:
   251     0070                     ??_lcd_cmd:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?_lcd_data:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ??_lcd_data:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?_lcd_init:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ?_I2C_Initialize:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ??_I2C_Initialize:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     ?_I2C_Read:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ??_I2C_Read:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ?_main:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     I2C_Initialize@address:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283     0070                     	ds	2
   284     0072                     lcd_cmd@cmd:
   285     0072                     lcd_data@data:	
   286                           ; 1 bytes @ 0x2
   287                           
   288                           
   289                           ; 1 bytes @ 0x2
   290     0072                     	ds	1
   291     0073                     ??_lcd_init:
   292     0073                     ?_lcd_string:	
   293                           ; 1 bytes @ 0x3
   294                           
   295     0073                     lcd_string@ptr:	
   296                           ; 1 bytes @ 0x3
   297                           
   298                           
   299                           ; 2 bytes @ 0x3
   300     0073                     	ds	2
   301     0075                     ??_lcd_string:
   302     0075                     ??_main:	
   303                           ; 1 bytes @ 0x5
   304                           
   305                           
   306                           	psect	cstackBANK0
   307     0020                     __pcstackBANK0:	
   308                           ; 1 bytes @ 0x5
   309                           
   310     0020                     main@arr:
   311                           
   312                           ; 10 bytes @ 0x0
   313     0020                     	ds	10
   314     002A                     main@i:
   315                           
   316                           ; 2 bytes @ 0xA
   317     002A                     	ds	2
   318                           
   319                           	psect	maintext
   320     07A1                     __pmaintext:	
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 86 in file "newmain.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  i               2   10[BANK0 ] int 
   331 ;;  arr            10    0[BANK0 ] unsigned char [10]
   332 ;;  d              10    0        unsigned char [10]
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : B00/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         0      12       0       0       0
   344 ;;      Temps:          0       0       0       0       0
   345 ;;      Totals:         0      12       0       0       0
   346 ;;Total ram usage:       12 bytes
   347 ;; Hardware stack levels required when called: 2
   348 ;; This function calls:
   349 ;;		_I2C_Initialize
   350 ;;		_I2C_Read
   351 ;;		_lcd_cmd
   352 ;;		_lcd_init
   353 ;;		_lcd_string
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     07A1                     _main:	
   360                           ;psect for function _main
   361                           
   362     07A1                     l816:	
   363                           ;incstack = 0
   364                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   365                           
   366                           
   367                           ;newmain.c: 87:     char arr[10];;newmain.c: 88:     char d[10];;newmain.c: 89:     TRIS
      +                          D = 0x00;
   368     07A1  1683               	bsf	3,5	;RP0=1, select bank1
   369     07A2  1303               	bcf	3,6	;RP1=0, select bank1
   370     07A3  0188               	clrf	8	;volatile
   371                           
   372                           ;newmain.c: 90:     TRISB = 0x00;
   373     07A4  0186               	clrf	6	;volatile
   374                           
   375                           ;newmain.c: 91:     PORTD = 0x00;
   376     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   377     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   378     07A7  0188               	clrf	8	;volatile
   379                           
   380                           ;newmain.c: 92:     PORTB = 0x00;
   381     07A8  0186               	clrf	6	;volatile
   382     07A9                     l818:
   383                           
   384                           ;newmain.c: 93:     I2C_Initialize(0x30);
   385     07A9  3030               	movlw	48
   386     07AA  120A  118A  26FC  120A  118A  	fcall	_I2C_Initialize
   387     07AF                     l820:
   388                           
   389                           ;newmain.c: 94:     lcd_init();
   390     07AF  120A  118A  2715  120A  118A  	fcall	_lcd_init
   391     07B4                     l822:
   392                           
   393                           ;newmain.c: 95:     lcd_cmd(0x80);
   394     07B4  3080               	movlw	128
   395     07B5  120A  118A  2756  120A  118A  	fcall	_lcd_cmd
   396     07BA                     l824:
   397                           
   398                           ;newmain.c: 96:     lcd_string("Receive ->");
   399     07BA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   400     07BB  00F3               	movwf	lcd_string@ptr
   401     07BC  3080               	movlw	128
   402     07BD  00F4               	movwf	lcd_string@ptr+1
   403     07BE  120A  118A  277B  120A  118A  	fcall	_lcd_string
   404     07C3                     l826:
   405                           
   406                           ;newmain.c: 99:         for(int i=0;i<6;i++){
   407     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   408     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   409     07C5  01AA               	clrf	main@i
   410     07C6  01AB               	clrf	main@i+1
   411     07C7                     l832:
   412                           
   413                           ;newmain.c: 100:             arr[i] = I2C_Read();
   414     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   415     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   416     07C9  082A               	movf	main@i,w
   417     07CA  3E20               	addlw	(low (main@arr| 0))& (0+255)
   418     07CB  0084               	movwf	4
   419     07CC  120A  118A  26F0  120A  118A  	fcall	_I2C_Read
   420     07D1  1383               	bcf	3,7	;select IRP bank0
   421     07D2  0080               	movwf	0
   422     07D3                     l834:
   423                           
   424                           ;newmain.c: 101:         }
   425     07D3  3001               	movlw	1
   426     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   427     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   428     07D6  07AA               	addwf	main@i,f
   429     07D7  1803               	skipnc
   430     07D8  0AAB               	incf	main@i+1,f
   431     07D9  3000               	movlw	0
   432     07DA  07AB               	addwf	main@i+1,f
   433     07DB                     l836:
   434     07DB  082B               	movf	main@i+1,w
   435     07DC  3A80               	xorlw	128
   436     07DD  00FF               	movwf	btemp+1
   437     07DE  3080               	movlw	128
   438     07DF  027F               	subwf	btemp+1,w
   439     07E0  1D03               	skipz
   440     07E1  2FE4               	goto	u95
   441     07E2  3006               	movlw	6
   442     07E3  022A               	subwf	main@i,w
   443     07E4                     u95:
   444     07E4  1C03               	skipc
   445     07E5  2FE7               	goto	u91
   446     07E6  2FE8               	goto	u90
   447     07E7                     u91:
   448     07E7  2FC7               	goto	l832
   449     07E8                     u90:
   450     07E8                     l838:
   451                           
   452                           ;newmain.c: 102:         lcd_cmd(0xC0);
   453     07E8  30C0               	movlw	192
   454     07E9  120A  118A  2756  120A  118A  	fcall	_lcd_cmd
   455     07EE                     l840:
   456                           
   457                           ;newmain.c: 103:         lcd_string(arr);
   458     07EE  3020               	movlw	(low (main@arr| 0))& (0+255)
   459     07EF  00F3               	movwf	lcd_string@ptr
   460     07F0  3000               	movlw	0
   461     07F1  00F4               	movwf	lcd_string@ptr+1
   462     07F2  120A  118A  277B  120A  118A  	fcall	_lcd_string
   463     07F7  2FC3               	goto	l826
   464     07F8  120A  118A  2800   	ljmp	start
   465     07FB                     __end_of_main:
   466                           
   467                           	psect	text1
   468     077B                     __ptext1:	
   469 ;; *************** function _lcd_string *****************
   470 ;; Defined at:
   471 ;;		line 81 in file "newmain.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  ptr             2    3[COMMON] PTR unsigned char 
   474 ;;		 -> main@arr(10), STR_1(11), 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         2       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0
   489 ;;      Totals:         2       0       0       0       0
   490 ;;Total ram usage:        2 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; Hardware stack levels required when called: 1
   493 ;; This function calls:
   494 ;;		_lcd_data
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500     077B                     _lcd_string:	
   501                           ;psect for function _lcd_string
   502                           
   503     077B                     l808:	
   504                           ;incstack = 0
   505                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   506                           
   507                           
   508                           ;newmain.c: 82:     while(*ptr){
   509     077B  2F90               	goto	l814
   510     077C                     l810:
   511                           
   512                           ;newmain.c: 83:         lcd_data(*ptr++);
   513     077C  0874               	movf	lcd_string@ptr+1,w
   514     077D  00FF               	movwf	btemp+1
   515     077E  0873               	movf	lcd_string@ptr,w
   516     077F  0084               	movwf	4
   517     0780  120A  118A  2003  120A  118A  	fcall	stringtab
   518     0785  120A  118A  2734  120A  118A  	fcall	_lcd_data
   519     078A                     l812:
   520     078A  3001               	movlw	1
   521     078B  07F3               	addwf	lcd_string@ptr,f
   522     078C  1803               	skipnc
   523     078D  0AF4               	incf	lcd_string@ptr+1,f
   524     078E  3000               	movlw	0
   525     078F  07F4               	addwf	lcd_string@ptr+1,f
   526     0790                     l814:
   527                           
   528                           ;newmain.c: 82:     while(*ptr){
   529     0790  0874               	movf	lcd_string@ptr+1,w
   530     0791  1283               	bcf	3,5	;RP0=0, select bank0
   531     0792  1303               	bcf	3,6	;RP1=0, select bank0
   532     0793  00FF               	movwf	btemp+1
   533     0794  0873               	movf	lcd_string@ptr,w
   534     0795  0084               	movwf	4
   535     0796  120A  118A  2003  120A  118A  	fcall	stringtab
   536     079B  3A00               	xorlw	0
   537     079C  1D03               	skipz
   538     079D  2F9F               	goto	u81
   539     079E  2FA0               	goto	u80
   540     079F                     u81:
   541     079F  2F7C               	goto	l810
   542     07A0                     u80:
   543     07A0                     l60:
   544     07A0  0008               	return
   545     07A1                     __end_of_lcd_string:
   546                           
   547                           	psect	text2
   548     0734                     __ptext2:	
   549 ;; *************** function _lcd_data *****************
   550 ;; Defined at:
   551 ;;		line 31 in file "newmain.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  data            1    wreg     unsigned char 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  data            1    2[COMMON] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, btemp+1
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         1       0       0       0       0
   567 ;;      Temps:          2       0       0       0       0
   568 ;;      Totals:         3       0       0       0       0
   569 ;;Total ram usage:        3 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_lcd_string
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578     0734                     _lcd_data:	
   579                           ;psect for function _lcd_data
   580                           
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   584                           ;lcd_data@data stored from wreg
   585     0734  00F2               	movwf	lcd_data@data
   586     0735                     l772:
   587                           
   588                           ;newmain.c: 32:     PORTD = data;
   589     0735  0872               	movf	lcd_data@data,w
   590     0736  1283               	bcf	3,5	;RP0=0, select bank0
   591     0737  1303               	bcf	3,6	;RP1=0, select bank0
   592     0738  0088               	movwf	8	;volatile
   593     0739                     l774:
   594                           
   595                           ;newmain.c: 33:     PORTB |= 0x01;
   596     0739  1406               	bsf	6,0	;volatile
   597     073A                     l776:
   598                           
   599                           ;newmain.c: 34:     PORTB &= ~0x02;
   600     073A  30FD               	movlw	253
   601     073B  00FF               	movwf	btemp+1
   602     073C  087F               	movf	btemp+1,w
   603     073D  0586               	andwf	6,f	;volatile
   604     073E                     l778:
   605                           
   606                           ;newmain.c: 35:     PORTB |= 0x04;
   607     073E  1506               	bsf	6,2	;volatile
   608     073F                     l780:
   609                           
   610                           ;newmain.c: 36:     _delay((unsigned long)((3)*(12000000/4000.0)));
   611     073F  300C               	movlw	12
   612     0740  00F1               	movwf	??_lcd_data+1
   613     0741  30AF               	movlw	175
   614     0742  00F0               	movwf	??_lcd_data
   615     0743                     u107:
   616     0743  0BF0               	decfsz	??_lcd_data,f
   617     0744  2F43               	goto	u107
   618     0745  0BF1               	decfsz	??_lcd_data+1,f
   619     0746  2F43               	goto	u107
   620                           
   621                           ;newmain.c: 37:     PORTB &= ~0x04;
   622     0747  30FB               	movlw	251
   623     0748  00FF               	movwf	btemp+1
   624     0749  087F               	movf	btemp+1,w
   625     074A  1283               	bcf	3,5	;RP0=0, select bank0
   626     074B  1303               	bcf	3,6	;RP1=0, select bank0
   627     074C  0586               	andwf	6,f	;volatile
   628     074D                     l782:
   629                           
   630                           ;newmain.c: 38:     _delay((unsigned long)((3)*(12000000/4000.0)));
   631     074D  300C               	movlw	12
   632     074E  00F1               	movwf	??_lcd_data+1
   633     074F  30AF               	movlw	175
   634     0750  00F0               	movwf	??_lcd_data
   635     0751                     u117:
   636     0751  0BF0               	decfsz	??_lcd_data,f
   637     0752  2F51               	goto	u117
   638     0753  0BF1               	decfsz	??_lcd_data+1,f
   639     0754  2F51               	goto	u117
   640     0755                     l36:
   641     0755  0008               	return
   642     0756                     __end_of_lcd_data:
   643                           
   644                           	psect	text3
   645     0715                     __ptext3:	
   646 ;; *************** function _lcd_init *****************
   647 ;; Defined at:
   648 ;;		line 41 in file "newmain.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0
   665 ;;      Totals:         0       0       0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; Hardware stack levels required when called: 1
   669 ;; This function calls:
   670 ;;		_lcd_cmd
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676     0715                     _lcd_init:	
   677                           ;psect for function _lcd_init
   678                           
   679     0715                     l784:	
   680                           ;incstack = 0
   681                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   682                           
   683                           
   684                           ;newmain.c: 42:     lcd_cmd(0x01);
   685     0715  3001               	movlw	1
   686     0716  120A  118A  2756  120A  118A  	fcall	_lcd_cmd
   687                           
   688                           ;newmain.c: 43:     lcd_cmd(0x02);
   689     071B  3002               	movlw	2
   690     071C  120A  118A  2756  120A  118A  	fcall	_lcd_cmd
   691                           
   692                           ;newmain.c: 44:     lcd_cmd(0x06);
   693     0721  3006               	movlw	6
   694     0722  120A  118A  2756  120A  118A  	fcall	_lcd_cmd
   695                           
   696                           ;newmain.c: 45:     lcd_cmd(0x38);
   697     0727  3038               	movlw	56
   698     0728  120A  118A  2756  120A  118A  	fcall	_lcd_cmd
   699                           
   700                           ;newmain.c: 46:     lcd_cmd(0x0c);
   701     072D  300C               	movlw	12
   702     072E  120A  118A  2756  120A  118A  	fcall	_lcd_cmd
   703     0733                     l39:
   704     0733  0008               	return
   705     0734                     __end_of_lcd_init:
   706                           
   707                           	psect	text4
   708     0756                     __ptext4:	
   709 ;; *************** function _lcd_cmd *****************
   710 ;; Defined at:
   711 ;;		line 21 in file "newmain.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  cmd             1    wreg     unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  cmd             1    2[COMMON] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, btemp+1
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   725 ;;      Params:         0       0       0       0       0
   726 ;;      Locals:         1       0       0       0       0
   727 ;;      Temps:          2       0       0       0       0
   728 ;;      Totals:         3       0       0       0       0
   729 ;;Total ram usage:        3 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_lcd_init
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739     0756                     _lcd_cmd:	
   740                           ;psect for function _lcd_cmd
   741                           
   742                           
   743                           ;incstack = 0
   744                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+btemp+1]
   745                           ;lcd_cmd@cmd stored from wreg
   746     0756  00F2               	movwf	lcd_cmd@cmd
   747     0757                     l760:
   748                           
   749                           ;newmain.c: 22:     PORTD = cmd;
   750     0757  0872               	movf	lcd_cmd@cmd,w
   751     0758  1283               	bcf	3,5	;RP0=0, select bank0
   752     0759  1303               	bcf	3,6	;RP1=0, select bank0
   753     075A  0088               	movwf	8	;volatile
   754     075B                     l762:
   755                           
   756                           ;newmain.c: 23:     PORTB &= ~0x01;
   757     075B  30FE               	movlw	254
   758     075C  00FF               	movwf	btemp+1
   759     075D  087F               	movf	btemp+1,w
   760     075E  0586               	andwf	6,f	;volatile
   761     075F                     l764:
   762                           
   763                           ;newmain.c: 24:     PORTB &= ~0x02;
   764     075F  30FD               	movlw	253
   765     0760  00FF               	movwf	btemp+1
   766     0761  087F               	movf	btemp+1,w
   767     0762  0586               	andwf	6,f	;volatile
   768     0763                     l766:
   769                           
   770                           ;newmain.c: 25:     PORTB |= 0x04;
   771     0763  1506               	bsf	6,2	;volatile
   772                           
   773                           ;newmain.c: 26:     _delay((unsigned long)((3)*(12000000/4000.0)));
   774     0764  300C               	movlw	12
   775     0765  00F1               	movwf	??_lcd_cmd+1
   776     0766  30AF               	movlw	175
   777     0767  00F0               	movwf	??_lcd_cmd
   778     0768                     u127:
   779     0768  0BF0               	decfsz	??_lcd_cmd,f
   780     0769  2F68               	goto	u127
   781     076A  0BF1               	decfsz	??_lcd_cmd+1,f
   782     076B  2F68               	goto	u127
   783     076C                     l768:
   784                           
   785                           ;newmain.c: 27:     PORTB &= ~0x04;
   786     076C  30FB               	movlw	251
   787     076D  00FF               	movwf	btemp+1
   788     076E  087F               	movf	btemp+1,w
   789     076F  1283               	bcf	3,5	;RP0=0, select bank0
   790     0770  1303               	bcf	3,6	;RP1=0, select bank0
   791     0771  0586               	andwf	6,f	;volatile
   792     0772                     l770:
   793                           
   794                           ;newmain.c: 28:     _delay((unsigned long)((3)*(12000000/4000.0)));
   795     0772  300C               	movlw	12
   796     0773  00F1               	movwf	??_lcd_cmd+1
   797     0774  30AF               	movlw	175
   798     0775  00F0               	movwf	??_lcd_cmd
   799     0776                     u137:
   800     0776  0BF0               	decfsz	??_lcd_cmd,f
   801     0777  2F76               	goto	u137
   802     0778  0BF1               	decfsz	??_lcd_cmd+1,f
   803     0779  2F76               	goto	u137
   804     077A                     l33:
   805     077A  0008               	return
   806     077B                     __end_of_lcd_cmd:
   807                           
   808                           	psect	text5
   809     06F0                     __ptext5:	
   810 ;; *************** function _I2C_Read *****************
   811 ;; Defined at:
   812 ;;		line 62 in file "newmain.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      unsigned char 
   819 ;; Registers used:
   820 ;;		wreg
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839     06F0                     _I2C_Read:	
   840                           ;psect for function _I2C_Read
   841                           
   842     06F0                     l798:	
   843                           ;incstack = 0
   844                           ; Regs used in _I2C_Read: [wreg]
   845                           
   846     06F0                     l45:	
   847                           ;newmain.c: 63:     while(!SSPIF);
   848                           
   849     06F0  1283               	bcf	3,5	;RP0=0, select bank0
   850     06F1  1303               	bcf	3,6	;RP1=0, select bank0
   851     06F2  1D8C               	btfss	12,3	;volatile
   852     06F3  2EF5               	goto	u71
   853     06F4  2EF6               	goto	u70
   854     06F5                     u71:
   855     06F5  2EF0               	goto	l45
   856     06F6                     u70:
   857     06F6                     l800:
   858                           
   859                           ;newmain.c: 64:     receivedData = SSPBUF;
   860     06F6  0813               	movf	19,w	;volatile
   861     06F7  00F5               	movwf	_receivedData	;volatile
   862     06F8                     l802:
   863                           
   864                           ;newmain.c: 65:     SSPIF = 0;
   865     06F8  118C               	bcf	12,3	;volatile
   866     06F9                     l804:
   867                           
   868                           ;newmain.c: 66:     SSPCONbits.CKP = 1;
   869     06F9  1614               	bsf	20,4	;volatile
   870                           
   871                           ;newmain.c: 68:     return receivedData;
   872     06FA  0875               	movf	_receivedData,w	;volatile
   873     06FB                     l48:
   874     06FB  0008               	return
   875     06FC                     __end_of_I2C_Read:
   876                           
   877                           	psect	text6
   878     06FC                     __ptext6:	
   879 ;; *************** function _I2C_Initialize *****************
   880 ;; Defined at:
   881 ;;		line 48 in file "newmain.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  address         1    wreg     unsigned char 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  address         1    0[COMMON] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         1       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0
   898 ;;      Totals:         1       0       0       0       0
   899 ;;Total ram usage:        1 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908     06FC                     _I2C_Initialize:	
   909                           ;psect for function _I2C_Initialize
   910                           
   911                           
   912                           ;incstack = 0
   913                           ; Regs used in _I2C_Initialize: [wreg]
   914                           ;I2C_Initialize@address stored from wreg
   915     06FC  00F0               	movwf	I2C_Initialize@address
   916     06FD                     l786:
   917                           
   918                           ;newmain.c: 49:     SSPSTAT = 0x80;
   919     06FD  3080               	movlw	128
   920     06FE  1683               	bsf	3,5	;RP0=1, select bank1
   921     06FF  1303               	bcf	3,6	;RP1=0, select bank1
   922     0700  0094               	movwf	20	;volatile
   923                           
   924                           ;newmain.c: 50:     SSPADD = address;
   925     0701  0870               	movf	I2C_Initialize@address,w
   926     0702  0093               	movwf	19	;volatile
   927                           
   928                           ;newmain.c: 51:     SSPCON = 0x36;
   929     0703  3036               	movlw	54
   930     0704  1283               	bcf	3,5	;RP0=0, select bank0
   931     0705  1303               	bcf	3,6	;RP1=0, select bank0
   932     0706  0094               	movwf	20	;volatile
   933                           
   934                           ;newmain.c: 52:     SSPCON2 = 0x01;
   935     0707  3001               	movlw	1
   936     0708  1683               	bsf	3,5	;RP0=1, select bank1
   937     0709  1303               	bcf	3,6	;RP1=0, select bank1
   938     070A  0091               	movwf	17	;volatile
   939     070B                     l788:
   940                           
   941                           ;newmain.c: 53:     TRISCbits.TRISC3 = 1;
   942     070B  1587               	bsf	7,3	;volatile
   943     070C                     l790:
   944                           
   945                           ;newmain.c: 54:     TRISCbits.TRISC4 = 1;
   946     070C  1607               	bsf	7,4	;volatile
   947     070D                     l792:
   948                           
   949                           ;newmain.c: 55:     SSPCONbits.CKP = 1;
   950     070D  1283               	bcf	3,5	;RP0=0, select bank0
   951     070E  1303               	bcf	3,6	;RP1=0, select bank0
   952     070F  1614               	bsf	20,4	;volatile
   953     0710                     l794:
   954                           
   955                           ;newmain.c: 57:     SSPIF = 0;
   956     0710  118C               	bcf	12,3	;volatile
   957     0711                     l796:
   958                           
   959                           ;newmain.c: 58:     SSPIE = 1;
   960     0711  1683               	bsf	3,5	;RP0=1, select bank1
   961     0712  1303               	bcf	3,6	;RP1=0, select bank1
   962     0713  158C               	bsf	12,3	;volatile
   963     0714                     l42:
   964     0714  0008               	return
   965     0715                     __end_of_I2C_Initialize:
   966     007E                     btemp	set	126	;btemp
   967     007E                     wtemp0	set	126
   968                           
   969                           	psect	idloc
   970                           
   971                           ;Config register IDLOC0 @ 0x2000
   972                           ;	unspecified, using default values
   973     2000                     	org	8192
   974     2000  3FFF               	dw	16383
   975                           
   976                           ;Config register IDLOC1 @ 0x2001
   977                           ;	unspecified, using default values
   978     2001                     	org	8193
   979     2001  3FFF               	dw	16383
   980                           
   981                           ;Config register IDLOC2 @ 0x2002
   982                           ;	unspecified, using default values
   983     2002                     	org	8194
   984     2002  3FFF               	dw	16383
   985                           
   986                           ;Config register IDLOC3 @ 0x2003
   987                           ;	unspecified, using default values
   988     2003                     	org	8195
   989     2003  3FFF               	dw	16383
   990                           
   991                           	psect	config
   992                           
   993                           ;Config register CONFIG @ 0x2007
   994                           ;	Oscillator Selection bits
   995                           ;	FOSC = EXTRC, RC oscillator
   996                           ;	Watchdog Timer Enable bit
   997                           ;	WDTE = OFF, WDT disabled
   998                           ;	Power-up Timer Enable bit
   999                           ;	PWRTE = OFF, PWRT disabled
  1000                           ;	Brown-out Reset Enable bit
  1001                           ;	BOREN = OFF, BOR disabled
  1002                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1003                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1004                           ;	Data EEPROM Memory Code Protection bit
  1005                           ;	CPD = OFF, Data EEPROM code protection off
  1006                           ;	Flash Program Memory Write Enable bits
  1007                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1008                           ;	In-Circuit Debugger Mode bit
  1009                           ;	DEBUG = 0x1, unprogrammed default
  1010                           ;	Flash Program Memory Code Protection bit
  1011                           ;	CP = OFF, Code protection off
  1012     2007                     	org	8199
  1013     2007  3F3B               	dw	16187

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@ptr	PTR unsigned char  size(2) Largest target is 11
		 -> main@arr(BANK0[10]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0     401
                                              0 BANK0     12    12      0
                     _I2C_Initialize
                           _I2C_Read
                            _lcd_cmd
                           _lcd_init
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           2     0      2     219
                                              3 COMMON     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialize
   _I2C_Read
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun 09 22:20:09 2023

                      pc 0002             lcd_data@data 0072                       l33 077A  
                     l42 0714                       l36 0755                       l60 07A0  
                     l45 06F0                       l39 0733                       l48 06FB  
                     u70 06F6                       u71 06F5                       u80 07A0  
                     u81 079F                       u90 07E8                       u91 07E7  
                     u95 07E4                       fsr 0004                      l800 06F6  
                    l802 06F8                      l810 077C                      l804 06F9  
                    l812 078A                      l820 07AF                      l814 0790  
                    l822 07B4                      l760 0757                      l808 077B  
                    l840 07EE                      l832 07C7                      l824 07BA  
                    l816 07A1                      l770 0772                      l762 075B  
                    l834 07D3                      l826 07C3                      l818 07A9  
                    l764 075F                      l780 073F                      l772 0735  
                    l836 07DB                      l790 070C                      l766 0763  
                    l782 074D                      l774 0739                      l838 07E8  
                    l792 070D                      l768 076C                      l784 0715  
                    l776 073A                      l794 0710                      l786 06FD  
                    l778 073E                      l796 0711                      l788 070B  
                    l798 06F0                      u107 0743                      u117 0751  
                    u127 0768                      u137 0776                      fsr0 0004  
                    indf 0000                     STR_1 0013                     _main 07A1  
       __end_of_I2C_Read 06FC                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063          __end_of_lcd_cmd 077B                    main@i 002A  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB                   ??_main 0075  
                 _SSPADD 0093                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_lcd_data 0756         __end_of_lcd_init 0734                ??_lcd_cmd 0070  
              ?_I2C_Read 0070            lcd_string@ptr 0073  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_I2C_Read 0070               __pmaintext 07A1  
                _SSPCON2 0091                ?_lcd_data 0070               _lcd_string 077B  
              ?_lcd_init 0070                  _SSPSTAT 0094               __stringtab 0003  
         _I2C_Initialize 06FC                  __ptext1 077B                  __ptext2 0734  
                __ptext3 0715                  __ptext4 0756                  __ptext5 06F0  
                __ptext6 06FC                  _lcd_cmd 0756               ??_lcd_data 0070  
                main@arr 0020               ??_lcd_init 0073     end_of_initialization 07FC  
  I2C_Initialize@address 0070   __end_of_I2C_Initialize 0715                _TRISCbits 0087  
             lcd_cmd@cmd 0072              ?_lcd_string 0073          ?_I2C_Initialize 0070  
    start_initialization 07FB              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020                __pstrings 0003                 ?_lcd_cmd 0070  
               _I2C_Read 06F0             _receivedData 0075              __stringbase 0012  
           ??_lcd_string 0075         ??_I2C_Initialize 0070       __end_of_lcd_string 07A1  
     __end_of__stringtab 0013                 _lcd_data 0734                 _lcd_init 0715  
              stringcode 000D                 stringdir 000D                 stringtab 0003  
             _SSPCONbits 0014  
