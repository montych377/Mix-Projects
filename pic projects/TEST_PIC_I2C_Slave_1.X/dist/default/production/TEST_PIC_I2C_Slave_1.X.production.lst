

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 05 03:11:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0006                     _PORTB	set	6
   184     0013                     _SSPBUF	set	19
   185     0014                     _SSPCON	set	20
   186     003A                     _RC2	set	58
   187     0039                     _RC1	set	57
   188     0038                     _RC0	set	56
   189     0063                     _SSPIF	set	99
   190     0086                     _TRISB	set	134
   191     0093                     _SSPADD	set	147
   192     043A                     _TRISC2	set	1082
   193     0439                     _TRISC1	set	1081
   194     0438                     _TRISC0	set	1080
   195     048B                     _RCEN	set	1163
   196     048E                     _ACKSTAT	set	1166
   197     048C                     _ACKEN	set	1164
   198     048D                     _ACKDT	set	1165
   199     0489                     _RSEN	set	1161
   200     048A                     _PEN	set	1162
   201     0488                     _SEN	set	1160
   202     043C                     _TRISC4	set	1084
   203     043B                     _TRISC3	set	1083
   204                           
   205                           	psect	strings
   206     0003                     __pstrings:
   207     0003                     stringtab:
   208     0003                     __stringtab:
   209     0003                     stringcode:	
   210                           ;	String table - string pointers are 1 byte each
   211                           
   212     0003                     stringdir:
   213     0003  3000               	movlw	high stringdir
   214     0004  008A               	movwf	10
   215     0005  0804               	movf	4,w
   216     0006  0A84               	incf	4,f
   217     0007  0782               	addwf	2,f
   218     0008                     __stringbase:
   219     0008  3400               	retlw	0
   220     0009                     __end_of__stringtab:
   221     0009                     STR_1:
   222     0009  3420               	retlw	32	;' '
   223     000A  3420               	retlw	32	;' '
   224     000B  3449               	retlw	73	;'I'
   225     000C  3432               	retlw	50	;'2'
   226     000D  3443               	retlw	67	;'C'
   227     000E  3420               	retlw	32	;' '
   228     000F  3454               	retlw	84	;'T'
   229     0010  3475               	retlw	117	;'u'
   230     0011  3454               	retlw	84	;'T'
   231     0012  346F               	retlw	111	;'o'
   232     0013  3472               	retlw	114	;'r'
   233     0014  3469               	retlw	105	;'i'
   234     0015  3461               	retlw	97	;'a'
   235     0016  346C               	retlw	108	;'l'
   236     0017  3420               	retlw	32	;' '
   237     0018  3420               	retlw	32	;' '
   238     0019  3400               	retlw	0
   239     001A                     STR_3:
   240     001A  3445               	retlw	69	;'E'
   241     001B  346D               	retlw	109	;'m'
   242     001C  3462               	retlw	98	;'b'
   243     001D  3465               	retlw	101	;'e'
   244     001E  3454               	retlw	84	;'T'
   245     001F  3472               	retlw	114	;'r'
   246     0020  346F               	retlw	111	;'o'
   247     0021  346E               	retlw	110	;'n'
   248     0022  3469               	retlw	105	;'i'
   249     0023  3463               	retlw	99	;'c'
   250     0024  3458               	retlw	88	;'X'
   251     0025  3400               	retlw	0
   252     0026                     STR_4:
   253     0026  3452               	retlw	82	;'R'
   254     0027  3465               	retlw	101	;'e'
   255     0028  3461               	retlw	97	;'a'
   256     0029  3464               	retlw	100	;'d'
   257     002A  3469               	retlw	105	;'i'
   258     002B  346E               	retlw	110	;'n'
   259     002C  3467               	retlw	103	;'g'
   260     002D  342E               	retlw	46	;'.'
   261     002E  342E               	retlw	46	;'.'
   262     002F  342E               	retlw	46	;'.'
   263     0030  3400               	retlw	0
   264     0031                     STR_2:
   265     0031  3457               	retlw	87	;'W'
   266     0032  3472               	retlw	114	;'r'
   267     0033  3469               	retlw	105	;'i'
   268     0034  3474               	retlw	116	;'t'
   269     0035  3469               	retlw	105	;'i'
   270     0036  346E               	retlw	110	;'n'
   271     0037  3467               	retlw	103	;'g'
   272     0038  342E               	retlw	46	;'.'
   273     0039  342E               	retlw	46	;'.'
   274     003A  342E               	retlw	46	;'.'
   275     003B  3400               	retlw	0
   276                           
   277                           	psect	cinit
   278     07FA                     start_initialization:	
   279                           ; #config settings
   280                           
   281     07FA                     __initialization:
   282                           
   283                           ; Clear objects allocated to COMMON
   284     07FA  01F4               	clrf	__pbssCOMMON& (0+127)
   285     07FB  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   286     07FC                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289     07FC                     __end_of__initialization:
   290     07FC  0183               	clrf	3
   291     07FD  120A  118A  2F3D   	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMMON
   294     0074                     __pbssCOMMON:
   295     0074                     _i:
   296     0074                     	ds	2
   297                           
   298                           	psect	cstackCOMMON
   299     0070                     __pcstackCOMMON:
   300     0070                     ?_lcd_init:
   301     0070                     ?_i2c_init:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ??_i2c_init:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_show:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_cmd:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ??_cmd:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_delay1:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ??_delay1:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_dat:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ??_dat:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_i2c_read_byte:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?_waitmssp:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ??_waitmssp:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_i2c_start:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ??_i2c_start:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?_i2c_stop:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     ??_i2c_stop:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0070                     ?_i2c_restart:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ??_i2c_restart:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_i2c_nak:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ??_i2c_nak:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ?_i2c_send:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ??_i2c_send:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?_i2c_read:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ??_i2c_read:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     i2c_send@dat:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     cmd@a:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0070                     dat@b:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0070                     delay1@j:	
   386                           ; 1 bytes @ 0x0
   387                           
   388                           
   389                           ; 2 bytes @ 0x0
   390     0070                     	ds	1
   391     0071                     ??_lcd_init:
   392     0071                     ??_show:	
   393                           ; 1 bytes @ 0x1
   394                           
   395     0071                     ?_i2c_send_byte:	
   396                           ; 1 bytes @ 0x1
   397                           
   398     0071                     ??_i2c_read_byte:	
   399                           ; 1 bytes @ 0x1
   400                           
   401     0071                     i2c_send_byte@count:	
   402                           ; 1 bytes @ 0x1
   403                           
   404     0071                     i2c_read_byte@addr:	
   405                           ; 1 bytes @ 0x1
   406                           
   407     0071                     show@s:	
   408                           ; 1 bytes @ 0x1
   409                           
   410                           
   411                           ; 1 bytes @ 0x1
   412     0071                     	ds	1
   413     0072                     ??_i2c_send_byte:
   414     0072                     i2c_send_byte@addr:	
   415                           ; 1 bytes @ 0x2
   416                           
   417     0072                     i2c_read_byte@rec:	
   418                           ; 1 bytes @ 0x2
   419                           
   420     0072                     delay1@k:	
   421                           ; 1 bytes @ 0x2
   422                           
   423                           
   424                           ; 2 bytes @ 0x2
   425     0072                     	ds	2
   426     0074                     ??_main:
   427                           
   428                           	psect	maintext
   429     073D                     __pmaintext:	
   430                           ; 1 bytes @ 0x4
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   433 ;;
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 39 in file "main.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : B00/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels required when called: 3
   456 ;; This function calls:
   457 ;;		_cmd
   458 ;;		_dat
   459 ;;		_delay1
   460 ;;		_i2c_init
   461 ;;		_i2c_read_byte
   462 ;;		_i2c_send_byte
   463 ;;		_lcd_init
   464 ;;		_show
   465 ;; This function is called by:
   466 ;;		Startup code after reset
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470     073D                     _main:	
   471                           ;psect for function _main
   472                           
   473     073D                     l947:	
   474                           ;incstack = 0
   475                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   476                           
   477                           
   478                           ;main.c: 41:     lcd_init();
   479     073D  120A  118A  2639  120A  118A  	fcall	_lcd_init
   480     0742                     l949:
   481                           
   482                           ;main.c: 42:     i2c_init();
   483     0742  120A  118A  2604  120A  118A  	fcall	_i2c_init
   484     0747                     l951:
   485                           
   486                           ;main.c: 43:     show("  I2C TuTorial  ");
   487     0747  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   488     0748  120A  118A  261A  120A  118A  	fcall	_show
   489     074D                     l953:
   490                           
   491                           ;main.c: 44:     cmd(0xc2);
   492     074D  30C2               	movlw	194
   493     074E  120A  118A  267E  120A  118A  	fcall	_cmd
   494     0753                     l955:
   495                           
   496                           ;main.c: 45:     show("Writing...");
   497     0753  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   498     0754  120A  118A  261A  120A  118A  	fcall	_show
   499     0759                     l957:
   500                           
   501                           ;main.c: 46:     i2c_send_byte(0x0000,"EmbeTronicX");
   502     0759  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   503     075A  00F1               	movwf	i2c_send_byte@count
   504     075B  3000               	movlw	0
   505     075C  120A  118A  26C4  120A  118A  	fcall	_i2c_send_byte
   506     0761                     l959:
   507                           
   508                           ;main.c: 47:     delay1();
   509     0761  120A  118A  265B  120A  118A  	fcall	_delay1
   510     0766                     l961:
   511                           
   512                           ;main.c: 48:     cmd(0xc2);
   513     0766  30C2               	movlw	194
   514     0767  120A  118A  267E  120A  118A  	fcall	_cmd
   515     076C                     l963:
   516                           
   517                           ;main.c: 49:     show("Reading...");
   518     076C  301E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   519     076D  120A  118A  261A  120A  118A  	fcall	_show
   520     0772                     l965:
   521                           
   522                           ;main.c: 50:     delay1();
   523     0772  120A  118A  265B  120A  118A  	fcall	_delay1
   524     0777                     l967:
   525                           
   526                           ;main.c: 51:     cmd(0xc2);
   527     0777  30C2               	movlw	194
   528     0778  120A  118A  267E  120A  118A  	fcall	_cmd
   529     077D                     l969:
   530                           
   531                           ;main.c: 52:     dat(i2c_read_byte(0x0000));
   532     077D  3000               	movlw	0
   533     077E  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   534     0783  120A  118A  26A1  120A  118A  	fcall	_dat
   535     0788                     l971:
   536                           
   537                           ;main.c: 53:     dat(i2c_read_byte(0x0001));
   538     0788  3001               	movlw	1
   539     0789  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   540     078E  120A  118A  26A1  120A  118A  	fcall	_dat
   541     0793                     l973:
   542                           
   543                           ;main.c: 54:     dat(i2c_read_byte(0x0002));
   544     0793  3002               	movlw	2
   545     0794  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   546     0799  120A  118A  26A1  120A  118A  	fcall	_dat
   547     079E                     l975:
   548                           
   549                           ;main.c: 55:     dat(i2c_read_byte(0x0003));
   550     079E  3003               	movlw	3
   551     079F  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   552     07A4  120A  118A  26A1  120A  118A  	fcall	_dat
   553     07A9                     l977:
   554                           
   555                           ;main.c: 56:     dat(i2c_read_byte(0x0004));
   556     07A9  3004               	movlw	4
   557     07AA  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   558     07AF  120A  118A  26A1  120A  118A  	fcall	_dat
   559     07B4                     l979:
   560                           
   561                           ;main.c: 57:     dat(i2c_read_byte(0x0005));
   562     07B4  3005               	movlw	5
   563     07B5  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   564     07BA  120A  118A  26A1  120A  118A  	fcall	_dat
   565     07BF                     l981:
   566                           
   567                           ;main.c: 58:     dat(i2c_read_byte(0x0006));
   568     07BF  3006               	movlw	6
   569     07C0  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   570     07C5  120A  118A  26A1  120A  118A  	fcall	_dat
   571     07CA                     l983:
   572                           
   573                           ;main.c: 59:     dat(i2c_read_byte(0x0007));
   574     07CA  3007               	movlw	7
   575     07CB  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   576     07D0  120A  118A  26A1  120A  118A  	fcall	_dat
   577     07D5                     l985:
   578                           
   579                           ;main.c: 60:     dat(i2c_read_byte(0x0008));
   580     07D5  3008               	movlw	8
   581     07D6  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   582     07DB  120A  118A  26A1  120A  118A  	fcall	_dat
   583     07E0                     l987:
   584                           
   585                           ;main.c: 61:     dat(i2c_read_byte(0x0009));
   586     07E0  3009               	movlw	9
   587     07E1  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   588     07E6  120A  118A  26A1  120A  118A  	fcall	_dat
   589     07EB                     l989:
   590                           
   591                           ;main.c: 62:     dat(i2c_read_byte(0x000a));
   592     07EB  300A               	movlw	10
   593     07EC  120A  118A  26FF  120A  118A  	fcall	_i2c_read_byte
   594     07F1  120A  118A  26A1  120A  118A  	fcall	_dat
   595     07F6                     l67:	
   596                           ;main.c: 64:     while(1);
   597                           
   598     07F6                     l68:
   599     07F6  2FF6               	goto	l67
   600     07F7  120A  118A  2800   	ljmp	start
   601     07FA                     __end_of_main:
   602                           
   603                           	psect	text1
   604     061A                     __ptext1:	
   605 ;; *************** function _show *****************
   606 ;; Defined at:
   607 ;;		line 179 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  s               1    wreg     PTR unsigned char 
   610 ;;		 -> STR_4(11), STR_2(11), STR_1(17), 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  s               1    1[COMMON] PTR unsigned char 
   613 ;;		 -> STR_4(11), STR_2(11), STR_1(17), 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         1       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0
   626 ;;      Totals:         1       0       0       0       0
   627 ;;Total ram usage:        1 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 1
   630 ;; This function calls:
   631 ;;		_dat
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637     061A                     _show:	
   638                           ;psect for function _show
   639                           
   640                           
   641                           ;incstack = 0
   642                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   643                           ;show@s stored from wreg
   644     061A  00F1               	movwf	show@s
   645     061B                     l923:
   646                           
   647                           ;main.c: 179: void show(unsigned char *s);main.c: 180: {;main.c: 181:     while(*s) {
   648     061B  2E2C               	goto	l929
   649     061C                     l925:
   650                           
   651                           ;main.c: 182:         dat(*s++);
   652     061C  0871               	movf	show@s,w
   653     061D  0084               	movwf	4
   654     061E  120A  118A  2003  120A  118A  	fcall	stringdir
   655     0623  120A  118A  26A1  120A  118A  	fcall	_dat
   656     0628                     l927:
   657     0628  3001               	movlw	1
   658     0629  00FF               	movwf	btemp+1
   659     062A  087F               	movf	btemp+1,w
   660     062B  07F1               	addwf	show@s,f
   661     062C                     l929:
   662                           
   663                           ;main.c: 181:     while(*s) {
   664     062C  0871               	movf	show@s,w
   665     062D  0084               	movwf	4
   666     062E  120A  118A  2003  120A  118A  	fcall	stringdir
   667     0633  3A00               	xorlw	0
   668     0634  1D03               	skipz
   669     0635  2E37               	goto	u121
   670     0636  2E38               	goto	u120
   671     0637                     u121:
   672     0637  2E1C               	goto	l925
   673     0638                     u120:
   674     0638                     l143:
   675     0638  0008               	return
   676     0639                     __end_of_show:
   677                           
   678                           	psect	text2
   679     06A1                     __ptext2:	
   680 ;; *************** function _dat *****************
   681 ;; Defined at:
   682 ;;		line 170 in file "main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  b               1    wreg     unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  b               1    0[COMMON] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, btemp+1
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         1       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         1       0       0       0       0
   700 ;;Total ram usage:        1 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;;		_show
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710     06A1                     _dat:	
   711                           ;psect for function _dat
   712                           
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _dat: [wreg+status,2+btemp+1]
   716                           ;dat@b stored from wreg
   717     06A1  00F0               	movwf	dat@b
   718     06A2                     l755:
   719                           
   720                           ;main.c: 170: void dat(unsigned char b);main.c: 171: {;main.c: 172:     PORTB=b;
   721     06A2  0870               	movf	dat@b,w
   722     06A3  1283               	bcf	3,5	;RP0=0, select bank0
   723     06A4  1303               	bcf	3,6	;RP1=0, select bank0
   724     06A5  0086               	movwf	6	;volatile
   725     06A6                     l757:
   726                           
   727                           ;main.c: 173:     RC0=1;
   728     06A6  1407               	bsf	7,0	;volatile
   729     06A7                     l759:
   730                           
   731                           ;main.c: 174:     RC1=0;
   732     06A7  1087               	bcf	7,1	;volatile
   733     06A8                     l761:
   734                           
   735                           ;main.c: 175:     RC2=1;
   736     06A8  1507               	bsf	7,2	;volatile
   737     06A9                     l763:
   738                           
   739                           ;main.c: 176:     for(i=0;i<1000;i++);
   740     06A9  01F4               	clrf	_i
   741     06AA  01F5               	clrf	_i+1
   742     06AB                     l765:
   743     06AB  0875               	movf	_i+1,w
   744     06AC  3A80               	xorlw	128
   745     06AD  00FF               	movwf	btemp+1
   746     06AE  3083               	movlw	131
   747     06AF  027F               	subwf	btemp+1,w
   748     06B0  1D03               	skipz
   749     06B1  2EB4               	goto	u35
   750     06B2  30E8               	movlw	232
   751     06B3  0274               	subwf	_i,w
   752     06B4                     u35:
   753     06B4  1C03               	skipc
   754     06B5  2EB7               	goto	u31
   755     06B6  2EB8               	goto	u30
   756     06B7                     u31:
   757     06B7  2EB9               	goto	l769
   758     06B8                     u30:
   759     06B8  2EC0               	goto	l136
   760     06B9                     l769:
   761     06B9  3001               	movlw	1
   762     06BA  07F4               	addwf	_i,f
   763     06BB  1803               	skipnc
   764     06BC  0AF5               	incf	_i+1,f
   765     06BD  3000               	movlw	0
   766     06BE  07F5               	addwf	_i+1,f
   767     06BF  2EAB               	goto	l765
   768     06C0                     l136:
   769                           
   770                           ;main.c: 177:     RC2=0;
   771     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   772     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   773     06C2  1107               	bcf	7,2	;volatile
   774     06C3                     l137:
   775     06C3  0008               	return
   776     06C4                     __end_of_dat:
   777                           
   778                           	psect	text3
   779     0639                     __ptext3:	
   780 ;; *************** function _lcd_init *****************
   781 ;; Defined at:
   782 ;;		line 153 in file "main.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 1
   803 ;; This function calls:
   804 ;;		_cmd
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810     0639                     _lcd_init:	
   811                           ;psect for function _lcd_init
   812                           
   813     0639                     l801:	
   814                           ;incstack = 0
   815                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   816                           
   817                           
   818                           ;main.c: 155:     TRISB=TRISC0=TRISC1=TRISC2=0;
   819     0639  1683               	bsf	3,5	;RP0=1, select bank1
   820     063A  1303               	bcf	3,6	;RP1=0, select bank1
   821     063B  1107               	bcf	7,2	;volatile
   822     063C  1087               	bcf	7,1	;volatile
   823     063D  1007               	bcf	7,0	;volatile
   824     063E  3000               	movlw	0
   825     063F  1807               	btfsc	7,0	;volatile
   826     0640  3001               	movlw	1
   827     0641  0086               	movwf	6	;volatile
   828     0642                     l803:
   829                           
   830                           ;main.c: 156:     cmd(0x38);
   831     0642  3038               	movlw	56
   832     0643  120A  118A  267E  120A  118A  	fcall	_cmd
   833     0648                     l805:
   834                           
   835                           ;main.c: 157:     cmd(0x0c);
   836     0648  300C               	movlw	12
   837     0649  120A  118A  267E  120A  118A  	fcall	_cmd
   838     064E                     l807:
   839                           
   840                           ;main.c: 158:     cmd(0x06);
   841     064E  3006               	movlw	6
   842     064F  120A  118A  267E  120A  118A  	fcall	_cmd
   843     0654                     l809:
   844                           
   845                           ;main.c: 159:     cmd(0x80);
   846     0654  3080               	movlw	128
   847     0655  120A  118A  267E  120A  118A  	fcall	_cmd
   848     065A                     l127:
   849     065A  0008               	return
   850     065B                     __end_of_lcd_init:
   851                           
   852                           	psect	text4
   853     067E                     __ptext4:	
   854 ;; *************** function _cmd *****************
   855 ;; Defined at:
   856 ;;		line 161 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  a               1    wreg     unsigned char 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  a               1    0[COMMON] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, btemp+1
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         1       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         1       0       0       0       0
   874 ;;Total ram usage:        1 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;;		_lcd_init
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884     067E                     _cmd:	
   885                           ;psect for function _cmd
   886                           
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _cmd: [wreg+status,2+btemp+1]
   890                           ;cmd@a stored from wreg
   891     067E  00F0               	movwf	cmd@a
   892     067F                     l737:
   893                           
   894                           ;main.c: 161: void cmd(unsigned char a);main.c: 162: {;main.c: 163:     PORTB=a;
   895     067F  0870               	movf	cmd@a,w
   896     0680  1283               	bcf	3,5	;RP0=0, select bank0
   897     0681  1303               	bcf	3,6	;RP1=0, select bank0
   898     0682  0086               	movwf	6	;volatile
   899     0683                     l739:
   900                           
   901                           ;main.c: 164:     RC0=0;
   902     0683  1007               	bcf	7,0	;volatile
   903     0684                     l741:
   904                           
   905                           ;main.c: 165:     RC1=0;
   906     0684  1087               	bcf	7,1	;volatile
   907     0685                     l743:
   908                           
   909                           ;main.c: 166:     RC2=1;
   910     0685  1507               	bsf	7,2	;volatile
   911     0686                     l745:
   912                           
   913                           ;main.c: 167:     for(i=0;i<1000;i++);
   914     0686  01F4               	clrf	_i
   915     0687  01F5               	clrf	_i+1
   916     0688                     l747:
   917     0688  0875               	movf	_i+1,w
   918     0689  3A80               	xorlw	128
   919     068A  00FF               	movwf	btemp+1
   920     068B  3083               	movlw	131
   921     068C  027F               	subwf	btemp+1,w
   922     068D  1D03               	skipz
   923     068E  2E91               	goto	u25
   924     068F  30E8               	movlw	232
   925     0690  0274               	subwf	_i,w
   926     0691                     u25:
   927     0691  1C03               	skipc
   928     0692  2E94               	goto	u21
   929     0693  2E95               	goto	u20
   930     0694                     u21:
   931     0694  2E96               	goto	l751
   932     0695                     u20:
   933     0695  2E9D               	goto	l131
   934     0696                     l751:
   935     0696  3001               	movlw	1
   936     0697  07F4               	addwf	_i,f
   937     0698  1803               	skipnc
   938     0699  0AF5               	incf	_i+1,f
   939     069A  3000               	movlw	0
   940     069B  07F5               	addwf	_i+1,f
   941     069C  2E88               	goto	l747
   942     069D                     l131:
   943                           
   944                           ;main.c: 168:     RC2=0;
   945     069D  1283               	bcf	3,5	;RP0=0, select bank0
   946     069E  1303               	bcf	3,6	;RP1=0, select bank0
   947     069F  1107               	bcf	7,2	;volatile
   948     06A0                     l132:
   949     06A0  0008               	return
   950     06A1                     __end_of_cmd:
   951                           
   952                           	psect	text5
   953     06C4                     __ptext5:	
   954 ;; *************** function _i2c_send_byte *****************
   955 ;; Defined at:
   956 ;;		line 118 in file "main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  addr            1    wreg     unsigned char 
   959 ;;  count           1    1[COMMON] PTR unsigned char 
   960 ;;		 -> STR_3(12), 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  addr            1    2[COMMON] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         1       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0
   975 ;;      Totals:         2       0       0       0       0
   976 ;;Total ram usage:        2 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 2
   979 ;; This function calls:
   980 ;;		_i2c_send
   981 ;;		_i2c_start
   982 ;;		_i2c_stop
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     06C4                     _i2c_send_byte:	
   989                           ;psect for function _i2c_send_byte
   990                           
   991                           
   992                           ;incstack = 0
   993                           ; Regs used in _i2c_send_byte: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   994                           ;i2c_send_byte@addr stored from wreg
   995     06C4  00F2               	movwf	i2c_send_byte@addr
   996     06C5                     l931:
   997                           
   998                           ;main.c: 118: void i2c_send_byte(unsigned char addr,unsigned char *count);main.c: 119: {
      +                          ;main.c: 120:     i2c_start();
   999     06C5  120A  118A  25D4  120A  118A  	fcall	_i2c_start
  1000     06CA                     l933:
  1001                           
  1002                           ;main.c: 121:     i2c_send(0xA0);
  1003     06CA  30A0               	movlw	160
  1004     06CB  120A  118A  25F3  120A  118A  	fcall	_i2c_send
  1005     06D0                     l935:
  1006                           
  1007                           ;main.c: 122:     i2c_send(addr>>8);
  1008     06D0  3000               	movlw	0
  1009     06D1  120A  118A  25F3  120A  118A  	fcall	_i2c_send
  1010     06D6                     l937:
  1011                           
  1012                           ;main.c: 123:     i2c_send(addr);
  1013     06D6  0872               	movf	i2c_send_byte@addr,w
  1014     06D7  120A  118A  25F3  120A  118A  	fcall	_i2c_send
  1015                           
  1016                           ;main.c: 124:     while(*count) {
  1017     06DC  2EED               	goto	l943
  1018     06DD                     l939:
  1019                           
  1020                           ;main.c: 125:         i2c_send(*count++);
  1021     06DD  0871               	movf	i2c_send_byte@count,w
  1022     06DE  0084               	movwf	4
  1023     06DF  120A  118A  2003  120A  118A  	fcall	stringdir
  1024     06E4  120A  118A  25F3  120A  118A  	fcall	_i2c_send
  1025     06E9                     l941:
  1026     06E9  3001               	movlw	1
  1027     06EA  00FF               	movwf	btemp+1
  1028     06EB  087F               	movf	btemp+1,w
  1029     06EC  07F1               	addwf	i2c_send_byte@count,f
  1030     06ED                     l943:
  1031                           
  1032                           ;main.c: 124:     while(*count) {
  1033     06ED  0871               	movf	i2c_send_byte@count,w
  1034     06EE  0084               	movwf	4
  1035     06EF  120A  118A  2003  120A  118A  	fcall	stringdir
  1036     06F4  3A00               	xorlw	0
  1037     06F5  1D03               	skipz
  1038     06F6  2EF8               	goto	u131
  1039     06F7  2EF9               	goto	u130
  1040     06F8                     u131:
  1041     06F8  2EDD               	goto	l939
  1042     06F9                     u130:
  1043     06F9                     l945:
  1044                           
  1045                           ;main.c: 127:     i2c_stop();
  1046     06F9  120A  118A  25CB  120A  118A  	fcall	_i2c_stop
  1047     06FE                     l114:
  1048     06FE  0008               	return
  1049     06FF                     __end_of_i2c_send_byte:
  1050                           
  1051                           	psect	text6
  1052     05D4                     __ptext6:	
  1053 ;; *************** function _i2c_start *****************
  1054 ;; Defined at:
  1055 ;;		line 80 in file "main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		status,2, status,0, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 1
  1076 ;; This function calls:
  1077 ;;		_waitmssp
  1078 ;; This function is called by:
  1079 ;;		_i2c_send_byte
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083     05D4                     _i2c_start:	
  1084                           ;psect for function _i2c_start
  1085                           
  1086     05D4                     l773:	
  1087                           ;incstack = 0
  1088                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
  1089                           
  1090                           
  1091                           ;main.c: 82:     SEN=1;
  1092     05D4  1683               	bsf	3,5	;RP0=1, select bank1
  1093     05D5  1303               	bcf	3,6	;RP1=0, select bank1
  1094     05D6  1411               	bsf	17,0	;volatile
  1095     05D7                     l775:
  1096                           
  1097                           ;main.c: 83:     waitmssp();
  1098     05D7  120A  118A  25BA  120A  118A  	fcall	_waitmssp
  1099     05DC                     l83:
  1100     05DC  0008               	return
  1101     05DD                     __end_of_i2c_start:
  1102                           
  1103                           	psect	text7
  1104     06FF                     __ptext7:	
  1105 ;; *************** function _i2c_read_byte *****************
  1106 ;; Defined at:
  1107 ;;		line 135 in file "main.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  addr            1    wreg     unsigned char 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  addr            1    1[COMMON] unsigned char 
  1112 ;;  rec             1    2[COMMON] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      unsigned char 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, pclath, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         2       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0
  1125 ;;      Totals:         2       0       0       0       0
  1126 ;;Total ram usage:        2 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 2
  1129 ;; This function calls:
  1130 ;;		_i2c_nak
  1131 ;;		_i2c_read
  1132 ;;		_i2c_restart
  1133 ;;		_i2c_send
  1134 ;;		_i2c_stop
  1135 ;;		_waitmssp
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141     06FF                     _i2c_read_byte:	
  1142                           ;psect for function _i2c_read_byte
  1143                           
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _i2c_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1147                           ;i2c_read_byte@addr stored from wreg
  1148     06FF  00F1               	movwf	i2c_read_byte@addr
  1149     0700                     l120:	
  1150                           ;main.c: 135: unsigned char i2c_read_byte(unsigned char addr);main.c: 136: {;main.c: 137
      +                          :     unsigned char rec;;main.c: 138: L: i2c_restart();
  1151                           
  1152     0700                     l855:
  1153     0700  120A  118A  25C2  120A  118A  	fcall	_i2c_restart
  1154     0705                     l857:
  1155                           
  1156                           ;main.c: 139:     SSPBUF=0xA0;
  1157     0705  30A0               	movlw	160
  1158     0706  1283               	bcf	3,5	;RP0=0, select bank0
  1159     0707  1303               	bcf	3,6	;RP1=0, select bank0
  1160     0708  0093               	movwf	19	;volatile
  1161     0709                     l859:
  1162                           
  1163                           ;main.c: 140:     waitmssp();
  1164     0709  120A  118A  25BA  120A  118A  	fcall	_waitmssp
  1165     070E                     l121:	
  1166                           ;main.c: 141:     while(ACKSTAT){goto L;}
  1167                           
  1168     070E  1683               	bsf	3,5	;RP0=1, select bank1
  1169     070F  1303               	bcf	3,6	;RP1=0, select bank1
  1170     0710  1B11               	btfsc	17,6	;volatile
  1171     0711  2F13               	goto	u111
  1172     0712  2F14               	goto	u110
  1173     0713                     u111:
  1174     0713  2F00               	goto	l120
  1175     0714                     u110:
  1176     0714                     l861:
  1177                           
  1178                           ;main.c: 142:     i2c_send(addr>>8);
  1179     0714  3000               	movlw	0
  1180     0715  120A  118A  25F3  120A  118A  	fcall	_i2c_send
  1181                           
  1182                           ;main.c: 143:     i2c_send(addr);
  1183     071A  0871               	movf	i2c_read_byte@addr,w
  1184     071B  120A  118A  25F3  120A  118A  	fcall	_i2c_send
  1185     0720                     l863:
  1186                           
  1187                           ;main.c: 144:     i2c_restart();
  1188     0720  120A  118A  25C2  120A  118A  	fcall	_i2c_restart
  1189     0725                     l865:
  1190                           
  1191                           ;main.c: 145:     i2c_send(0xA1);
  1192     0725  30A1               	movlw	161
  1193     0726  120A  118A  25F3  120A  118A  	fcall	_i2c_send
  1194     072B                     l867:
  1195                           
  1196                           ;main.c: 146:     rec=i2c_read();
  1197     072B  120A  118A  25E7  120A  118A  	fcall	_i2c_read
  1198     0730  00F2               	movwf	i2c_read_byte@rec
  1199     0731                     l869:
  1200                           
  1201                           ;main.c: 147:     i2c_nak();
  1202     0731  120A  118A  25DD  120A  118A  	fcall	_i2c_nak
  1203     0736                     l871:
  1204                           
  1205                           ;main.c: 148:     i2c_stop();
  1206     0736  120A  118A  25CB  120A  118A  	fcall	_i2c_stop
  1207                           
  1208                           ;main.c: 149:     return rec;
  1209     073B  0872               	movf	i2c_read_byte@rec,w
  1210     073C                     l124:
  1211     073C  0008               	return
  1212     073D                     __end_of_i2c_read_byte:
  1213                           
  1214                           	psect	text8
  1215     05CB                     __ptext8:	
  1216 ;; *************** function _i2c_stop *****************
  1217 ;; Defined at:
  1218 ;;		line 85 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		status,2, status,0, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 1
  1239 ;; This function calls:
  1240 ;;		_waitmssp
  1241 ;; This function is called by:
  1242 ;;		_i2c_send_byte
  1243 ;;		_i2c_read_byte
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247     05CB                     _i2c_stop:	
  1248                           ;psect for function _i2c_stop
  1249                           
  1250     05CB                     l777:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  1253                           
  1254                           
  1255                           ;main.c: 87:     PEN=1;
  1256     05CB  1683               	bsf	3,5	;RP0=1, select bank1
  1257     05CC  1303               	bcf	3,6	;RP1=0, select bank1
  1258     05CD  1511               	bsf	17,2	;volatile
  1259     05CE                     l779:
  1260                           
  1261                           ;main.c: 88:     waitmssp();
  1262     05CE  120A  118A  25BA  120A  118A  	fcall	_waitmssp
  1263     05D3                     l86:
  1264     05D3  0008               	return
  1265     05D4                     __end_of_i2c_stop:
  1266                           
  1267                           	psect	text9
  1268     05F3                     __ptext9:	
  1269 ;; *************** function _i2c_send *****************
  1270 ;; Defined at:
  1271 ;;		line 112 in file "main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  dat             1    wreg     unsigned char 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  dat             1    0[COMMON] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         0       0       0       0       0
  1286 ;;      Locals:         1       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0
  1288 ;;      Totals:         1       0       0       0       0
  1289 ;;Total ram usage:        1 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 1
  1292 ;; This function calls:
  1293 ;;		_waitmssp
  1294 ;; This function is called by:
  1295 ;;		_i2c_send_byte
  1296 ;;		_i2c_read_byte
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300     05F3                     _i2c_send:	
  1301                           ;psect for function _i2c_send
  1302                           
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _i2c_send: [wreg+status,2+status,0+pclath+cstack]
  1306                           ;i2c_send@dat stored from wreg
  1307     05F3  00F0               	movwf	i2c_send@dat
  1308     05F4                     l104:	
  1309                           ;main.c: 112: void i2c_send(unsigned char dat);main.c: 113: {;main.c: 114: L1: SSPBUF=da
      +                          t;
  1310                           
  1311     05F4                     l789:
  1312     05F4  0870               	movf	i2c_send@dat,w
  1313     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1314     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1315     05F7  0093               	movwf	19	;volatile
  1316     05F8                     l791:
  1317                           
  1318                           ;main.c: 115:     waitmssp();
  1319     05F8  120A  118A  25BA  120A  118A  	fcall	_waitmssp
  1320     05FD                     l105:	
  1321                           ;main.c: 116:     while(ACKSTAT){i2c_restart;goto L1;}
  1322                           
  1323     05FD  1683               	bsf	3,5	;RP0=1, select bank1
  1324     05FE  1303               	bcf	3,6	;RP1=0, select bank1
  1325     05FF  1B11               	btfsc	17,6	;volatile
  1326     0600  2E02               	goto	u41
  1327     0601  2E03               	goto	u40
  1328     0602                     u41:
  1329     0602  2DF4               	goto	l104
  1330     0603                     u40:
  1331     0603                     l108:
  1332     0603  0008               	return
  1333     0604                     __end_of_i2c_send:
  1334                           
  1335                           	psect	text10
  1336     05C2                     __ptext10:	
  1337 ;; *************** function _i2c_restart *****************
  1338 ;; Defined at:
  1339 ;;		line 90 in file "main.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		status,2, status,0, pclath, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 1
  1360 ;; This function calls:
  1361 ;;		_waitmssp
  1362 ;; This function is called by:
  1363 ;;		_i2c_read_byte
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367     05C2                     _i2c_restart:	
  1368                           ;psect for function _i2c_restart
  1369                           
  1370     05C2                     l781:	
  1371                           ;incstack = 0
  1372                           ; Regs used in _i2c_restart: [status,2+status,0+pclath+cstack]
  1373                           
  1374                           
  1375                           ;main.c: 92:     RSEN=1;
  1376     05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1377     05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1378     05C4  1491               	bsf	17,1	;volatile
  1379     05C5                     l783:
  1380                           
  1381                           ;main.c: 93:     waitmssp();
  1382     05C5  120A  118A  25BA  120A  118A  	fcall	_waitmssp
  1383     05CA                     l89:
  1384     05CA  0008               	return
  1385     05CB                     __end_of_i2c_restart:
  1386                           
  1387                           	psect	text11
  1388     05E7                     __ptext11:	
  1389 ;; *************** function _i2c_read *****************
  1390 ;; Defined at:
  1391 ;;		line 129 in file "main.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0
  1407 ;;      Temps:          0       0       0       0       0
  1408 ;;      Totals:         0       0       0       0       0
  1409 ;;Total ram usage:        0 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 1
  1412 ;; This function calls:
  1413 ;;		_waitmssp
  1414 ;; This function is called by:
  1415 ;;		_i2c_read_byte
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419     05E7                     _i2c_read:	
  1420                           ;psect for function _i2c_read
  1421                           
  1422     05E7                     l793:	
  1423                           ;incstack = 0
  1424                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1425                           
  1426                           
  1427                           ;main.c: 131:     RCEN=1;
  1428     05E7  1683               	bsf	3,5	;RP0=1, select bank1
  1429     05E8  1303               	bcf	3,6	;RP1=0, select bank1
  1430     05E9  1591               	bsf	17,3	;volatile
  1431     05EA                     l795:
  1432                           
  1433                           ;main.c: 132:     waitmssp();
  1434     05EA  120A  118A  25BA  120A  118A  	fcall	_waitmssp
  1435     05EF                     l797:
  1436                           
  1437                           ;main.c: 133:     return SSPBUF;
  1438     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1439     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1440     05F1  0813               	movf	19,w	;volatile
  1441     05F2                     l117:
  1442     05F2  0008               	return
  1443     05F3                     __end_of_i2c_read:
  1444                           
  1445                           	psect	text12
  1446     05DD                     __ptext12:	
  1447 ;; *************** function _i2c_nak *****************
  1448 ;; Defined at:
  1449 ;;		line 101 in file "main.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		status,2, status,0, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1463 ;;      Params:         0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 1
  1470 ;; This function calls:
  1471 ;;		_waitmssp
  1472 ;; This function is called by:
  1473 ;;		_i2c_read_byte
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477     05DD                     _i2c_nak:	
  1478                           ;psect for function _i2c_nak
  1479                           
  1480     05DD                     l785:	
  1481                           ;incstack = 0
  1482                           ; Regs used in _i2c_nak: [status,2+status,0+pclath+cstack]
  1483                           
  1484                           
  1485                           ;main.c: 103:     ACKDT=1;
  1486     05DD  1683               	bsf	3,5	;RP0=1, select bank1
  1487     05DE  1303               	bcf	3,6	;RP1=0, select bank1
  1488     05DF  1691               	bsf	17,5	;volatile
  1489                           
  1490                           ;main.c: 104:     ACKEN=1;
  1491     05E0  1611               	bsf	17,4	;volatile
  1492     05E1                     l787:
  1493                           
  1494                           ;main.c: 105:     waitmssp();
  1495     05E1  120A  118A  25BA  120A  118A  	fcall	_waitmssp
  1496     05E6                     l95:
  1497     05E6  0008               	return
  1498     05E7                     __end_of_i2c_nak:
  1499                           
  1500                           	psect	text13
  1501     05BA                     __ptext13:	
  1502 ;; *************** function _waitmssp *****************
  1503 ;; Defined at:
  1504 ;;		line 107 in file "main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		None
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_i2c_start
  1528 ;;		_i2c_stop
  1529 ;;		_i2c_restart
  1530 ;;		_i2c_nak
  1531 ;;		_i2c_send
  1532 ;;		_i2c_read
  1533 ;;		_i2c_read_byte
  1534 ;;		_i2c_ack
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538     05BA                     _waitmssp:	
  1539                           ;psect for function _waitmssp
  1540                           
  1541     05BA                     l735:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _waitmssp: []
  1544                           
  1545     05BA                     l98:	
  1546                           ;main.c: 109:     while(!SSPIF);
  1547                           
  1548     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1549     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1550     05BC  1D8C               	btfss	12,3	;volatile
  1551     05BD  2DBF               	goto	u11
  1552     05BE  2DC0               	goto	u10
  1553     05BF                     u11:
  1554     05BF  2DBA               	goto	l98
  1555     05C0                     u10:
  1556     05C0                     l100:
  1557                           
  1558                           ;main.c: 110:     SSPIF=0;
  1559     05C0  118C               	bcf	12,3	;volatile
  1560     05C1                     l101:
  1561     05C1  0008               	return
  1562     05C2                     __end_of_waitmssp:
  1563                           
  1564                           	psect	text14
  1565     0604                     __ptext14:	
  1566 ;; *************** function _i2c_init *****************
  1567 ;; Defined at:
  1568 ;;		line 74 in file "main.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       0       0       0       0
  1583 ;;      Locals:         0       0       0       0       0
  1584 ;;      Temps:          0       0       0       0       0
  1585 ;;      Totals:         0       0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595     0604                     _i2c_init:	
  1596                           ;psect for function _i2c_init
  1597                           
  1598     0604                     l811:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _i2c_init: [wreg]
  1601                           
  1602                           
  1603                           ;main.c: 76:     TRISC3=TRISC4=1;
  1604     0604  1683               	bsf	3,5	;RP0=1, select bank1
  1605     0605  1303               	bcf	3,6	;RP1=0, select bank1
  1606     0606  1607               	bsf	7,4	;volatile
  1607     0607  1A07               	btfsc	7,4	;volatile
  1608     0608  2E0A               	goto	u51
  1609     0609  2E0E               	goto	u50
  1610     060A                     u51:
  1611     060A  1683               	bsf	3,5	;RP0=1, select bank1
  1612     060B  1303               	bcf	3,6	;RP1=0, select bank1
  1613     060C  1587               	bsf	7,3	;volatile
  1614     060D  2E11               	goto	u64
  1615     060E                     u50:
  1616     060E  1683               	bsf	3,5	;RP0=1, select bank1
  1617     060F  1303               	bcf	3,6	;RP1=0, select bank1
  1618     0610  1187               	bcf	7,3	;volatile
  1619     0611                     u64:
  1620     0611                     l813:
  1621                           
  1622                           ;main.c: 77:     SSPCON=0x28;
  1623     0611  3028               	movlw	40
  1624     0612  1283               	bcf	3,5	;RP0=0, select bank0
  1625     0613  1303               	bcf	3,6	;RP1=0, select bank0
  1626     0614  0094               	movwf	20	;volatile
  1627                           
  1628                           ;main.c: 78:     SSPADD=((11059200/4)/100)-1;
  1629     0615  30FF               	movlw	255
  1630     0616  1683               	bsf	3,5	;RP0=1, select bank1
  1631     0617  1303               	bcf	3,6	;RP1=0, select bank1
  1632     0618  0093               	movwf	19	;volatile
  1633     0619                     l80:
  1634     0619  0008               	return
  1635     061A                     __end_of_i2c_init:
  1636                           
  1637                           	psect	text15
  1638     065B                     __ptext15:	
  1639 ;; *************** function _delay1 *****************
  1640 ;; Defined at:
  1641 ;;		line 66 in file "main.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  k               2    2[COMMON] unsigned int 
  1646 ;;  j               2    0[COMMON] unsigned int 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       0       0       0       0
  1657 ;;      Locals:         4       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0
  1659 ;;      Totals:         4       0       0       0       0
  1660 ;;Total ram usage:        4 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669     065B                     _delay1:	
  1670                           ;psect for function _delay1
  1671                           
  1672     065B                     l839:	
  1673                           ;incstack = 0
  1674                           ; Regs used in _delay1: [wreg+status,2]
  1675                           
  1676                           
  1677                           ;main.c: 68:     unsigned int j,k;;main.c: 69:     for(j=0;j<60000;j++) {
  1678     065B  01F0               	clrf	delay1@j
  1679     065C  01F1               	clrf	delay1@j+1
  1680     065D                     l845:
  1681                           
  1682                           ;main.c: 70:         for(k=0;k<2;k++);
  1683     065D  01F2               	clrf	delay1@k
  1684     065E  01F3               	clrf	delay1@k+1
  1685     065F                     l851:
  1686     065F  3001               	movlw	1
  1687     0660  07F2               	addwf	delay1@k,f
  1688     0661  1803               	skipnc
  1689     0662  0AF3               	incf	delay1@k+1,f
  1690     0663  3000               	movlw	0
  1691     0664  07F3               	addwf	delay1@k+1,f
  1692     0665  3000               	movlw	0
  1693     0666  0273               	subwf	delay1@k+1,w
  1694     0667  3002               	movlw	2
  1695     0668  1903               	skipnz
  1696     0669  0272               	subwf	delay1@k,w
  1697     066A  1C03               	skipc
  1698     066B  2E6D               	goto	u91
  1699     066C  2E6E               	goto	u90
  1700     066D                     u91:
  1701     066D  2E5F               	goto	l851
  1702     066E                     u90:
  1703     066E                     l853:
  1704                           
  1705                           ;main.c: 71:     }
  1706     066E  3001               	movlw	1
  1707     066F  07F0               	addwf	delay1@j,f
  1708     0670  1803               	skipnc
  1709     0671  0AF1               	incf	delay1@j+1,f
  1710     0672  3000               	movlw	0
  1711     0673  07F1               	addwf	delay1@j+1,f
  1712     0674  30EA               	movlw	234
  1713     0675  0271               	subwf	delay1@j+1,w
  1714     0676  3060               	movlw	96
  1715     0677  1903               	skipnz
  1716     0678  0270               	subwf	delay1@j,w
  1717     0679  1C03               	skipc
  1718     067A  2E7C               	goto	u101
  1719     067B  2E7D               	goto	u100
  1720     067C                     u101:
  1721     067C  2E5D               	goto	l845
  1722     067D                     u100:
  1723     067D                     l77:
  1724     067D  0008               	return
  1725     067E                     __end_of_delay1:
  1726     007E                     btemp	set	126	;btemp
  1727     007E                     wtemp0	set	126
  1728                           
  1729                           	psect	idloc
  1730                           
  1731                           ;Config register IDLOC0 @ 0x2000
  1732                           ;	unspecified, using default values
  1733     2000                     	org	8192
  1734     2000  3FFF               	dw	16383
  1735                           
  1736                           ;Config register IDLOC1 @ 0x2001
  1737                           ;	unspecified, using default values
  1738     2001                     	org	8193
  1739     2001  3FFF               	dw	16383
  1740                           
  1741                           ;Config register IDLOC2 @ 0x2002
  1742                           ;	unspecified, using default values
  1743     2002                     	org	8194
  1744     2002  3FFF               	dw	16383
  1745                           
  1746                           ;Config register IDLOC3 @ 0x2003
  1747                           ;	unspecified, using default values
  1748     2003                     	org	8195
  1749     2003  3FFF               	dw	16383
  1750                           
  1751                           	psect	config
  1752                           
  1753                           ;Config register CONFIG @ 0x2007
  1754                           ;	Oscillator Selection bits
  1755                           ;	FOSC = HS, HS oscillator
  1756                           ;	Watchdog Timer Enable bit
  1757                           ;	WDTE = OFF, WDT disabled
  1758                           ;	Power-up Timer Enable bit
  1759                           ;	PWRTE = OFF, PWRT disabled
  1760                           ;	Brown-out Reset Enable bit
  1761                           ;	BOREN = OFF, BOR disabled
  1762                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1763                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1764                           ;	Data EEPROM Memory Code Protection bit
  1765                           ;	CPD = OFF, Data EEPROM code protection off
  1766                           ;	Flash Program Memory Write Enable bits
  1767                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1768                           ;	In-Circuit Debugger Mode bit
  1769                           ;	DEBUG = 0x1, unprogrammed default
  1770                           ;	Flash Program Memory Code Protection bit
  1771                           ;	CP = OFF, Code protection off
  1772     2007                     	org	8199
  1773     2007  3F3A               	dw	16186

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[11]), STR_2(CODE[11]), STR_1(CODE[17]), 

    i2c_send_byte@count	PTR unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_delay1
    _show->_dat
    _lcd_init->_cmd
    _i2c_send_byte->_i2c_send
    _i2c_read_byte->_i2c_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     467
                                _cmd
                                _dat
                             _delay1
                           _i2c_init
                      _i2c_read_byte
                      _i2c_send_byte
                           _lcd_init
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 1     1      0     159
                                              1 COMMON     1     1      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_send_byte                                        2     1      1     158
                                              1 COMMON     2     1      1
                           _i2c_send
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (1) _i2c_read_byte                                        2     2      0      45
                                              1 COMMON     2     2      0
                            _i2c_nak
                           _i2c_read
                        _i2c_restart
                           _i2c_send
                           _i2c_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_send                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _i2c_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (3) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay1                                               4     4      0      60
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _dat
   _delay1
   _i2c_init
   _i2c_read_byte
     _i2c_nak
       _waitmssp
     _i2c_read
       _waitmssp
     _i2c_restart
       _waitmssp
     _i2c_send
       _waitmssp
     _i2c_stop
       _waitmssp
     _waitmssp
   _i2c_send_byte
     _i2c_send
     _i2c_start
       _waitmssp
     _i2c_stop
   _lcd_init
     _cmd
   _show
     _dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 05 03:11:40 2023

                      _i 0074                        pc 0002                       l80 0619  
                     l83 05DC                       l67 07F6                       l68 07F6  
                     l77 067D                       l86 05D3                       l95 05E6  
                     l89 05CA                       l98 05BA                       u10 05C0  
                     u11 05BF                       u20 0695                       u21 0694  
                     u30 06B8                       u31 06B7                       u40 0603  
                     u41 0602                       u25 0691                       u50 060E  
                     u51 060A                       u35 06B4                       u64 0611  
                     u90 066E                       u91 066D                       fsr 0004  
                    l100 05C0                      l101 05C1                      l104 05F4  
                    l120 0700                      l105 05FD                      l121 070E  
                    l114 06FE                      l131 069D                      l108 0603  
                    l124 073C                      l132 06A0                      l117 05F2  
                    l127 065A                      l143 0638                      l136 06C0  
                    l137 06C3                      l801 0639                      l811 0604  
                    l803 0642                      l813 0611                      l741 0684  
                    l805 0648                      l735 05BA                      l751 0696  
                    l743 0685                      l807 064E                      l745 0686  
                    l737 067F                      l809 0654                      l761 06A8  
                    l851 065F                      l931 06C5                      l747 0688  
                    l739 0683                      l763 06A9                      l755 06A2  
                    l923 061B                      l853 066E                      l845 065D  
                    l781 05C2                      l861 0714                      l773 05D4  
                    l941 06E9                      l933 06CA                      l765 06AB  
                    l757 06A6                      l925 061C                      l839 065B  
                    l783 05C5                      l791 05F8                      l871 0736  
                    l863 0720                      l855 0700                      l775 05D7  
                    l943 06ED                      l935 06D0                      l759 06A7  
                    l927 0628                      l951 0747                      l785 05DD  
                    l793 05E7                      l777 05CB                      l865 0725  
                    l857 0705                      l945 06F9                      l937 06D6  
                    l769 06B9                      l929 062C                      l961 0766  
                    l953 074D                      l787 05E1                      l795 05EA  
                    l779 05CE                      l867 072B                      l859 0709  
                    l939 06DD                      l971 0788                      l963 076C  
                    l955 0753                      l947 073D                      l797 05EF  
                    l789 05F4                      l869 0731                      l981 07BF  
                    l973 0793                      l965 0772                      l957 0759  
                    l949 0742                      l983 07CA                      l975 079E  
                    l967 0777                      l959 0761                      l985 07D5  
                    l977 07A9                      l969 077D                      l987 07E0  
                    l979 07B4                      l989 07EB                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      u100 067D  
                    u101 067C                      u110 0714                      u111 0713  
                    u120 0638                      u121 0637                      u130 06F9  
                    u131 06F8                      _PEN 048A                      _SEN 0488  
                    _dat 06A1                      _cmd 067E                      fsr0 0004  
                   ?_dat 0070                     ?_cmd 0070                     STR_1 0009  
                   STR_2 0031                     STR_3 001A                     STR_4 0026  
                   _RCEN 048B                     _RSEN 0489            _i2c_read_byte 06FF  
                   dat@b 0070                     cmd@a 0070                     _main 073D  
                   _show 061A                     btemp 007E                     start 0000  
          ??_i2c_restart 0070            _i2c_send_byte 06C4          __end_of_i2c_nak 05E7  
                  ??_dat 0070                    ??_cmd 0070                    ?_main 0070  
                  _ACKEN 048C                    _ACKDT 048D                    ?_show 0070  
                  _PORTB 0006                    _TRISB 0086                    _SSPIF 0063  
            i2c_send@dat 0070       i2c_send_byte@count 0071                    pclath 000A  
         ?_i2c_read_byte 0070                    show@s 0071                    status 0003  
                  wtemp0 007E           ?_i2c_send_byte 0071          __initialization 07FA  
           __end_of_main 07FA             __end_of_show 0639         __end_of_i2c_init 061A  
       __end_of_i2c_read 05F3         __end_of_i2c_send 0604         __end_of_i2c_stop 05D4  
    __end_of_i2c_restart 05CB                   ??_main 0074                   ??_show 0071  
                 _SSPADD 0093                   _TRISC0 0438                   _TRISC1 0439  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                ??_i2c_nak 0070  
       __end_of_lcd_init 065B                   _delay1 065B         __end_of_waitmssp 05C2  
        ??_i2c_read_byte 0071  __end_of__initialization 07FC          ??_i2c_send_byte 0072  
         __pcstackCOMMON 0070              _i2c_restart 05C2        __end_of_i2c_start 05DD  
              ?_i2c_init 0070                ?_i2c_read 0070                ?_i2c_send 0070  
              ?_i2c_stop 0070               __pmaintext 073D                  ?_delay1 0070  
                _ACKSTAT 048E                ?_lcd_init 0070               __stringtab 0003  
             ??_i2c_init 0070               ??_i2c_read 0070               ??_i2c_send 0070  
             ??_i2c_stop 0070                  _i2c_nak 05DD                ?_waitmssp 0070  
                __ptext1 061A                  __ptext2 06A1                  __ptext3 0639  
                __ptext4 067E                  __ptext5 06C4                  __ptext6 05D4  
                __ptext7 06FF                  __ptext8 05CB                  __ptext9 05F3  
                delay1@j 0070                  delay1@k 0072               ??_lcd_init 0071  
   end_of_initialization 07FC               ??_waitmssp 0070             ?_i2c_restart 0070  
         __end_of_delay1 067E        i2c_send_byte@addr 0072      start_initialization 07FA  
            __end_of_dat 06C4              __end_of_cmd 06A1                _i2c_start 05D4  
  __end_of_i2c_read_byte 073D    __end_of_i2c_send_byte 06FF                 ??_delay1 0070  
            __pbssCOMMON 0074                ___latbits 0002               ?_i2c_start 0070  
               ?_i2c_nak 0070                __pstrings 0003              __stringbase 0008  
            ??_i2c_start 0070                 _i2c_init 0604                 _i2c_read 05E7  
               _i2c_send 05F3                 _i2c_stop 05CB       __end_of__stringtab 0009  
               __ptext10 05C2                 __ptext11 05E7                 __ptext12 05DD  
               __ptext13 05BA                 __ptext14 0604                 __ptext15 065B  
               _lcd_init 0639                 _waitmssp 05BA                stringcode 0003  
               stringdir 0003                 stringtab 0003        i2c_read_byte@addr 0071  
       i2c_read_byte@rec 0072  
