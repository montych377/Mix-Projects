

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 29 23:20:54 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0008                     _PORTD	set	8
   170     0013                     _SSPBUF	set	19
   171     0014                     _SSPCON	set	20
   172     0088                     _TRISD	set	136
   173     0094                     _SSPSTATbits	set	148
   174     0094                     _SSPSTAT	set	148
   175     043D                     _TRISC5	set	1085
   176     043B                     _TRISC3	set	1083
   177                           
   178                           	psect	cinit
   179     07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FC                     __initialization:
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2FC3   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_SPI_Initialize:
   193     0070                     ??_SPI_Initialize:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     ?_SPI_WriteData:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     ??_SPI_WriteData:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_SPI_ReceiveData:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_SPI_ReceiveData:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     SPI_WriteData@data:	
   212                           ; 1 bytes @ 0x0
   213                           
   214                           
   215                           ; 1 bytes @ 0x0
   216     0070                     	ds	1
   217     0071                     ??_main:
   218                           
   219                           ; 1 bytes @ 0x1
   220     0071                     	ds	3
   221     0074                     main@character:
   222                           
   223                           ; 1 bytes @ 0x4
   224     0074                     	ds	1
   225                           
   226                           	psect	maintext
   227     07C3                     __pmaintext:	
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 34 in file "newmain.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  character       1    4[COMMON] unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, pclath, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : B00/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   247 ;;      Params:         0       0       0       0       0
   248 ;;      Locals:         1       0       0       0       0
   249 ;;      Temps:          3       0       0       0       0
   250 ;;      Totals:         4       0       0       0       0
   251 ;;Total ram usage:        4 bytes
   252 ;; Hardware stack levels required when called: 1
   253 ;; This function calls:
   254 ;;		_SPI_Initialize
   255 ;;		_SPI_ReceiveData
   256 ;;		_SPI_WriteData
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262     07C3                     _main:	
   263                           ;psect for function _main
   264                           
   265     07C3                     l661:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   268                           
   269                           
   270                           ;newmain.c: 35:     TRISD = 0x00;
   271     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   272     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   273     07C5  0188               	clrf	8	;volatile
   274                           
   275                           ;newmain.c: 36:     PORTD = 0x00;
   276     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   277     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   278     07C8  0188               	clrf	8	;volatile
   279     07C9                     l663:
   280                           
   281                           ;newmain.c: 37:     char character = 'A';
   282     07C9  3041               	movlw	65
   283     07CA  00F4               	movwf	main@character
   284     07CB                     l665:
   285                           
   286                           ;newmain.c: 38:     SPI_Initialize();
   287     07CB  120A  118A  27A3  120A  118A  	fcall	_SPI_Initialize
   288     07D0                     l667:
   289                           
   290                           ;newmain.c: 40:          SPI_WriteData(character);
   291     07D0  0874               	movf	main@character,w
   292     07D1  120A  118A  27B7  120A  118A  	fcall	_SPI_WriteData
   293     07D6                     l669:
   294                           
   295                           ;newmain.c: 41:          _delay((unsigned long)((100)*(8000000/4000.0)));
   296     07D6  3002               	movlw	2
   297     07D7  00F3               	movwf	??_main+2
   298     07D8  3004               	movlw	4
   299     07D9  00F2               	movwf	??_main+1
   300     07DA  30BA               	movlw	186
   301     07DB  00F1               	movwf	??_main
   302     07DC                     u47:
   303     07DC  0BF1               	decfsz	??_main,f
   304     07DD  2FDC               	goto	u47
   305     07DE  0BF2               	decfsz	??_main+1,f
   306     07DF  2FDC               	goto	u47
   307     07E0  0BF3               	decfsz	??_main+2,f
   308     07E1  2FDC               	goto	u47
   309     07E2  0000               	nop
   310     07E3                     l671:
   311                           
   312                           ;newmain.c: 43:          PORTD = SPI_ReceiveData();
   313     07E3  120A  118A  27AD  120A  118A  	fcall	_SPI_ReceiveData
   314     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   315     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   316     07EA  0088               	movwf	8	;volatile
   317     07EB                     l673:
   318                           
   319                           ;newmain.c: 44:          _delay((unsigned long)((100)*(8000000/4000.0)));
   320     07EB  3002               	movlw	2
   321     07EC  00F3               	movwf	??_main+2
   322     07ED  3004               	movlw	4
   323     07EE  00F2               	movwf	??_main+1
   324     07EF  30BA               	movlw	186
   325     07F0  00F1               	movwf	??_main
   326     07F1                     u57:
   327     07F1  0BF1               	decfsz	??_main,f
   328     07F2  2FF1               	goto	u57
   329     07F3  0BF2               	decfsz	??_main+1,f
   330     07F4  2FF1               	goto	u57
   331     07F5  0BF3               	decfsz	??_main+2,f
   332     07F6  2FF1               	goto	u57
   333     07F7  0000               	nop
   334     07F8  2FD0               	goto	l667
   335     07F9  120A  118A  2800   	ljmp	start
   336     07FC                     __end_of_main:
   337                           
   338                           	psect	text1
   339     07B7                     __ptext1:	
   340 ;; *************** function _SPI_WriteData *****************
   341 ;; Defined at:
   342 ;;		line 20 in file "newmain.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  data            1    wreg     unsigned char 
   345 ;; Auto vars:     Size  Location     Type
   346 ;;  data            1    0[COMMON] unsigned char 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         1       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0
   359 ;;      Totals:         1       0       0       0       0
   360 ;;Total ram usage:        1 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;;		_SPI_WriteString
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370     07B7                     _SPI_WriteData:	
   371                           ;psect for function _SPI_WriteData
   372                           
   373                           
   374                           ;incstack = 0
   375                           ; Regs used in _SPI_WriteData: [wreg]
   376                           ;SPI_WriteData@data stored from wreg
   377     07B7  00F0               	movwf	SPI_WriteData@data
   378     07B8                     l645:
   379                           
   380                           ;newmain.c: 21:     SSPBUF = data;
   381     07B8  0870               	movf	SPI_WriteData@data,w
   382     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   383     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   384     07BB  0093               	movwf	19	;volatile
   385     07BC                     l24:	
   386                           ;newmain.c: 22:     while (!SSPSTATbits.BF);
   387                           
   388     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   389     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   390     07BE  1C14               	btfss	20,0	;volatile
   391     07BF  2FC1               	goto	u11
   392     07C0  2FC2               	goto	u10
   393     07C1                     u11:
   394     07C1  2FBC               	goto	l24
   395     07C2                     u10:
   396     07C2                     l27:
   397     07C2  0008               	return
   398     07C3                     __end_of_SPI_WriteData:
   399                           
   400                           	psect	text2
   401     07AD                     __ptext2:	
   402 ;; *************** function _SPI_ReceiveData *****************
   403 ;; Defined at:
   404 ;;		line 24 in file "newmain.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      unsigned char 
   411 ;; Registers used:
   412 ;;		wreg
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used: 1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431     07AD                     _SPI_ReceiveData:	
   432                           ;psect for function _SPI_ReceiveData
   433                           
   434     07AD                     l647:	
   435                           ;incstack = 0
   436                           ; Regs used in _SPI_ReceiveData: [wreg]
   437                           
   438     07AD                     l30:	
   439                           ;newmain.c: 25:     while (!SSPSTATbits.BF);
   440                           
   441     07AD  1683               	bsf	3,5	;RP0=1, select bank1
   442     07AE  1303               	bcf	3,6	;RP1=0, select bank1
   443     07AF  1C14               	btfss	20,0	;volatile
   444     07B0  2FB2               	goto	u21
   445     07B1  2FB3               	goto	u20
   446     07B2                     u21:
   447     07B2  2FAD               	goto	l30
   448     07B3                     u20:
   449     07B3                     l649:
   450                           
   451                           ;newmain.c: 26:     return SSPBUF;
   452     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   453     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   454     07B5  0813               	movf	19,w	;volatile
   455     07B6                     l33:
   456     07B6  0008               	return
   457     07B7                     __end_of_SPI_ReceiveData:
   458                           
   459                           	psect	text3
   460     07A3                     __ptext3:	
   461 ;; *************** function _SPI_Initialize *****************
   462 ;; Defined at:
   463 ;;		line 14 in file "newmain.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490     07A3                     _SPI_Initialize:	
   491                           ;psect for function _SPI_Initialize
   492                           
   493     07A3                     l639:	
   494                           ;incstack = 0
   495                           ; Regs used in _SPI_Initialize: [wreg+status,2]
   496                           
   497                           
   498                           ;newmain.c: 15:     TRISC3 = 0;
   499     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   500     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   501     07A5  1187               	bcf	7,3	;volatile
   502                           
   503                           ;newmain.c: 16:     TRISC5 = 0;
   504     07A6  1287               	bcf	7,5	;volatile
   505     07A7                     l641:
   506                           
   507                           ;newmain.c: 17:     SSPSTAT = 0b00000000;
   508     07A7  0194               	clrf	20	;volatile
   509     07A8                     l643:
   510                           
   511                           ;newmain.c: 18:     SSPCON = 0b00100000;
   512     07A8  3020               	movlw	32
   513     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   514     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   515     07AB  0094               	movwf	20	;volatile
   516     07AC                     l21:
   517     07AC  0008               	return
   518     07AD                     __end_of_SPI_Initialize:
   519     007E                     btemp	set	126	;btemp
   520     007E                     wtemp0	set	126
   521                           
   522                           	psect	idloc
   523                           
   524                           ;Config register IDLOC0 @ 0x2000
   525                           ;	unspecified, using default values
   526     2000                     	org	8192
   527     2000  3FFF               	dw	16383
   528                           
   529                           ;Config register IDLOC1 @ 0x2001
   530                           ;	unspecified, using default values
   531     2001                     	org	8193
   532     2001  3FFF               	dw	16383
   533                           
   534                           ;Config register IDLOC2 @ 0x2002
   535                           ;	unspecified, using default values
   536     2002                     	org	8194
   537     2002  3FFF               	dw	16383
   538                           
   539                           ;Config register IDLOC3 @ 0x2003
   540                           ;	unspecified, using default values
   541     2003                     	org	8195
   542     2003  3FFF               	dw	16383
   543                           
   544                           	psect	config
   545                           
   546                           ;Config register CONFIG @ 0x2007
   547                           ;	Oscillator Selection bits
   548                           ;	FOSC = HS, HS oscillator
   549                           ;	Watchdog Timer Enable bit
   550                           ;	WDTE = OFF, WDT disabled
   551                           ;	Power-up Timer Enable bit
   552                           ;	PWRTE = OFF, PWRT disabled
   553                           ;	Brown-out Reset Enable bit
   554                           ;	BOREN = OFF, BOR disabled
   555                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   556                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   557                           ;	Data EEPROM Memory Code Protection bit
   558                           ;	CPD = OFF, Data EEPROM code protection off
   559                           ;	Flash Program Memory Write Enable bits
   560                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   561                           ;	In-Circuit Debugger Mode bit
   562                           ;	DEBUG = 0x1, unprogrammed default
   563                           ;	Flash Program Memory Code Protection bit
   564                           ;	CP = OFF, Code protection off
   565     2007                     	org	8199
   566     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_WriteData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              1 COMMON     4     4      0
                     _SPI_Initialize
                    _SPI_ReceiveData
                      _SPI_WriteData
 ---------------------------------------------------------------------------------
 (1) _SPI_WriteData                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_ReceiveData                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Initialize
   _SPI_ReceiveData
   _SPI_WriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 29 23:20:54 2023

         _SPI_Initialize 07A3              _SSPSTATbits 0094                       l21 07AC  
                     l30 07AD                       l24 07BC                       l33 07B6  
                     l27 07C2                       u10 07C2                       u11 07C1  
                     u20 07B3                       u21 07B2                       u47 07DC  
                     u57 07F1                      l641 07A7                      l643 07A8  
                    l645 07B8                      l661 07C3                      l639 07A3  
                    l647 07AD                      l671 07E3                      l663 07C9  
                    l649 07B3                      l673 07EB                      l665 07CB  
                    l667 07D0                      l669 07D6          _SPI_ReceiveData 07AD  
                   _main 07C3                     btemp 007E                     start 0000  
 __end_of_SPI_Initialize 07AD            _SPI_WriteData 07B7                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088                    status 0003  
                  wtemp0 007E           ?_SPI_WriteData 0070          ?_SPI_Initialize 0070  
        __initialization 07FC             __end_of_main 07FC            main@character 0074  
__end_of_SPI_ReceiveData 07B7                   ??_main 0071                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
__end_of__initialization 07FC          ??_SPI_WriteData 0070           __pcstackCOMMON 0070  
       ?_SPI_ReceiveData 0070               __pmaintext 07C3        SPI_WriteData@data 0070  
                _SSPSTAT 0094         ??_SPI_Initialize 0070                  __ptext1 07B7  
                __ptext2 07AD                  __ptext3 07A3     end_of_initialization 07FC  
    start_initialization 07FC    __end_of_SPI_WriteData 07C3                ___latbits 0002  
      ??_SPI_ReceiveData 0070  
