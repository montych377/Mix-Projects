

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jun 29 23:25:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0008                     _PORTD	set	8
   170     0013                     _SSPBUF	set	19
   171     0014                     _SSPCON	set	20
   172     0088                     _TRISD	set	136
   173     0094                     _SSPSTATbits	set	148
   174     0094                     _SSPSTAT	set	148
   175     043C                     _TRISC4	set	1084
   176     043D                     _TRISC5	set	1085
   177     043B                     _TRISC3	set	1083
   178                           
   179                           	psect	cinit
   180     07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183     07FC                     __initialization:
   184     07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FC                     __end_of__initialization:
   188     07FC  0183               	clrf	3
   189     07FD  120A  118A  2FC5   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_SPI_Initialize:
   194     0070                     ??_SPI_Initialize:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ?_SPI_WriteData:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ??_SPI_WriteData:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_SPI_ReceiveData:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ??_SPI_ReceiveData:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     SPI_WriteData@data:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0070                     	ds	1
   218     0071                     ??_main:
   219                           
   220                           ; 1 bytes @ 0x1
   221     0071                     	ds	3
   222     0074                     main@character:
   223                           
   224                           ; 1 bytes @ 0x4
   225     0074                     	ds	1
   226                           
   227                           	psect	maintext
   228     07C5                     __pmaintext:	
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 34 in file "newmain.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  character       1    4[COMMON] unsigned char 
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         1       0       0       0       0
   250 ;;      Temps:          3       0       0       0       0
   251 ;;      Totals:         4       0       0       0       0
   252 ;;Total ram usage:        4 bytes
   253 ;; Hardware stack levels required when called: 1
   254 ;; This function calls:
   255 ;;		_SPI_Initialize
   256 ;;		_SPI_ReceiveData
   257 ;;		_SPI_WriteData
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263     07C5                     _main:	
   264                           ;psect for function _main
   265                           
   266     07C5                     l663:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   269                           
   270                           
   271                           ;newmain.c: 35:     TRISD = 0x00;
   272     07C5  1683               	bsf	3,5	;RP0=1, select bank1
   273     07C6  1303               	bcf	3,6	;RP1=0, select bank1
   274     07C7  0188               	clrf	8	;volatile
   275                           
   276                           ;newmain.c: 36:     PORTD = 0x00;
   277     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   278     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   279     07CA  0188               	clrf	8	;volatile
   280     07CB                     l665:
   281                           
   282                           ;newmain.c: 37:     char character = 'C';
   283     07CB  3043               	movlw	67
   284     07CC  00F4               	movwf	main@character
   285     07CD                     l667:
   286                           
   287                           ;newmain.c: 38:     SPI_Initialize();
   288     07CD  120A  118A  27AE  120A  118A  	fcall	_SPI_Initialize
   289     07D2                     l669:
   290                           
   291                           ;newmain.c: 40:          PORTD = SPI_ReceiveData();
   292     07D2  120A  118A  27A4  120A  118A  	fcall	_SPI_ReceiveData
   293     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   294     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   295     07D9  0088               	movwf	8	;volatile
   296     07DA                     l671:
   297                           
   298                           ;newmain.c: 41:          _delay((unsigned long)((200)*(8000000/4000.0)));
   299     07DA  3003               	movlw	3
   300     07DB  00F3               	movwf	??_main+2
   301     07DC  3008               	movlw	8
   302     07DD  00F2               	movwf	??_main+1
   303     07DE  3077               	movlw	119
   304     07DF  00F1               	movwf	??_main
   305     07E0                     u47:
   306     07E0  0BF1               	decfsz	??_main,f
   307     07E1  2FE0               	goto	u47
   308     07E2  0BF2               	decfsz	??_main+1,f
   309     07E3  2FE0               	goto	u47
   310     07E4  0BF3               	decfsz	??_main+2,f
   311     07E5  2FE0               	goto	u47
   312     07E6                     l673:
   313                           
   314                           ;newmain.c: 43:          SPI_WriteData(character);
   315     07E6  0874               	movf	main@character,w
   316     07E7  120A  118A  27B9  120A  118A  	fcall	_SPI_WriteData
   317     07EC                     l675:
   318                           
   319                           ;newmain.c: 44:          _delay((unsigned long)((200)*(8000000/4000.0)));
   320     07EC  3003               	movlw	3
   321     07ED  00F3               	movwf	??_main+2
   322     07EE  3008               	movlw	8
   323     07EF  00F2               	movwf	??_main+1
   324     07F0  3077               	movlw	119
   325     07F1  00F1               	movwf	??_main
   326     07F2                     u57:
   327     07F2  0BF1               	decfsz	??_main,f
   328     07F3  2FF2               	goto	u57
   329     07F4  0BF2               	decfsz	??_main+1,f
   330     07F5  2FF2               	goto	u57
   331     07F6  0BF3               	decfsz	??_main+2,f
   332     07F7  2FF2               	goto	u57
   333     07F8  2FD2               	goto	l669
   334     07F9  120A  118A  2800   	ljmp	start
   335     07FC                     __end_of_main:
   336                           
   337                           	psect	text1
   338     07B9                     __ptext1:	
   339 ;; *************** function _SPI_WriteData *****************
   340 ;; Defined at:
   341 ;;		line 20 in file "newmain.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;  data            1    wreg     unsigned char 
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  data            1    0[COMMON] unsigned char 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         1       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0
   358 ;;      Totals:         1       0       0       0       0
   359 ;;Total ram usage:        1 bytes
   360 ;; Hardware stack levels used: 1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;;		_SPI_WriteString
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369     07B9                     _SPI_WriteData:	
   370                           ;psect for function _SPI_WriteData
   371                           
   372                           
   373                           ;incstack = 0
   374                           ; Regs used in _SPI_WriteData: [wreg]
   375                           ;SPI_WriteData@data stored from wreg
   376     07B9  00F0               	movwf	SPI_WriteData@data
   377     07BA                     l647:
   378                           
   379                           ;newmain.c: 21:     SSPBUF = data;
   380     07BA  0870               	movf	SPI_WriteData@data,w
   381     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   382     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   383     07BD  0093               	movwf	19	;volatile
   384     07BE                     l26:	
   385                           ;newmain.c: 22:     while (!SSPSTATbits.BF);
   386                           
   387     07BE  1683               	bsf	3,5	;RP0=1, select bank1
   388     07BF  1303               	bcf	3,6	;RP1=0, select bank1
   389     07C0  1C14               	btfss	20,0	;volatile
   390     07C1  2FC3               	goto	u11
   391     07C2  2FC4               	goto	u10
   392     07C3                     u11:
   393     07C3  2FBE               	goto	l26
   394     07C4                     u10:
   395     07C4                     l29:
   396     07C4  0008               	return
   397     07C5                     __end_of_SPI_WriteData:
   398                           
   399                           	psect	text2
   400     07A4                     __ptext2:	
   401 ;; *************** function _SPI_ReceiveData *****************
   402 ;; Defined at:
   403 ;;		line 24 in file "newmain.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      unsigned char 
   410 ;; Registers used:
   411 ;;		wreg
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430     07A4                     _SPI_ReceiveData:	
   431                           ;psect for function _SPI_ReceiveData
   432                           
   433     07A4                     l649:	
   434                           ;incstack = 0
   435                           ; Regs used in _SPI_ReceiveData: [wreg]
   436                           
   437     07A4                     l32:	
   438                           ;newmain.c: 25:     while (!SSPSTATbits.BF);
   439                           
   440     07A4  1683               	bsf	3,5	;RP0=1, select bank1
   441     07A5  1303               	bcf	3,6	;RP1=0, select bank1
   442     07A6  1C14               	btfss	20,0	;volatile
   443     07A7  2FA9               	goto	u21
   444     07A8  2FAA               	goto	u20
   445     07A9                     u21:
   446     07A9  2FA4               	goto	l32
   447     07AA                     u20:
   448     07AA                     l651:
   449                           
   450                           ;newmain.c: 26:     return SSPBUF;
   451     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   452     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   453     07AC  0813               	movf	19,w	;volatile
   454     07AD                     l35:
   455     07AD  0008               	return
   456     07AE                     __end_of_SPI_ReceiveData:
   457                           
   458                           	psect	text3
   459     07AE                     __ptext3:	
   460 ;; *************** function _SPI_Initialize *****************
   461 ;; Defined at:
   462 ;;		line 13 in file "newmain.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, status,2
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489     07AE                     _SPI_Initialize:	
   490                           ;psect for function _SPI_Initialize
   491                           
   492     07AE                     l641:	
   493                           ;incstack = 0
   494                           ; Regs used in _SPI_Initialize: [wreg+status,2]
   495                           
   496                           
   497                           ;newmain.c: 14:     TRISC3 = 1;
   498     07AE  1683               	bsf	3,5	;RP0=1, select bank1
   499     07AF  1303               	bcf	3,6	;RP1=0, select bank1
   500     07B0  1587               	bsf	7,3	;volatile
   501                           
   502                           ;newmain.c: 15:     TRISC5 = 0;
   503     07B1  1287               	bcf	7,5	;volatile
   504                           
   505                           ;newmain.c: 16:     TRISC4 = 1;
   506     07B2  1607               	bsf	7,4	;volatile
   507     07B3                     l643:
   508                           
   509                           ;newmain.c: 17:     SSPSTAT = 0b00000000;
   510     07B3  0194               	clrf	20	;volatile
   511     07B4                     l645:
   512                           
   513                           ;newmain.c: 18:     SSPCON = 0b00100100;
   514     07B4  3024               	movlw	36
   515     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   516     07B6  1303               	bcf	3,6	;RP1=0, select bank0
   517     07B7  0094               	movwf	20	;volatile
   518     07B8                     l23:
   519     07B8  0008               	return
   520     07B9                     __end_of_SPI_Initialize:
   521     007E                     btemp	set	126	;btemp
   522     007E                     wtemp0	set	126
   523                           
   524                           	psect	idloc
   525                           
   526                           ;Config register IDLOC0 @ 0x2000
   527                           ;	unspecified, using default values
   528     2000                     	org	8192
   529     2000  3FFF               	dw	16383
   530                           
   531                           ;Config register IDLOC1 @ 0x2001
   532                           ;	unspecified, using default values
   533     2001                     	org	8193
   534     2001  3FFF               	dw	16383
   535                           
   536                           ;Config register IDLOC2 @ 0x2002
   537                           ;	unspecified, using default values
   538     2002                     	org	8194
   539     2002  3FFF               	dw	16383
   540                           
   541                           ;Config register IDLOC3 @ 0x2003
   542                           ;	unspecified, using default values
   543     2003                     	org	8195
   544     2003  3FFF               	dw	16383
   545                           
   546                           	psect	config
   547                           
   548                           ;Config register CONFIG @ 0x2007
   549                           ;	Oscillator Selection bits
   550                           ;	FOSC = HS, HS oscillator
   551                           ;	Watchdog Timer Enable bit
   552                           ;	WDTE = OFF, WDT disabled
   553                           ;	Power-up Timer Enable bit
   554                           ;	PWRTE = OFF, PWRT disabled
   555                           ;	Brown-out Reset Enable bit
   556                           ;	BOREN = OFF, BOR disabled
   557                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   558                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   559                           ;	Data EEPROM Memory Code Protection bit
   560                           ;	CPD = OFF, Data EEPROM code protection off
   561                           ;	Flash Program Memory Write Enable bits
   562                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   563                           ;	In-Circuit Debugger Mode bit
   564                           ;	DEBUG = 0x1, unprogrammed default
   565                           ;	Flash Program Memory Code Protection bit
   566                           ;	CP = OFF, Code protection off
   567     2007                     	org	8199
   568     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_WriteData

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              1 COMMON     4     4      0
                     _SPI_Initialize
                    _SPI_ReceiveData
                      _SPI_WriteData
 ---------------------------------------------------------------------------------
 (1) _SPI_WriteData                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_ReceiveData                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Initialize
   _SPI_ReceiveData
   _SPI_WriteData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jun 29 23:25:26 2023

         _SPI_Initialize 07AE              _SSPSTATbits 0094                       l23 07B8  
                     l32 07A4                       l26 07BE                       l35 07AD  
                     l29 07C4                       u10 07C4                       u11 07C3  
                     u20 07AA                       u21 07A9                       u47 07E0  
                     u57 07F2                      l641 07AE                      l643 07B3  
                    l651 07AA                      l645 07B4                      l647 07BA  
                    l671 07DA                      l663 07C5                      l649 07A4  
                    l673 07E6                      l665 07CB                      l675 07EC  
                    l667 07CD                      l669 07D2          _SPI_ReceiveData 07A4  
                   _main 07C5                     btemp 007E                     start 0000  
 __end_of_SPI_Initialize 07B9            _SPI_WriteData 07B9                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088                    status 0003  
                  wtemp0 007E           ?_SPI_WriteData 0070          ?_SPI_Initialize 0070  
        __initialization 07FC             __end_of_main 07FC            main@character 0074  
__end_of_SPI_ReceiveData 07AE                   ??_main 0071                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013  __end_of__initialization 07FC          ??_SPI_WriteData 0070  
         __pcstackCOMMON 0070         ?_SPI_ReceiveData 0070               __pmaintext 07C5  
      SPI_WriteData@data 0070                  _SSPSTAT 0094         ??_SPI_Initialize 0070  
                __ptext1 07B9                  __ptext2 07A4                  __ptext3 07AE  
   end_of_initialization 07FC      start_initialization 07FC    __end_of_SPI_WriteData 07C5  
              ___latbits 0002        ??_SPI_ReceiveData 0070  
