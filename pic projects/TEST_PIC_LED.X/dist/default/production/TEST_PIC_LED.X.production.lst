

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 14 01:38:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171     0792                     __pidataBANK0:
   172                           
   173                           ;initializer for main@F879
   174     0792  3401               	retlw	1
   175     0793  3402               	retlw	2
   176     0794  3404               	retlw	4
   177     0795  3408               	retlw	8
   178     0796  3410               	retlw	16
   179     0797  3420               	retlw	32
   180     0798  3440               	retlw	64
   181     0799  3480               	retlw	128
   182     0008                     _PORTD	set	8
   183     0088                     _TRISD	set	136
   184                           
   185                           	psect	cinit
   186     07EE                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07EE                     __initialization:
   190                           
   191                           ; Initialize objects allocated to BANK0
   192     07EE  1383               	bcf	3,7	;select IRP bank0
   193     07EF  3028               	movlw	low (__pdataBANK0+8)
   194     07F0  00FD               	movwf	btemp+-1
   195     07F1  3007               	movlw	high __pidataBANK0
   196     07F2  00FE               	movwf	btemp
   197     07F3  3092               	movlw	low __pidataBANK0
   198     07F4  00FF               	movwf	btemp+1
   199     07F5  3020               	movlw	low __pdataBANK0
   200     07F6  0084               	movwf	4
   201     07F7  120A  118A  279E  120A  118A  	fcall	init_ram0
   202     07FC                     end_of_initialization:	
   203                           ;End of C runtime variable initialization code
   204                           
   205     07FC                     __end_of__initialization:
   206     07FC  0183               	clrf	3
   207     07FD  120A  118A  2FAD   	ljmp	_main	;jump to C main() function
   208                           
   209                           	psect	dataBANK0
   210     0020                     __pdataBANK0:
   211     0020                     main@F879:
   212     0020                     	ds	8
   213                           
   214                           	psect	inittext
   215     079A                     init_fetch0:	
   216                           ;	Called with low address in FSR and high address in W
   217                           
   218     079A  087E               	movf	btemp,w
   219     079B  008A               	movwf	10
   220     079C  087F               	movf	btemp+1,w
   221     079D  0082               	movwf	2
   222     079E                     init_ram0:	
   223                           ;Called with:
   224                           ;	high address of idata address in btemp 
   225                           ;	low address of idata address in btemp+1 
   226                           ;	low address of data in FSR
   227                           ;	high address + 1 of data in btemp-1
   228                           
   229     079E  120A  118A  279A  120A  118A  	fcall	init_fetch0
   230     07A3  0080               	movwf	0
   231     07A4  0A84               	incf	4,f
   232     07A5  0804               	movf	4,w
   233     07A6  067D               	xorwf	btemp+-1,w
   234     07A7  1903               	btfsc	3,2
   235     07A8  3400               	retlw	0
   236     07A9  0AFF               	incf	btemp+1,f
   237     07AA  1903               	btfsc	3,2
   238     07AB  0AFE               	incf	btemp,f
   239     07AC  2F9E               	goto	init_ram0
   240                           
   241                           	psect	cstackCOMMON
   242     0070                     __pcstackCOMMON:
   243     0070                     ?_main:
   244     0070                     ??_main:	
   245                           ; 1 bytes @ 0x0
   246                           
   247                           
   248                           ; 1 bytes @ 0x0
   249     0070                     	ds	4
   250     0074                     main@arr:
   251                           
   252                           ; 8 bytes @ 0x4
   253     0074                     	ds	8
   254     007C                     main@i:
   255                           
   256                           ; 2 bytes @ 0xC
   257     007C                     	ds	2
   258                           
   259                           	psect	maintext
   260     07AD                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 20 in file "newmain.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  i               2   12[COMMON] int 
   271 ;;  arr             8    4[COMMON] unsigned char [8]
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   276 ;; Tracked objects:
   277 ;;		On entry : B00/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   281 ;;      Params:         0       0       0       0       0
   282 ;;      Locals:        10       0       0       0       0
   283 ;;      Temps:          4       0       0       0       0
   284 ;;      Totals:        14       0       0       0       0
   285 ;;Total ram usage:       14 bytes
   286 ;; This function calls:
   287 ;;		Nothing
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293     07AD                     _main:	
   294                           ;psect for function _main
   295                           
   296     07AD                     l628:	
   297                           ;incstack = 0
   298                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   299                           
   300                           
   301                           ;newmain.c: 21:     TRISD = 0x00;
   302     07AD  1683               	bsf	3,5	;RP0=1, select bank1
   303     07AE  1303               	bcf	3,6	;RP1=0, select bank1
   304     07AF  0188               	clrf	8	;volatile
   305     07B0                     l630:
   306                           
   307                           ;newmain.c: 22:     char arr[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
   308     07B0  3074               	movlw	main@arr& (0+255)
   309     07B1  0084               	movwf	4
   310     07B2  3020               	movlw	low main@F879
   311     07B3  00F0               	movwf	??_main
   312     07B4  0804               	movf	4,w
   313     07B5  00F1               	movwf	??_main+1
   314     07B6  3008               	movlw	8
   315     07B7  00F2               	movwf	??_main+2
   316     07B8                     u30:
   317     07B8  0870               	movf	??_main,w
   318     07B9  0084               	movwf	4
   319     07BA  1383               	bcf	3,7	;select IRP bank0
   320     07BB  0800               	movf	0,w
   321     07BC  00F3               	movwf	??_main+3
   322     07BD  0AF0               	incf	??_main,f
   323     07BE  0871               	movf	??_main+1,w
   324     07BF  0084               	movwf	4
   325     07C0  0873               	movf	??_main+3,w
   326     07C1  0080               	movwf	0
   327     07C2  0AF1               	incf	??_main+1,f
   328     07C3  0BF2               	decfsz	??_main+2,f
   329     07C4  2FB8               	goto	u30
   330     07C5                     l632:
   331                           
   332                           ;newmain.c: 24:         for(int i=0;i<8;i++){
   333     07C5  01FC               	clrf	main@i
   334     07C6  01FD               	clrf	main@i+1
   335     07C7                     l638:
   336                           
   337                           ;newmain.c: 25:             PORTD = arr[i];
   338     07C7  087C               	movf	main@i,w
   339     07C8  3E74               	addlw	(low (main@arr| 0))& (0+255)
   340     07C9  0084               	movwf	4
   341     07CA  0800               	movf	0,w
   342     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   343     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   344     07CD  0088               	movwf	8	;volatile
   345     07CE                     l640:
   346                           
   347                           ;newmain.c: 26:             _delay((unsigned long)((50)*(8000000/4000.0)));
   348     07CE  3082               	movlw	130
   349     07CF  00F1               	movwf	??_main+1
   350     07D0  30DD               	movlw	221
   351     07D1  00F0               	movwf	??_main
   352     07D2                     u57:
   353     07D2  0BF0               	decfsz	??_main,f
   354     07D3  2FD2               	goto	u57
   355     07D4  0BF1               	decfsz	??_main+1,f
   356     07D5  2FD2               	goto	u57
   357     07D6  2FD7               	nop2
   358     07D7                     l642:
   359                           
   360                           ;newmain.c: 27:         }
   361     07D7  3001               	movlw	1
   362     07D8  07FC               	addwf	main@i,f
   363     07D9  1803               	skipnc
   364     07DA  0AFD               	incf	main@i+1,f
   365     07DB  3000               	movlw	0
   366     07DC  07FD               	addwf	main@i+1,f
   367     07DD                     l644:
   368     07DD  087D               	movf	main@i+1,w
   369     07DE  3A80               	xorlw	128
   370     07DF  00FF               	movwf	btemp+1
   371     07E0  3080               	movlw	128
   372     07E1  027F               	subwf	btemp+1,w
   373     07E2  1D03               	skipz
   374     07E3  2FE6               	goto	u45
   375     07E4  3008               	movlw	8
   376     07E5  027C               	subwf	main@i,w
   377     07E6                     u45:
   378     07E6  1C03               	skipc
   379     07E7  2FE9               	goto	u41
   380     07E8  2FEA               	goto	u40
   381     07E9                     u41:
   382     07E9  2FC7               	goto	l638
   383     07EA                     u40:
   384     07EA  2FC5               	goto	l632
   385     07EB  120A  118A  2800   	ljmp	start
   386     07EE                     __end_of_main:
   387     007E                     btemp	set	126	;btemp
   388     007E                     wtemp0	set	126
   389                           
   390                           	psect	idloc
   391                           
   392                           ;Config register IDLOC0 @ 0x2000
   393                           ;	unspecified, using default values
   394     2000                     	org	8192
   395     2000  3FFF               	dw	16383
   396                           
   397                           ;Config register IDLOC1 @ 0x2001
   398                           ;	unspecified, using default values
   399     2001                     	org	8193
   400     2001  3FFF               	dw	16383
   401                           
   402                           ;Config register IDLOC2 @ 0x2002
   403                           ;	unspecified, using default values
   404     2002                     	org	8194
   405     2002  3FFF               	dw	16383
   406                           
   407                           ;Config register IDLOC3 @ 0x2003
   408                           ;	unspecified, using default values
   409     2003                     	org	8195
   410     2003  3FFF               	dw	16383
   411                           
   412                           	psect	config
   413                           
   414                           ;Config register CONFIG @ 0x2007
   415                           ;	Oscillator Selection bits
   416                           ;	FOSC = HS, HS oscillator
   417                           ;	Watchdog Timer Enable bit
   418                           ;	WDTE = OFF, WDT disabled
   419                           ;	Power-up Timer Enable bit
   420                           ;	PWRTE = OFF, PWRT disabled
   421                           ;	Brown-out Reset Enable bit
   422                           ;	BOREN = OFF, BOR disabled
   423                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   424                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   425                           ;	Data EEPROM Memory Code Protection bit
   426                           ;	CPD = OFF, Data EEPROM code protection off
   427                           ;	Flash Program Memory Write Enable bits
   428                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   429                           ;	In-Circuit Debugger Mode bit
   430                           ;	DEBUG = 0x1, unprogrammed default
   431                           ;	Flash Program Memory Code Protection bit
   432                           ;	CP = OFF, Code protection off
   433     2007                     	org	8199
   434     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0      92
                                              0 COMMON    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       8       5       10.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      16      12        0.0%
ABS                  0      0      16       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 14 01:38:12 2023

                      pc 0002                       u30 07B8                       u40 07EA  
                     u41 07E9                       u45 07E6                       u57 07D2  
                     fsr 0004                      l630 07B0                      l640 07CE  
                    l632 07C5                      l642 07D7                      l644 07DD  
                    l628 07AD                      l638 07C7                      fsr0 0004  
                    indf 0000                     _main 07AD                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088                    main@i 007C                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0792               __pmaintext 07AD  
                main@arr 0074     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 079A              __pdataBANK0 0020                ___latbits 0002  
               main@F879 0020                 init_ram0 079E  
