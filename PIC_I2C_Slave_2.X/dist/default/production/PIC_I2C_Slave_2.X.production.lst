

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 06 05:25:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0006                     _PORTB	set	6
   174     0008                     _PORTD	set	8
   175     0013                     _SSPBUF	set	19
   176     0014                     _SSPCONbits	set	20
   177     0014                     _SSPCON	set	20
   178     005E                     _PEIE	set	94
   179     005F                     _GIE	set	95
   180     0063                     _SSPIF	set	99
   181     0088                     _TRISD	set	136
   182     0086                     _TRISB	set	134
   183     0094                     _SSPSTATbits	set	148
   184     0087                     _TRISCbits	set	135
   185     0091                     _SSPCON2	set	145
   186     0093                     _SSPADD	set	147
   187     0094                     _SSPSTAT	set	148
   188     0463                     _SSPIE	set	1123
   189                           
   190                           	psect	cinit
   191     000F                     start_initialization:	
   192                           ; #config settings
   193                           
   194     000F                     __initialization:
   195                           
   196                           ; Clear objects allocated to COMMON
   197     000F  01F5               	clrf	__pbssCOMMON& (0+127)
   198     0010                     end_of_initialization:	
   199                           ;End of C runtime variable initialization code
   200                           
   201     0010                     __end_of__initialization:
   202     0010  0183               	clrf	3
   203     0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMMON
   206     0075                     __pbssCOMMON:
   207     0075                     _receivedData:
   208     0075                     	ds	1
   209                           
   210                           	psect	cstackCOMMON
   211     0070                     __pcstackCOMMON:
   212     0070                     ?_ISR:
   213     0070                     ??_ISR:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ?_lcd_cmd:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ?_lcd_data:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ?_lcd_init:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ?_main:	
   226                           ; 1 bytes @ 0x0
   227                           
   228                           
   229                           ; 1 bytes @ 0x0
   230     0070                     	ds	2
   231     0072                     ?_I2C_Slave_Init:
   232     0072                     ??_lcd_cmd:	
   233                           ; 1 bytes @ 0x2
   234                           
   235     0072                     ??_lcd_data:	
   236                           ; 1 bytes @ 0x2
   237                           
   238     0072                     I2C_Slave_Init@address:	
   239                           ; 1 bytes @ 0x2
   240                           
   241                           
   242                           ; 2 bytes @ 0x2
   243     0072                     	ds	2
   244     0074                     ??_I2C_Slave_Init:
   245     0074                     lcd_cmd@cmd:	
   246                           ; 1 bytes @ 0x4
   247                           
   248     0074                     lcd_data@data:	
   249                           ; 1 bytes @ 0x4
   250                           
   251                           
   252                           ; 1 bytes @ 0x4
   253     0074                     	ds	1
   254     0075                     ??_lcd_init:
   255     0075                     ??_main:	
   256                           ; 1 bytes @ 0x5
   257                           
   258                           
   259                           	psect	maintext
   260     0014                     __pmaintext:	
   261                           ; 1 bytes @ 0x5
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   264 ;;
   265 ;; *************** function _main *****************
   266 ;; Defined at:
   267 ;;		line 78 in file "newmain.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   276 ;; Tracked objects:
   277 ;;		On entry : B00/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   281 ;;      Params:         0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels required when called: 3
   287 ;; This function calls:
   288 ;;		_I2C_Slave_Init
   289 ;;		_lcd_cmd
   290 ;;		_lcd_data
   291 ;;		_lcd_init
   292 ;; This function is called by:
   293 ;;		Startup code after reset
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297     0014                     _main:	
   298                           ;psect for function _main
   299                           
   300     0014                     l738:	
   301                           ;incstack = 0
   302                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   303                           
   304                           
   305                           ;newmain.c: 79:     TRISB = 0x00;
   306     0014  1683               	bsf	3,5	;RP0=1, select bank1
   307     0015  1303               	bcf	3,6	;RP1=0, select bank1
   308     0016  0186               	clrf	6	;volatile
   309                           
   310                           ;newmain.c: 80:     TRISD = 0x00;
   311     0017  0188               	clrf	8	;volatile
   312                           
   313                           ;newmain.c: 81:     PORTD = 0x00;
   314     0018  1283               	bcf	3,5	;RP0=0, select bank0
   315     0019  1303               	bcf	3,6	;RP1=0, select bank0
   316     001A  0188               	clrf	8	;volatile
   317                           
   318                           ;newmain.c: 82:     PORTB = 0x00;
   319     001B  0186               	clrf	6	;volatile
   320     001C                     l740:
   321                           
   322                           ;newmain.c: 84:     I2C_Slave_Init(0x30);
   323     001C  3030               	movlw	48
   324     001D  00F2               	movwf	I2C_Slave_Init@address
   325     001E  3000               	movlw	0
   326     001F  00F3               	movwf	I2C_Slave_Init@address+1
   327     0020  120A  118A  20B1  120A  118A  	fcall	_I2C_Slave_Init
   328     0025                     l742:
   329                           
   330                           ;newmain.c: 85:     lcd_init();
   331     0025  120A  118A  2092  120A  118A  	fcall	_lcd_init
   332     002A                     l744:
   333                           
   334                           ;newmain.c: 88:         if (receivedData >= 'A' && receivedData<='Z' ) {
   335     002A  3041               	movlw	65
   336     002B  0275               	subwf	_receivedData,w	;volatile
   337     002C  1C03               	skipc
   338     002D  282F               	goto	u51
   339     002E  2830               	goto	u50
   340     002F                     u51:
   341     002F  282A               	goto	l744
   342     0030                     u50:
   343     0030                     l746:
   344     0030  305B               	movlw	91
   345     0031  0275               	subwf	_receivedData,w	;volatile
   346     0032  1803               	skipnc
   347     0033  2835               	goto	u61
   348     0034  2836               	goto	u60
   349     0035                     u61:
   350     0035  282A               	goto	l744
   351     0036                     u60:
   352     0036                     l748:
   353                           
   354                           ;newmain.c: 89:             lcd_cmd(0x80);
   355     0036  3080               	movlw	128
   356     0037  120A  118A  2047  120A  118A  	fcall	_lcd_cmd
   357                           
   358                           ;newmain.c: 90:             lcd_data(receivedData);
   359     003C  0875               	movf	_receivedData,w	;volatile
   360     003D  120A  118A  206E  120A  118A  	fcall	_lcd_data
   361     0042                     l750:
   362                           
   363                           ;newmain.c: 92:             receivedData = 0;
   364     0042  01F5               	clrf	_receivedData	;volatile
   365     0043  282A               	goto	l744
   366     0044  120A  118A  280C   	ljmp	start
   367     0047                     __end_of_main:
   368                           
   369                           	psect	text1
   370     0092                     __ptext1:	
   371 ;; *************** function _lcd_init *****************
   372 ;; Defined at:
   373 ;;		line 71 in file "newmain.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0
   390 ;;      Totals:         0       0       0       0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 2
   394 ;; This function calls:
   395 ;;		_lcd_cmd
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401     0092                     _lcd_init:	
   402                           ;psect for function _lcd_init
   403                           
   404     0092                     l696:	
   405                           ;incstack = 0
   406                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   407                           
   408                           
   409                           ;newmain.c: 72:     lcd_cmd(0x01);
   410     0092  3001               	movlw	1
   411     0093  120A  118A  2047  120A  118A  	fcall	_lcd_cmd
   412                           
   413                           ;newmain.c: 73:     lcd_cmd(0x02);
   414     0098  3002               	movlw	2
   415     0099  120A  118A  2047  120A  118A  	fcall	_lcd_cmd
   416                           
   417                           ;newmain.c: 74:     lcd_cmd(0x06);
   418     009E  3006               	movlw	6
   419     009F  120A  118A  2047  120A  118A  	fcall	_lcd_cmd
   420                           
   421                           ;newmain.c: 75:     lcd_cmd(0x38);
   422     00A4  3038               	movlw	56
   423     00A5  120A  118A  2047  120A  118A  	fcall	_lcd_cmd
   424                           
   425                           ;newmain.c: 76:     lcd_cmd(0x0c);
   426     00AA  300C               	movlw	12
   427     00AB  120A  118A  2047  120A  118A  	fcall	_lcd_cmd
   428     00B0                     l55:
   429     00B0  0008               	return
   430     00B1                     __end_of_lcd_init:
   431                           
   432                           	psect	text2
   433     0047                     __ptext2:	
   434 ;; *************** function _lcd_cmd *****************
   435 ;; Defined at:
   436 ;;		line 51 in file "newmain.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  cmd             1    wreg     unsigned char 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  cmd             1    4[COMMON] unsigned char 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, btemp+1
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         1       0       0       0       0
   452 ;;      Temps:          2       0       0       0       0
   453 ;;      Totals:         3       0       0       0       0
   454 ;;Total ram usage:        3 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_lcd_init
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465     0047                     _lcd_cmd:	
   466                           ;psect for function _lcd_cmd
   467                           
   468                           
   469                           ;incstack = 0
   470                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+btemp+1]
   471                           ;lcd_cmd@cmd stored from wreg
   472     0047  00F4               	movwf	lcd_cmd@cmd
   473     0048                     l656:
   474                           
   475                           ;newmain.c: 52:     PORTD = cmd;
   476     0048  0874               	movf	lcd_cmd@cmd,w
   477     0049  1283               	bcf	3,5	;RP0=0, select bank0
   478     004A  1303               	bcf	3,6	;RP1=0, select bank0
   479     004B  0088               	movwf	8	;volatile
   480     004C                     l658:
   481                           
   482                           ;newmain.c: 53:     PORTB &= ~0x01;
   483     004C  30FE               	movlw	254
   484     004D  00FF               	movwf	btemp+1
   485     004E  087F               	movf	btemp+1,w
   486     004F  0586               	andwf	6,f	;volatile
   487     0050                     l660:
   488                           
   489                           ;newmain.c: 54:     PORTB &= ~0x02;
   490     0050  30FD               	movlw	253
   491     0051  00FF               	movwf	btemp+1
   492     0052  087F               	movf	btemp+1,w
   493     0053  0586               	andwf	6,f	;volatile
   494     0054                     l662:
   495                           
   496                           ;newmain.c: 55:     PORTB |= 0x04;
   497     0054  1506               	bsf	6,2	;volatile
   498                           
   499                           ;newmain.c: 56:     _delay((unsigned long)((3)*(8000000/4000.0)));
   500     0055  3008               	movlw	8
   501     0056  00F3               	movwf	??_lcd_cmd+1
   502     0057  30C9               	movlw	201
   503     0058  00F2               	movwf	??_lcd_cmd
   504     0059                     u77:
   505     0059  0BF2               	decfsz	??_lcd_cmd,f
   506     005A  2859               	goto	u77
   507     005B  0BF3               	decfsz	??_lcd_cmd+1,f
   508     005C  2859               	goto	u77
   509     005D  285E               	nop2
   510     005E                     l664:
   511                           
   512                           ;newmain.c: 57:     PORTB &= ~0x04;
   513     005E  30FB               	movlw	251
   514     005F  00FF               	movwf	btemp+1
   515     0060  087F               	movf	btemp+1,w
   516     0061  1283               	bcf	3,5	;RP0=0, select bank0
   517     0062  1303               	bcf	3,6	;RP1=0, select bank0
   518     0063  0586               	andwf	6,f	;volatile
   519     0064                     l666:
   520                           
   521                           ;newmain.c: 58:     _delay((unsigned long)((3)*(8000000/4000.0)));
   522     0064  3008               	movlw	8
   523     0065  00F3               	movwf	??_lcd_cmd+1
   524     0066  30C9               	movlw	201
   525     0067  00F2               	movwf	??_lcd_cmd
   526     0068                     u87:
   527     0068  0BF2               	decfsz	??_lcd_cmd,f
   528     0069  2868               	goto	u87
   529     006A  0BF3               	decfsz	??_lcd_cmd+1,f
   530     006B  2868               	goto	u87
   531     006C  286D               	nop2
   532     006D                     l49:
   533     006D  0008               	return
   534     006E                     __end_of_lcd_cmd:
   535                           
   536                           	psect	text3
   537     006E                     __ptext3:	
   538 ;; *************** function _lcd_data *****************
   539 ;; Defined at:
   540 ;;		line 61 in file "newmain.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  data            1    wreg     unsigned char 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  data            1    4[COMMON] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, btemp+1
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         1       0       0       0       0
   556 ;;      Temps:          2       0       0       0       0
   557 ;;      Totals:         3       0       0       0       0
   558 ;;Total ram usage:        3 bytes
   559 ;; Hardware stack levels used: 1
   560 ;; Hardware stack levels required when called: 1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568     006E                     _lcd_data:	
   569                           ;psect for function _lcd_data
   570                           
   571                           
   572                           ;incstack = 0
   573                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   574                           ;lcd_data@data stored from wreg
   575     006E  00F4               	movwf	lcd_data@data
   576     006F                     l684:
   577                           
   578                           ;newmain.c: 62:     PORTD = data;
   579     006F  0874               	movf	lcd_data@data,w
   580     0070  1283               	bcf	3,5	;RP0=0, select bank0
   581     0071  1303               	bcf	3,6	;RP1=0, select bank0
   582     0072  0088               	movwf	8	;volatile
   583     0073                     l686:
   584                           
   585                           ;newmain.c: 63:     PORTB |= 0x01;
   586     0073  1406               	bsf	6,0	;volatile
   587     0074                     l688:
   588                           
   589                           ;newmain.c: 64:     PORTB &= ~0x02;
   590     0074  30FD               	movlw	253
   591     0075  00FF               	movwf	btemp+1
   592     0076  087F               	movf	btemp+1,w
   593     0077  0586               	andwf	6,f	;volatile
   594     0078                     l690:
   595                           
   596                           ;newmain.c: 65:     PORTB |= 0x04;
   597     0078  1506               	bsf	6,2	;volatile
   598     0079                     l692:
   599                           
   600                           ;newmain.c: 66:     _delay((unsigned long)((3)*(8000000/4000.0)));
   601     0079  3008               	movlw	8
   602     007A  00F3               	movwf	??_lcd_data+1
   603     007B  30C9               	movlw	201
   604     007C  00F2               	movwf	??_lcd_data
   605     007D                     u97:
   606     007D  0BF2               	decfsz	??_lcd_data,f
   607     007E  287D               	goto	u97
   608     007F  0BF3               	decfsz	??_lcd_data+1,f
   609     0080  287D               	goto	u97
   610     0081  2882               	nop2
   611                           
   612                           ;newmain.c: 67:     PORTB &= ~0x04;
   613     0082  30FB               	movlw	251
   614     0083  00FF               	movwf	btemp+1
   615     0084  087F               	movf	btemp+1,w
   616     0085  1283               	bcf	3,5	;RP0=0, select bank0
   617     0086  1303               	bcf	3,6	;RP1=0, select bank0
   618     0087  0586               	andwf	6,f	;volatile
   619     0088                     l694:
   620                           
   621                           ;newmain.c: 68:     _delay((unsigned long)((3)*(8000000/4000.0)));
   622     0088  3008               	movlw	8
   623     0089  00F3               	movwf	??_lcd_data+1
   624     008A  30C9               	movlw	201
   625     008B  00F2               	movwf	??_lcd_data
   626     008C                     u107:
   627     008C  0BF2               	decfsz	??_lcd_data,f
   628     008D  288C               	goto	u107
   629     008E  0BF3               	decfsz	??_lcd_data+1,f
   630     008F  288C               	goto	u107
   631     0090  2891               	nop2
   632     0091                     l52:
   633     0091  0008               	return
   634     0092                     __end_of_lcd_data:
   635                           
   636                           	psect	text4
   637     00B1                     __ptext4:	
   638 ;; *************** function _I2C_Slave_Init *****************
   639 ;; Defined at:
   640 ;;		line 23 in file "newmain.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  address         2    2[COMMON] unsigned short 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   654 ;;      Params:         2       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0
   657 ;;      Totals:         2       0       0       0       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels used: 1
   660 ;; Hardware stack levels required when called: 1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668     00B1                     _I2C_Slave_Init:	
   669                           ;psect for function _I2C_Slave_Init
   670                           
   671     00B1                     l722:	
   672                           ;incstack = 0
   673                           ; Regs used in _I2C_Slave_Init: [wreg]
   674                           
   675                           
   676                           ;newmain.c: 24:     SSPSTAT = 0x80;
   677     00B1  3080               	movlw	128
   678     00B2  1683               	bsf	3,5	;RP0=1, select bank1
   679     00B3  1303               	bcf	3,6	;RP1=0, select bank1
   680     00B4  0094               	movwf	20	;volatile
   681                           
   682                           ;newmain.c: 25:     SSPADD = address;
   683     00B5  0872               	movf	I2C_Slave_Init@address,w
   684     00B6  0093               	movwf	19	;volatile
   685                           
   686                           ;newmain.c: 26:     SSPCON = 0x36;
   687     00B7  3036               	movlw	54
   688     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   689     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   690     00BA  0094               	movwf	20	;volatile
   691                           
   692                           ;newmain.c: 27:     SSPCON2 = 0x01;
   693     00BB  3001               	movlw	1
   694     00BC  1683               	bsf	3,5	;RP0=1, select bank1
   695     00BD  1303               	bcf	3,6	;RP1=0, select bank1
   696     00BE  0091               	movwf	17	;volatile
   697     00BF                     l724:
   698                           
   699                           ;newmain.c: 28:     TRISCbits.TRISC3 = 1;
   700     00BF  1587               	bsf	7,3	;volatile
   701     00C0                     l726:
   702                           
   703                           ;newmain.c: 29:     TRISCbits.TRISC4 = 1;
   704     00C0  1607               	bsf	7,4	;volatile
   705     00C1                     l728:
   706                           
   707                           ;newmain.c: 30:     SSPCONbits.CKP = 1;
   708     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   709     00C2  1303               	bcf	3,6	;RP1=0, select bank0
   710     00C3  1614               	bsf	20,4	;volatile
   711     00C4                     l730:
   712                           
   713                           ;newmain.c: 32:     SSPIF = 0;
   714     00C4  118C               	bcf	12,3	;volatile
   715     00C5                     l732:
   716                           
   717                           ;newmain.c: 33:     SSPIE = 1;
   718     00C5  1683               	bsf	3,5	;RP0=1, select bank1
   719     00C6  1303               	bcf	3,6	;RP1=0, select bank1
   720     00C7  158C               	bsf	12,3	;volatile
   721     00C8                     l734:
   722                           
   723                           ;newmain.c: 35:     GIE = 1;
   724     00C8  178B               	bsf	11,7	;volatile
   725     00C9                     l736:
   726                           
   727                           ;newmain.c: 36:     PEIE = 1;
   728     00C9  170B               	bsf	11,6	;volatile
   729     00CA                     l39:
   730     00CA  0008               	return
   731     00CB                     __end_of_I2C_Slave_Init:
   732                           
   733                           	psect	text5
   734     00CB                     __ptext5:	
   735 ;; *************** function _ISR *****************
   736 ;; Defined at:
   737 ;;		line 39 in file "newmain.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          2       0       0       0       0
   754 ;;      Totals:         2       0       0       0       0
   755 ;;Total ram usage:        2 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		Interrupt level 1
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764     00CB                     _ISR:	
   765                           ;psect for function _ISR
   766                           
   767     00CB                     i1l698:
   768                           
   769                           ;newmain.c: 40:     if (SSPIF) {
   770     00CB  1283               	bcf	3,5	;RP0=0, select bank0
   771     00CC  1303               	bcf	3,6	;RP1=0, select bank0
   772     00CD  1D8C               	btfss	12,3	;volatile
   773     00CE  28D0               	goto	u1_21
   774     00CF  28D1               	goto	u1_20
   775     00D0                     u1_21:
   776     00D0  28DE               	goto	i1l46
   777     00D1                     u1_20:
   778     00D1                     i1l700:
   779                           
   780                           ;newmain.c: 41:         if (!SSPSTATbits.R_nW) {
   781     00D1  1683               	bsf	3,5	;RP0=1, select bank1
   782     00D2  1303               	bcf	3,6	;RP1=0, select bank1
   783     00D3  1914               	btfsc	20,2	;volatile
   784     00D4  28D6               	goto	u2_21
   785     00D5  28D7               	goto	u2_20
   786     00D6                     u2_21:
   787     00D6  28DB               	goto	i1l704
   788     00D7                     u2_20:
   789     00D7                     i1l702:
   790                           
   791                           ;newmain.c: 42:             receivedData = SSPBUF;
   792     00D7  1283               	bcf	3,5	;RP0=0, select bank0
   793     00D8  1303               	bcf	3,6	;RP1=0, select bank0
   794     00D9  0813               	movf	19,w	;volatile
   795     00DA  00F5               	movwf	_receivedData	;volatile
   796     00DB                     i1l704:
   797                           
   798                           ;newmain.c: 46:         SSPIF = 0;
   799     00DB  1283               	bcf	3,5	;RP0=0, select bank0
   800     00DC  118C               	bcf	12,3	;volatile
   801     00DD                     i1l706:
   802                           
   803                           ;newmain.c: 47:         SSPCONbits.CKP = 1;
   804     00DD  1614               	bsf	20,4	;volatile
   805     00DE                     i1l46:
   806     00DE  0871               	movf	??_ISR+1,w
   807     00DF  008A               	movwf	10
   808     00E0  0E70               	swapf	??_ISR,w
   809     00E1  0083               	movwf	3
   810     00E2  0EFE               	swapf	btemp,f
   811     00E3  0E7E               	swapf	btemp,w
   812     00E4  0009               	retfie
   813     00E5                     __end_of_ISR:
   814     007E                     btemp	set	126	;btemp
   815     007E                     wtemp0	set	126
   816                           
   817                           	psect	intentry
   818     0004                     __pintentry:	
   819                           ;incstack = 0
   820                           ; Regs used in _ISR: [wreg]
   821                           
   822     0004                     interrupt_function:
   823     007E                     saved_w	set	btemp
   824     0004  00FE               	movwf	btemp
   825     0005  0E03               	swapf	3,w
   826     0006  00F0               	movwf	??_ISR
   827     0007  080A               	movf	10,w
   828     0008  00F1               	movwf	??_ISR+1
   829     0009  120A  118A  28CB   	ljmp	_ISR
   830                           
   831                           	psect	idloc
   832                           
   833                           ;Config register IDLOC0 @ 0x2000
   834                           ;	unspecified, using default values
   835     2000                     	org	8192
   836     2000  3FFF               	dw	16383
   837                           
   838                           ;Config register IDLOC1 @ 0x2001
   839                           ;	unspecified, using default values
   840     2001                     	org	8193
   841     2001  3FFF               	dw	16383
   842                           
   843                           ;Config register IDLOC2 @ 0x2002
   844                           ;	unspecified, using default values
   845     2002                     	org	8194
   846     2002  3FFF               	dw	16383
   847                           
   848                           ;Config register IDLOC3 @ 0x2003
   849                           ;	unspecified, using default values
   850     2003                     	org	8195
   851     2003  3FFF               	dw	16383
   852                           
   853                           	psect	config
   854                           
   855                           ;Config register CONFIG @ 0x2007
   856                           ;	Oscillator Selection bits
   857                           ;	FOSC = HS, HS oscillator
   858                           ;	Watchdog Timer Enable bit
   859                           ;	WDTE = OFF, WDT disabled
   860                           ;	Power-up Timer Enable bit
   861                           ;	PWRTE = OFF, PWRT disabled
   862                           ;	Brown-out Reset Enable bit
   863                           ;	BOREN = OFF, BOR disabled
   864                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   865                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   866                           ;	Data EEPROM Memory Code Protection bit
   867                           ;	CPD = OFF, Data EEPROM code protection off
   868                           ;	Flash Program Memory Write Enable bits
   869                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   870                           ;	In-Circuit Debugger Mode bit
   871                           ;	DEBUG = 0x1, unprogrammed default
   872                           ;	Flash Program Memory Code Protection bit
   873                           ;	CP = OFF, Code protection off
   874     2007                     	org	8199
   875     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd_cmd
    _main->_lcd_data
    _lcd_init->_lcd_cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     143
                     _I2C_Slave_Init
                            _lcd_cmd
                           _lcd_data
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _lcd_cmd
   _lcd_data
   _lcd_init
     _lcd_cmd

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 06 05:25:10 2023

           lcd_data@data 0074              _SSPSTATbits 0094                       l52 0091  
                     l39 00CA                       l55 00B0                       l49 006D  
                     u50 0030                       u51 002F                       u60 0036  
                     u61 0035                       u77 0059                       u87 0068  
                     u97 007D                      l730 00C4                      l722 00B1  
                    l732 00C5                      l724 00BF                      l660 0050  
                    l740 001C                      l734 00C8                      l726 00C0  
                    l662 0054                      l750 0042                      l742 0025  
                    l736 00C9                      l728 00C1                      l664 005E  
                    l656 0048                      l744 002A                      l690 0078  
                    l666 0064                      l658 004C                      l746 0030  
                    l738 0014                      l692 0079                      l684 006F  
                    l748 0036                      l694 0088                      l686 0073  
                    l688 0074                      l696 0092                      _GIE 005F  
                    u107 008C                      _ISR 00CB                     ?_ISR 0070  
                   _PEIE 005E                     i1l46 00DE                     u1_20 00D1  
                   u1_21 00D0                     u2_20 00D7                     u2_21 00D6  
                   _main 0014                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l700 00D1  
                  i1l702 00D7                    i1l704 00DB                    i1l706 00DD  
                  i1l698 00CB                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063          __end_of_lcd_cmd 006E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0047                   ??_main 0075                   _SSPADD 0093  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_lcd_data 0092  
       __end_of_lcd_init 00B1                ??_lcd_cmd 0072                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070    I2C_Slave_Init@address 0072  
             __pmaintext 0014               __pintentry 0004                  _SSPCON2 0091  
              ?_lcd_data 0070                ?_lcd_init 0070                  _SSPSTAT 0094  
                __ptext1 0092                  __ptext2 0047                  __ptext3 006E  
                __ptext4 00B1                  __ptext5 00CB                  _lcd_cmd 0047  
             ??_lcd_data 0072               ??_lcd_init 0075     end_of_initialization 0010  
         _I2C_Slave_Init 00B1                _TRISCbits 0087               lcd_cmd@cmd 0074  
 __end_of_I2C_Slave_Init 00CB      start_initialization 000F              __end_of_ISR 00E5  
        ?_I2C_Slave_Init 0072              __pbssCOMMON 0075                ___latbits 0002  
               ?_lcd_cmd 0070             _receivedData 0075        interrupt_function 0004  
               _lcd_data 006E                 _lcd_init 0092         ??_I2C_Slave_Init 0074  
               intlevel1 0000               _SSPCONbits 0014  
