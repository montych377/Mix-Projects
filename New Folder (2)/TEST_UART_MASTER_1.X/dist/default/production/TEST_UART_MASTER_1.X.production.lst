

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 17 05:01:46 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     001A                     _RCREG	set	26
   173     0019                     _TXREG	set	25
   174     0018                     _RCSTAbits	set	24
   175     0006                     _PORTB	set	6
   176     0065                     _RCIF	set	101
   177     00C4                     _CREN	set	196
   178     00C1                     _OERR	set	193
   179     0064                     _TXIF	set	100
   180     0098                     _TXSTAbits	set	152
   181     0099                     _SPBRG	set	153
   182     0086                     _TRISB	set	134
   183                           
   184                           	psect	strings
   185     0003                     __pstrings:
   186     0003                     stringtab:
   187     0003                     __stringtab:
   188     0003                     stringcode:	
   189                           ;	String table - string pointers are 1 byte each
   190                           
   191     0003                     stringdir:
   192     0003  3000               	movlw	high stringdir
   193     0004  008A               	movwf	10
   194     0005  0804               	movf	4,w
   195     0006  0A84               	incf	4,f
   196     0007  0782               	addwf	2,f
   197     0008                     __stringbase:
   198     0008  3400               	retlw	0
   199     0009                     __end_of__stringtab:
   200     0009                     STR_1:
   201     0009  3448               	retlw	72	;'H'
   202     000A  3445               	retlw	69	;'E'
   203     000B  344C               	retlw	76	;'L'
   204     000C  344C               	retlw	76	;'L'
   205     000D  344F               	retlw	79	;'O'
   206     000E  340D               	retlw	13
   207     000F  3400               	retlw	0
   208                           
   209                           	psect	cinit
   210     07FC                     start_initialization:	
   211                           ; #config settings
   212                           
   213     07FC                     __initialization:
   214     07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217     07FC                     __end_of__initialization:
   218     07FC  0183               	clrf	3
   219     07FD  120A  118A  2EFF   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	cstackCOMMON
   222     0070                     __pcstackCOMMON:
   223     0070                     ?_UART_WriteString:
   224     0070                     ?_UART_TransmitData:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ??_UART_TransmitData:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?___aldiv:	
   234                           ; 2 bytes @ 0x0
   235                           
   236     0070                     UART_TransmitData@data:	
   237                           ; 4 bytes @ 0x0
   238                           
   239     0070                     ___aldiv@divisor:	
   240                           ; 1 bytes @ 0x0
   241                           
   242                           
   243                           ; 4 bytes @ 0x0
   244     0070                     	ds	1
   245     0071                     ??_UART_WriteString:
   246     0071                     UART_WriteString@ptr:	
   247                           ; 1 bytes @ 0x1
   248                           
   249                           
   250                           ; 1 bytes @ 0x1
   251     0071                     	ds	3
   252     0074                     ___aldiv@dividend:
   253                           
   254                           ; 4 bytes @ 0x4
   255     0074                     	ds	4
   256     0078                     ??___aldiv:
   257                           
   258                           ; 1 bytes @ 0x8
   259     0078                     	ds	1
   260     0079                     ??_UART_Initialize:
   261                           
   262                           ; 1 bytes @ 0x9
   263     0079                     	ds	4
   264                           
   265                           	psect	cstackBANK0
   266     0020                     __pcstackBANK0:
   267     0020                     ___aldiv@counter:
   268                           
   269                           ; 1 bytes @ 0x0
   270     0020                     	ds	1
   271     0021                     ___aldiv@sign:
   272                           
   273                           ; 1 bytes @ 0x1
   274     0021                     	ds	1
   275     0022                     ___aldiv@quotient:
   276                           
   277                           ; 4 bytes @ 0x2
   278     0022                     	ds	4
   279     0026                     ?_UART_Initialize:
   280     0026                     UART_Initialize@baud:	
   281                           ; 1 bytes @ 0x6
   282                           
   283                           
   284                           ; 4 bytes @ 0x6
   285     0026                     	ds	4
   286     002A                     ??_main:
   287                           
   288                           ; 1 bytes @ 0xA
   289     002A                     	ds	3
   290                           
   291                           	psect	maintext
   292     06FF                     __pmaintext:	
   293 ;;
   294 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   295 ;;
   296 ;; *************** function _main *****************
   297 ;; Defined at:
   298 ;;		line 20 in file "newmain.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  2   32[None  ] int 
   305 ;; Registers used:
   306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   307 ;; Tracked objects:
   308 ;;		On entry : B00/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   312 ;;      Params:         0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0
   314 ;;      Temps:          0       3       0       0       0
   315 ;;      Totals:         0       3       0       0       0
   316 ;;Total ram usage:        3 bytes
   317 ;; Hardware stack levels required when called: 2
   318 ;; This function calls:
   319 ;;		_UART_Initialize
   320 ;;		_UART_WriteString
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326     06FF                     _main:	
   327                           ;psect for function _main
   328                           
   329     06FF                     l788:	
   330                           ;incstack = 0
   331                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   332                           
   333                           
   334                           ;newmain.c: 21:     TRISB = 0x00;
   335     06FF  1683               	bsf	3,5	;RP0=1, select bank1
   336     0700  1303               	bcf	3,6	;RP1=0, select bank1
   337     0701  0186               	clrf	6	;volatile
   338                           
   339                           ;newmain.c: 22:     PORTB = 0x00;
   340     0702  1283               	bcf	3,5	;RP0=0, select bank0
   341     0703  1303               	bcf	3,6	;RP1=0, select bank0
   342     0704  0186               	clrf	6	;volatile
   343     0705                     l790:
   344                           
   345                           ;newmain.c: 23:     UART_Initialize(9600);
   346     0705  3000               	movlw	0
   347     0706  00A9               	movwf	UART_Initialize@baud+3
   348     0707  3000               	movlw	0
   349     0708  00A8               	movwf	UART_Initialize@baud+2
   350     0709  3025               	movlw	37
   351     070A  00A7               	movwf	UART_Initialize@baud+1
   352     070B  3080               	movlw	128
   353     070C  00A6               	movwf	UART_Initialize@baud
   354     070D  120A  118A  272B  120A  118A  	fcall	_UART_Initialize
   355     0712                     l792:
   356                           
   357                           ;newmain.c: 26:          UART_WriteString("HELLO\r");
   358     0712  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   359     0713  120A  118A  26E0  120A  118A  	fcall	_UART_WriteString
   360     0718                     l794:
   361                           
   362                           ;newmain.c: 27:          _delay((unsigned long)((200)*(8000000/4000.0)));
   363     0718  3003               	movlw	3
   364     0719  1283               	bcf	3,5	;RP0=0, select bank0
   365     071A  1303               	bcf	3,6	;RP1=0, select bank0
   366     071B  00AC               	movwf	??_main+2
   367     071C  3008               	movlw	8
   368     071D  00AB               	movwf	??_main+1
   369     071E  3076               	movlw	118
   370     071F  00AA               	movwf	??_main
   371     0720                     u287:
   372     0720  0BAA               	decfsz	??_main,f
   373     0721  2F20               	goto	u287
   374     0722  0BAB               	decfsz	??_main+1,f
   375     0723  2F20               	goto	u287
   376     0724  0BAC               	decfsz	??_main+2,f
   377     0725  2F20               	goto	u287
   378     0726  0000               	nop
   379     0727  2F12               	goto	l792
   380     0728  120A  118A  2800   	ljmp	start
   381     072B                     __end_of_main:
   382                           
   383                           	psect	text1
   384     06E0                     __ptext1:	
   385 ;; *************** function _UART_WriteString *****************
   386 ;; Defined at:
   387 ;;		line 53 in file "newmain.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  ptr             1    wreg     PTR const unsigned char 
   390 ;;		 -> STR_1(7), 
   391 ;; Auto vars:     Size  Location     Type
   392 ;;  ptr             1    1[COMMON] PTR const unsigned char 
   393 ;;		 -> STR_1(7), 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         1       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0
   406 ;;      Totals:         1       0       0       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 1
   410 ;; This function calls:
   411 ;;		_UART_TransmitData
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417     06E0                     _UART_WriteString:	
   418                           ;psect for function _UART_WriteString
   419                           
   420                           
   421                           ;incstack = 0
   422                           ; Regs used in _UART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   423                           ;UART_WriteString@ptr stored from wreg
   424     06E0  00F1               	movwf	UART_WriteString@ptr
   425     06E1                     l780:
   426                           
   427                           ;newmain.c: 55:     while(*ptr){
   428     06E1  2EF2               	goto	l786
   429     06E2                     l782:
   430                           
   431                           ;newmain.c: 57:         UART_TransmitData(*ptr++);
   432     06E2  0871               	movf	UART_WriteString@ptr,w
   433     06E3  0084               	movwf	4
   434     06E4  120A  118A  2003  120A  118A  	fcall	stringdir
   435     06E9  120A  118A  26D6  120A  118A  	fcall	_UART_TransmitData
   436     06EE                     l784:
   437     06EE  3001               	movlw	1
   438     06EF  00FF               	movwf	btemp+1
   439     06F0  087F               	movf	btemp+1,w
   440     06F1  07F1               	addwf	UART_WriteString@ptr,f
   441     06F2                     l786:
   442                           
   443                           ;newmain.c: 55:     while(*ptr){
   444     06F2  0871               	movf	UART_WriteString@ptr,w
   445     06F3  0084               	movwf	4
   446     06F4  120A  118A  2003  120A  118A  	fcall	stringdir
   447     06F9  3A00               	xorlw	0
   448     06FA  1D03               	skipz
   449     06FB  2EFD               	goto	u271
   450     06FC  2EFE               	goto	u270
   451     06FD                     u271:
   452     06FD  2EE2               	goto	l782
   453     06FE                     u270:
   454     06FE                     l58:
   455     06FE  0008               	return
   456     06FF                     __end_of_UART_WriteString:
   457                           
   458                           	psect	text2
   459     06D6                     __ptext2:	
   460 ;; *************** function _UART_TransmitData *****************
   461 ;; Defined at:
   462 ;;		line 40 in file "newmain.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  data            1    wreg     unsigned char 
   465 ;; Auto vars:     Size  Location     Type
   466 ;;  data            1    0[COMMON] unsigned char 
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         1       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         1       0       0       0       0
   480 ;;Total ram usage:        1 bytes
   481 ;; Hardware stack levels used: 1
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_UART_WriteString
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489     06D6                     _UART_TransmitData:	
   490                           ;psect for function _UART_TransmitData
   491                           
   492                           
   493                           ;incstack = 0
   494                           ; Regs used in _UART_TransmitData: [wreg]
   495                           ;UART_TransmitData@data stored from wreg
   496     06D6  00F0               	movwf	UART_TransmitData@data
   497     06D7                     l650:
   498                           
   499                           ;newmain.c: 41:     TXREG = data;
   500     06D7  0870               	movf	UART_TransmitData@data,w
   501     06D8  1283               	bcf	3,5	;RP0=0, select bank0
   502     06D9  1303               	bcf	3,6	;RP1=0, select bank0
   503     06DA  0099               	movwf	25	;volatile
   504     06DB                     l42:	
   505                           ;newmain.c: 42:     while(!TXIF);
   506                           
   507     06DB  1E0C               	btfss	12,4	;volatile
   508     06DC  2EDE               	goto	u11
   509     06DD  2EDF               	goto	u10
   510     06DE                     u11:
   511     06DE  2EDB               	goto	l42
   512     06DF                     u10:
   513     06DF                     l45:
   514     06DF  0008               	return
   515     06E0                     __end_of_UART_TransmitData:
   516                           
   517                           	psect	text3
   518     072B                     __ptext3:	
   519 ;; *************** function _UART_Initialize *****************
   520 ;; Defined at:
   521 ;;		line 32 in file "newmain.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  baud            4    6[BANK0 ] long 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       4       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          4       0       0       0       0
   538 ;;      Totals:         4       4       0       0       0
   539 ;;Total ram usage:        8 bytes
   540 ;; Hardware stack levels used: 1
   541 ;; Hardware stack levels required when called: 1
   542 ;; This function calls:
   543 ;;		___aldiv
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549     072B                     _UART_Initialize:	
   550                           ;psect for function _UART_Initialize
   551                           
   552     072B                     l770:	
   553                           ;incstack = 0
   554                           ; Regs used in _UART_Initialize: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   555                           
   556                           
   557                           ;newmain.c: 34:     SPBRG = (((8000000)/(16*baud))-1);
   558     072B  1283               	bcf	3,5	;RP0=0, select bank0
   559     072C  1303               	bcf	3,6	;RP1=0, select bank0
   560     072D  0826               	movf	UART_Initialize@baud,w
   561     072E  00F9               	movwf	??_UART_Initialize
   562     072F  0827               	movf	UART_Initialize@baud+1,w
   563     0730  00FA               	movwf	??_UART_Initialize+1
   564     0731  0828               	movf	UART_Initialize@baud+2,w
   565     0732  00FB               	movwf	??_UART_Initialize+2
   566     0733  0829               	movf	UART_Initialize@baud+3,w
   567     0734  00FC               	movwf	??_UART_Initialize+3
   568     0735  3004               	movlw	4
   569     0736                     u265:
   570     0736  1003               	clrc
   571     0737  0DF9               	rlf	??_UART_Initialize,f
   572     0738  0DFA               	rlf	??_UART_Initialize+1,f
   573     0739  0DFB               	rlf	??_UART_Initialize+2,f
   574     073A  0DFC               	rlf	??_UART_Initialize+3,f
   575     073B                     u260:
   576     073B  3EFF               	addlw	-1
   577     073C  1D03               	skipz
   578     073D  2F36               	goto	u265
   579     073E  087C               	movf	??_UART_Initialize+3,w
   580     073F  00F3               	movwf	___aldiv@divisor+3
   581     0740  087B               	movf	??_UART_Initialize+2,w
   582     0741  00F2               	movwf	___aldiv@divisor+2
   583     0742  087A               	movf	??_UART_Initialize+1,w
   584     0743  00F1               	movwf	___aldiv@divisor+1
   585     0744  0879               	movf	??_UART_Initialize,w
   586     0745  00F0               	movwf	___aldiv@divisor
   587     0746  3000               	movlw	0
   588     0747  00F7               	movwf	___aldiv@dividend+3
   589     0748  307A               	movlw	122
   590     0749  00F6               	movwf	___aldiv@dividend+2
   591     074A  3012               	movlw	18
   592     074B  00F5               	movwf	___aldiv@dividend+1
   593     074C  3000               	movlw	0
   594     074D  00F4               	movwf	___aldiv@dividend
   595     074E  120A  118A  275F  120A  118A  	fcall	___aldiv
   596     0753  0870               	movf	?___aldiv,w
   597     0754  3EFF               	addlw	255
   598     0755  1683               	bsf	3,5	;RP0=1, select bank1
   599     0756  1303               	bcf	3,6	;RP1=0, select bank1
   600     0757  0099               	movwf	25	;volatile
   601     0758                     l772:
   602                           
   603                           ;newmain.c: 35:     TXSTAbits.BRGH = 1;
   604     0758  1518               	bsf	24,2	;volatile
   605     0759                     l774:
   606                           
   607                           ;newmain.c: 36:     TXSTAbits.TXEN = 1;
   608     0759  1698               	bsf	24,5	;volatile
   609     075A                     l776:
   610                           
   611                           ;newmain.c: 37:     RCSTAbits.SPEN = 1;
   612     075A  1283               	bcf	3,5	;RP0=0, select bank0
   613     075B  1303               	bcf	3,6	;RP1=0, select bank0
   614     075C  1798               	bsf	24,7	;volatile
   615     075D                     l778:
   616                           
   617                           ;newmain.c: 38:     RCSTAbits.CREN = 1;
   618     075D  1618               	bsf	24,4	;volatile
   619     075E                     l39:
   620     075E  0008               	return
   621     075F                     __end_of_UART_Initialize:
   622                           
   623                           	psect	text4
   624     075F                     __ptext4:	
   625 ;; *************** function ___aldiv *****************
   626 ;; Defined at:
   627 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  divisor         4    0[COMMON] long 
   630 ;;  dividend        4    4[COMMON] long 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  quotient        4    2[BANK0 ] long 
   633 ;;  sign            1    1[BANK0 ] unsigned char 
   634 ;;  counter         1    0[BANK0 ] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;                  4    0[COMMON] long 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, btemp+1
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         8       0       0       0       0
   645 ;;      Locals:         0       6       0       0       0
   646 ;;      Temps:          1       0       0       0       0
   647 ;;      Totals:         9       6       0       0       0
   648 ;;Total ram usage:       15 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_UART_Initialize
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657     075F                     ___aldiv:	
   658                           ;psect for function ___aldiv
   659                           
   660     075F                     l728:	
   661                           ;incstack = 0
   662                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   663                           
   664     075F  1283               	bcf	3,5	;RP0=0, select bank0
   665     0760  1303               	bcf	3,6	;RP1=0, select bank0
   666     0761  01A1               	clrf	___aldiv@sign
   667     0762                     l730:
   668     0762  1FF3               	btfss	___aldiv@divisor+3,7
   669     0763  2F65               	goto	u161
   670     0764  2F66               	goto	u160
   671     0765                     u161:
   672     0765  2F73               	goto	l209
   673     0766                     u160:
   674     0766                     l732:
   675     0766  09F0               	comf	___aldiv@divisor,f
   676     0767  09F1               	comf	___aldiv@divisor+1,f
   677     0768  09F2               	comf	___aldiv@divisor+2,f
   678     0769  09F3               	comf	___aldiv@divisor+3,f
   679     076A  0AF0               	incf	___aldiv@divisor,f
   680     076B  1903               	skipnz
   681     076C  0AF1               	incf	___aldiv@divisor+1,f
   682     076D  1903               	skipnz
   683     076E  0AF2               	incf	___aldiv@divisor+2,f
   684     076F  1903               	skipnz
   685     0770  0AF3               	incf	___aldiv@divisor+3,f
   686     0771  01A1               	clrf	___aldiv@sign
   687     0772  0AA1               	incf	___aldiv@sign,f
   688     0773                     l209:
   689     0773  1FF7               	btfss	___aldiv@dividend+3,7
   690     0774  2F76               	goto	u171
   691     0775  2F77               	goto	u170
   692     0776                     u171:
   693     0776  2F86               	goto	l738
   694     0777                     u170:
   695     0777                     l734:
   696     0777  09F4               	comf	___aldiv@dividend,f
   697     0778  09F5               	comf	___aldiv@dividend+1,f
   698     0779  09F6               	comf	___aldiv@dividend+2,f
   699     077A  09F7               	comf	___aldiv@dividend+3,f
   700     077B  0AF4               	incf	___aldiv@dividend,f
   701     077C  1903               	skipnz
   702     077D  0AF5               	incf	___aldiv@dividend+1,f
   703     077E  1903               	skipnz
   704     077F  0AF6               	incf	___aldiv@dividend+2,f
   705     0780  1903               	skipnz
   706     0781  0AF7               	incf	___aldiv@dividend+3,f
   707     0782                     l736:
   708     0782  3001               	movlw	1
   709     0783  00FF               	movwf	btemp+1
   710     0784  087F               	movf	btemp+1,w
   711     0785  06A1               	xorwf	___aldiv@sign,f
   712     0786                     l738:
   713     0786  3000               	movlw	0
   714     0787  00A5               	movwf	___aldiv@quotient+3
   715     0788  3000               	movlw	0
   716     0789  00A4               	movwf	___aldiv@quotient+2
   717     078A  3000               	movlw	0
   718     078B  00A3               	movwf	___aldiv@quotient+1
   719     078C  3000               	movlw	0
   720     078D  00A2               	movwf	___aldiv@quotient
   721     078E                     l740:
   722     078E  0873               	movf	___aldiv@divisor+3,w
   723     078F  0472               	iorwf	___aldiv@divisor+2,w
   724     0790  0471               	iorwf	___aldiv@divisor+1,w
   725     0791  0470               	iorwf	___aldiv@divisor,w
   726     0792  1903               	skipnz
   727     0793  2F95               	goto	u181
   728     0794  2F96               	goto	u180
   729     0795                     u181:
   730     0795  2FE3               	goto	l762
   731     0796                     u180:
   732     0796                     l742:
   733     0796  01A0               	clrf	___aldiv@counter
   734     0797  0AA0               	incf	___aldiv@counter,f
   735     0798  2FA6               	goto	l748
   736     0799                     l744:
   737     0799  3001               	movlw	1
   738     079A  00F8               	movwf	??___aldiv
   739     079B                     u195:
   740     079B  1003               	clrc
   741     079C  0DF0               	rlf	___aldiv@divisor,f
   742     079D  0DF1               	rlf	___aldiv@divisor+1,f
   743     079E  0DF2               	rlf	___aldiv@divisor+2,f
   744     079F  0DF3               	rlf	___aldiv@divisor+3,f
   745     07A0  0BF8               	decfsz	??___aldiv,f
   746     07A1  2F9B               	goto	u195
   747     07A2                     l746:
   748     07A2  3001               	movlw	1
   749     07A3  00FF               	movwf	btemp+1
   750     07A4  087F               	movf	btemp+1,w
   751     07A5  07A0               	addwf	___aldiv@counter,f
   752     07A6                     l748:
   753     07A6  1FF3               	btfss	___aldiv@divisor+3,7
   754     07A7  2FA9               	goto	u201
   755     07A8  2FAA               	goto	u200
   756     07A9                     u201:
   757     07A9  2F99               	goto	l744
   758     07AA                     u200:
   759     07AA                     l750:
   760     07AA  3001               	movlw	1
   761     07AB  00F8               	movwf	??___aldiv
   762     07AC                     u215:
   763     07AC  1003               	clrc
   764     07AD  0DA2               	rlf	___aldiv@quotient,f
   765     07AE  0DA3               	rlf	___aldiv@quotient+1,f
   766     07AF  0DA4               	rlf	___aldiv@quotient+2,f
   767     07B0  0DA5               	rlf	___aldiv@quotient+3,f
   768     07B1  0BF8               	decfsz	??___aldiv,f
   769     07B2  2FAC               	goto	u215
   770     07B3                     l752:
   771     07B3  0873               	movf	___aldiv@divisor+3,w
   772     07B4  0277               	subwf	___aldiv@dividend+3,w
   773     07B5  1D03               	skipz
   774     07B6  2FC1               	goto	u225
   775     07B7  0872               	movf	___aldiv@divisor+2,w
   776     07B8  0276               	subwf	___aldiv@dividend+2,w
   777     07B9  1D03               	skipz
   778     07BA  2FC1               	goto	u225
   779     07BB  0871               	movf	___aldiv@divisor+1,w
   780     07BC  0275               	subwf	___aldiv@dividend+1,w
   781     07BD  1D03               	skipz
   782     07BE  2FC1               	goto	u225
   783     07BF  0870               	movf	___aldiv@divisor,w
   784     07C0  0274               	subwf	___aldiv@dividend,w
   785     07C1                     u225:
   786     07C1  1C03               	skipc
   787     07C2  2FC4               	goto	u221
   788     07C3  2FC5               	goto	u220
   789     07C4                     u221:
   790     07C4  2FD4               	goto	l758
   791     07C5                     u220:
   792     07C5                     l754:
   793     07C5  0870               	movf	___aldiv@divisor,w
   794     07C6  02F4               	subwf	___aldiv@dividend,f
   795     07C7  0871               	movf	___aldiv@divisor+1,w
   796     07C8  1C03               	skipc
   797     07C9  0F71               	incfsz	___aldiv@divisor+1,w
   798     07CA  02F5               	subwf	___aldiv@dividend+1,f
   799     07CB  0872               	movf	___aldiv@divisor+2,w
   800     07CC  1C03               	skipc
   801     07CD  0F72               	incfsz	___aldiv@divisor+2,w
   802     07CE  02F6               	subwf	___aldiv@dividend+2,f
   803     07CF  0873               	movf	___aldiv@divisor+3,w
   804     07D0  1C03               	skipc
   805     07D1  0F73               	incfsz	___aldiv@divisor+3,w
   806     07D2  02F7               	subwf	___aldiv@dividend+3,f
   807     07D3                     l756:
   808     07D3  1422               	bsf	___aldiv@quotient,0
   809     07D4                     l758:
   810     07D4  3001               	movlw	1
   811     07D5                     u235:
   812     07D5  1003               	clrc
   813     07D6  0CF3               	rrf	___aldiv@divisor+3,f
   814     07D7  0CF2               	rrf	___aldiv@divisor+2,f
   815     07D8  0CF1               	rrf	___aldiv@divisor+1,f
   816     07D9  0CF0               	rrf	___aldiv@divisor,f
   817     07DA  3EFF               	addlw	-1
   818     07DB  1D03               	skipz
   819     07DC  2FD5               	goto	u235
   820     07DD                     l760:
   821     07DD  3001               	movlw	1
   822     07DE  02A0               	subwf	___aldiv@counter,f
   823     07DF  1D03               	btfss	3,2
   824     07E0  2FE2               	goto	u241
   825     07E1  2FE3               	goto	u240
   826     07E2                     u241:
   827     07E2  2FAA               	goto	l750
   828     07E3                     u240:
   829     07E3                     l762:
   830     07E3  0821               	movf	___aldiv@sign,w
   831     07E4  1903               	btfsc	3,2
   832     07E5  2FE7               	goto	u251
   833     07E6  2FE8               	goto	u250
   834     07E7                     u251:
   835     07E7  2FF3               	goto	l766
   836     07E8                     u250:
   837     07E8                     l764:
   838     07E8  09A2               	comf	___aldiv@quotient,f
   839     07E9  09A3               	comf	___aldiv@quotient+1,f
   840     07EA  09A4               	comf	___aldiv@quotient+2,f
   841     07EB  09A5               	comf	___aldiv@quotient+3,f
   842     07EC  0AA2               	incf	___aldiv@quotient,f
   843     07ED  1903               	skipnz
   844     07EE  0AA3               	incf	___aldiv@quotient+1,f
   845     07EF  1903               	skipnz
   846     07F0  0AA4               	incf	___aldiv@quotient+2,f
   847     07F1  1903               	skipnz
   848     07F2  0AA5               	incf	___aldiv@quotient+3,f
   849     07F3                     l766:
   850     07F3  0825               	movf	___aldiv@quotient+3,w
   851     07F4  00F3               	movwf	?___aldiv+3
   852     07F5  0824               	movf	___aldiv@quotient+2,w
   853     07F6  00F2               	movwf	?___aldiv+2
   854     07F7  0823               	movf	___aldiv@quotient+1,w
   855     07F8  00F1               	movwf	?___aldiv+1
   856     07F9  0822               	movf	___aldiv@quotient,w
   857     07FA  00F0               	movwf	?___aldiv
   858     07FB                     l219:
   859     07FB  0008               	return
   860     07FC                     __end_of___aldiv:
   861     007E                     btemp	set	126	;btemp
   862     007E                     wtemp0	set	126
   863                           
   864                           	psect	idloc
   865                           
   866                           ;Config register IDLOC0 @ 0x2000
   867                           ;	unspecified, using default values
   868     2000                     	org	8192
   869     2000  3FFF               	dw	16383
   870                           
   871                           ;Config register IDLOC1 @ 0x2001
   872                           ;	unspecified, using default values
   873     2001                     	org	8193
   874     2001  3FFF               	dw	16383
   875                           
   876                           ;Config register IDLOC2 @ 0x2002
   877                           ;	unspecified, using default values
   878     2002                     	org	8194
   879     2002  3FFF               	dw	16383
   880                           
   881                           ;Config register IDLOC3 @ 0x2003
   882                           ;	unspecified, using default values
   883     2003                     	org	8195
   884     2003  3FFF               	dw	16383
   885                           
   886                           	psect	config
   887                           
   888                           ;Config register CONFIG @ 0x2007
   889                           ;	Oscillator Selection bits
   890                           ;	FOSC = HS, HS oscillator
   891                           ;	Watchdog Timer Enable bit
   892                           ;	WDTE = OFF, WDT disabled
   893                           ;	Power-up Timer Enable bit
   894                           ;	PWRTE = OFF, PWRT disabled
   895                           ;	Brown-out Reset Enable bit
   896                           ;	BOREN = OFF, BOR disabled
   897                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   898                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   899                           ;	Data EEPROM Memory Code Protection bit
   900                           ;	CPD = OFF, Data EEPROM code protection off
   901                           ;	Flash Program Memory Write Enable bits
   902                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   903                           ;	In-Circuit Debugger Mode bit
   904                           ;	DEBUG = 0x1, unprogrammed default
   905                           ;	Flash Program Memory Code Protection bit
   906                           ;	CP = OFF, Code protection off
   907     2007                     	org	8199
   908     2007  3F3A               	dw	16186

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     13      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_WriteString@ptr	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_UART_Initialize
    _UART_WriteString->_UART_TransmitData
    _UART_Initialize->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Initialize
    _UART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     643
                                             10 BANK0      3     3      0
                    _UART_Initialize
                   _UART_WriteString
 ---------------------------------------------------------------------------------
 (1) _UART_WriteString                                     1     1      0      93
                                              1 COMMON     1     1      0
                  _UART_TransmitData
 ---------------------------------------------------------------------------------
 (2) _UART_TransmitData                                    1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      8     4      4     550
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Initialize
     ___aldiv
   _UART_WriteString
     _UART_TransmitData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 17 05:01:46 2023

                        pc 0002                         l42 06DB                         l45 06DF  
                       l39 075E                         l58 06FE                         u10 06DF  
                       u11 06DE                         fsr 0004                        l209 0773  
                      l219 07FB                        l730 0762                        l650 06D7  
                      l740 078E                        l732 0766                        l750 07AA  
                      l742 0796                        l734 0777                        l760 07DD  
                      l752 07B3                        l744 0799                        l736 0782  
                      l728 075F                        l754 07C5                        l746 07A2  
                      l762 07E3                        l738 0786                        l770 072B  
                      l764 07E8                        l756 07D3                        l748 07A6  
                      l772 0758                        l780 06E1                        l766 07F3  
                      l758 07D4                        l774 0759                        l782 06E2  
                      l790 0705                        l776 075A                        l784 06EE  
                      l792 0712                        l778 075D                        l786 06F2  
                      l794 0718                        l788 06FF                        u200 07AA  
                      u201 07A9                        u220 07C5                        u221 07C4  
                      u215 07AC                        u240 07E3                        u160 0766  
                      u241 07E2                        u225 07C1                        u161 0765  
                      u250 07E8                        u170 0777                        u251 07E7  
                      u235 07D5                        u171 0776                        u180 0796  
                      u260 073B                        u181 0795                        u270 06FE  
                      u271 06FD                        u265 0736                        u195 079B  
                      u287 0720                        fsr0 0004                       STR_1 0009  
                     _CREN 00C4                       _RCIF 0065                       _OERR 00C1  
                     _TXIF 0064                       _main 06FF                       btemp 007E  
                     start 0000           ?_UART_Initialize 0026            __end_of___aldiv 07FC  
                    ?_main 0070                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _TRISB 0086                      _TXREG 0019  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07FC               __end_of_main 072B   __end_of_UART_WriteString 06FF  
                   ??_main 002A                  ??___aldiv 0078    __end_of__initialization 07FC  
           __pcstackCOMMON 0070                 __pmaintext 06FF                 __stringtab 0003  
                  ___aldiv 075F          ?_UART_WriteString 0070                    __ptext1 06E0  
                  __ptext2 06D6                    __ptext3 072B                    __ptext4 075F  
       ??_UART_WriteString 0071           ___aldiv@dividend 0074       end_of_initialization 07FC  
                _RCSTAbits 0018           ___aldiv@quotient 0022                  _TXSTAbits 0098  
      start_initialization 07FC          ??_UART_Initialize 0079                  ___latbits 0002  
            __pcstackBANK0 0020                   ?___aldiv 0070          _UART_TransmitData 06D6  
                __pstrings 0003         ?_UART_TransmitData 0070        ??_UART_TransmitData 0070  
      UART_Initialize@baud 0026            ___aldiv@divisor 0070            ___aldiv@counter 0020  
__end_of_UART_TransmitData 06E0                __stringbase 0008         __end_of__stringtab 0009  
          _UART_Initialize 072B      UART_TransmitData@data 0070        UART_WriteString@ptr 0071  
         _UART_WriteString 06E0                  stringcode 0003    __end_of_UART_Initialize 075F  
                 stringdir 0003                   stringtab 0003               ___aldiv@sign 0021  
