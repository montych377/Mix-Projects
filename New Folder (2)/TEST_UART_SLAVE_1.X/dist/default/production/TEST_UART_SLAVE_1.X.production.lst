

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 17 05:09:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     001A                     _RCREG	set	26
   176     0019                     _TXREG	set	25
   177     0018                     _RCSTAbits	set	24
   178     0006                     _PORTB	set	6
   179     0008                     _PORTD	set	8
   180     0065                     _RCIF	set	101
   181     00C4                     _CREN	set	196
   182     00C1                     _OERR	set	193
   183     0064                     _TXIF	set	100
   184     0098                     _TXSTAbits	set	152
   185     0099                     _SPBRG	set	153
   186     0086                     _TRISB	set	134
   187     0088                     _TRISD	set	136
   188                           
   189                           	psect	cinit
   190     07EB                     start_initialization:	
   191                           ; #config settings
   192                           
   193     07EB                     __initialization:
   194                           
   195                           ; Clear objects allocated to BANK0
   196     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   197     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   198     07ED  01BE               	clrf	__pbssBANK0& (0+127)
   199     07EE  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   200     07EF  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   201     07F0  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   202     07F1  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   203     07F2  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   204     07F3  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   205     07F4  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   206     07F5  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   207     07F6  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   208     07F7  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   209     07F8  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   210     07F9  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   211     07FA  01CB               	clrf	(__pbssBANK0+13)& (0+127)
   212     07FB  01CC               	clrf	(__pbssBANK0+14)& (0+127)
   213     07FC                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216     07FC                     __end_of__initialization:
   217     07FC  0183               	clrf	3
   218     07FD  120A  118A  2EEA   	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	bssBANK0
   221     003E                     __pbssBANK0:
   222     003E                     main@F893:
   223     003E                     	ds	15
   224                           
   225                           	psect	cstackCOMMON
   226     0070                     __pcstackCOMMON:
   227     0070                     ?_LCD_Initialize:
   228     0070                     ?_UART_ReceiveData:	
   229                           ; 1 bytes @ 0x0
   230                           
   231     0070                     ??_UART_ReceiveData:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     ?_UART_WriteString:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0070                     ?_UART_TransmitData:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ??_UART_TransmitData:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_LCD_WriteCommand:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ??_LCD_WriteCommand:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?___aldiv:	
   253                           ; 2 bytes @ 0x0
   254                           
   255     0070                     UART_TransmitData@data:	
   256                           ; 4 bytes @ 0x0
   257                           
   258     0070                     ___aldiv@divisor:	
   259                           ; 1 bytes @ 0x0
   260                           
   261                           
   262                           ; 4 bytes @ 0x0
   263     0070                     	ds	1
   264     0071                     ??_UART_WriteString:
   265     0071                     UART_WriteString@ptr:	
   266                           ; 1 bytes @ 0x1
   267                           
   268                           
   269                           ; 1 bytes @ 0x1
   270     0071                     	ds	1
   271     0072                     LCD_WriteCommand@cmd:
   272                           
   273                           ; 1 bytes @ 0x2
   274     0072                     	ds	1
   275     0073                     ??_LCD_Initialize:
   276                           
   277                           ; 1 bytes @ 0x3
   278     0073                     	ds	1
   279     0074                     ___aldiv@dividend:
   280                           
   281                           ; 4 bytes @ 0x4
   282     0074                     	ds	4
   283     0078                     ??___aldiv:
   284                           
   285                           ; 1 bytes @ 0x8
   286     0078                     	ds	1
   287     0079                     ??_UART_Initialize:
   288                           
   289                           ; 1 bytes @ 0x9
   290     0079                     	ds	4
   291                           
   292                           	psect	cstackBANK0
   293     0020                     __pcstackBANK0:
   294     0020                     ___aldiv@counter:
   295                           
   296                           ; 1 bytes @ 0x0
   297     0020                     	ds	1
   298     0021                     ___aldiv@sign:
   299                           
   300                           ; 1 bytes @ 0x1
   301     0021                     	ds	1
   302     0022                     ___aldiv@quotient:
   303                           
   304                           ; 4 bytes @ 0x2
   305     0022                     	ds	4
   306     0026                     ?_UART_Initialize:
   307     0026                     UART_Initialize@baud:	
   308                           ; 1 bytes @ 0x6
   309                           
   310                           
   311                           ; 4 bytes @ 0x6
   312     0026                     	ds	4
   313     002A                     ??_main:
   314                           
   315                           ; 1 bytes @ 0xA
   316     002A                     	ds	3
   317     002D                     main@arr:
   318                           
   319                           ; 15 bytes @ 0xD
   320     002D                     	ds	15
   321     003C                     main@i:
   322                           
   323                           ; 2 bytes @ 0x1C
   324     003C                     	ds	2
   325                           
   326                           	psect	maintext
   327     06EA                     __pmaintext:	
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 24 in file "newmain.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  i               2   28[BANK0 ] int 
   338 ;;  arr            15   13[BANK0 ] unsigned char [15]
   339 ;; Return value:  Size  Location     Type
   340 ;;                  2   40[None  ] int 
   341 ;; Registers used:
   342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : B00/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         0      17       0       0       0
   350 ;;      Temps:          0       3       0       0       0
   351 ;;      Totals:         0      20       0       0       0
   352 ;;Total ram usage:       20 bytes
   353 ;; Hardware stack levels required when called: 2
   354 ;; This function calls:
   355 ;;		_LCD_Initialize
   356 ;;		_UART_Initialize
   357 ;;		_UART_ReceiveData
   358 ;;		_UART_WriteString
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364     06EA                     _main:	
   365                           ;psect for function _main
   366                           
   367     06EA                     l895:	
   368                           ;incstack = 0
   369                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   370                           
   371                           
   372                           ;newmain.c: 25:     char arr[15] = {0};
   373     06EA  302D               	movlw	main@arr& (0+255)
   374     06EB  0084               	movwf	4
   375     06EC  300F               	movlw	15
   376     06ED  00FF               	movwf	btemp+1
   377     06EE                     u340:
   378     06EE  1383               	bcf	3,7	;select IRP bank0
   379     06EF  0180               	clrf	0
   380     06F0  0A84               	incf	4,f
   381     06F1  0BFF               	decfsz	btemp+1,f
   382     06F2  2EEE               	goto	u340
   383     06F3                     l897:
   384                           
   385                           ;newmain.c: 26:     TRISD = 0x00;
   386     06F3  1683               	bsf	3,5	;RP0=1, select bank1
   387     06F4  1303               	bcf	3,6	;RP1=0, select bank1
   388     06F5  0188               	clrf	8	;volatile
   389     06F6                     l899:
   390                           
   391                           ;newmain.c: 27:     PORTD = 0x00;
   392     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   393     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   394     06F8  0188               	clrf	8	;volatile
   395     06F9                     l901:
   396                           
   397                           ;newmain.c: 28:     TRISB = 0x00;
   398     06F9  1683               	bsf	3,5	;RP0=1, select bank1
   399     06FA  1303               	bcf	3,6	;RP1=0, select bank1
   400     06FB  0186               	clrf	6	;volatile
   401     06FC                     l903:
   402                           
   403                           ;newmain.c: 29:     PORTB = 0x00;
   404     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   405     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   406     06FE  0186               	clrf	6	;volatile
   407     06FF                     l905:
   408                           
   409                           ;newmain.c: 30:     UART_Initialize(9600);
   410     06FF  3000               	movlw	0
   411     0700  00A9               	movwf	UART_Initialize@baud+3
   412     0701  3000               	movlw	0
   413     0702  00A8               	movwf	UART_Initialize@baud+2
   414     0703  3025               	movlw	37
   415     0704  00A7               	movwf	UART_Initialize@baud+1
   416     0705  3080               	movlw	128
   417     0706  00A6               	movwf	UART_Initialize@baud
   418     0707  120A  118A  26B6  120A  118A  	fcall	_UART_Initialize
   419     070C                     l907:
   420                           
   421                           ;newmain.c: 31:     LCD_Initialize();
   422     070C  120A  118A  2670  120A  118A  	fcall	_LCD_Initialize
   423     0711                     l909:
   424                           
   425                           ;newmain.c: 36:         for(int i=0;i<6;i++){
   426     0711  1283               	bcf	3,5	;RP0=0, select bank0
   427     0712  1303               	bcf	3,6	;RP1=0, select bank0
   428     0713  01BC               	clrf	main@i
   429     0714  01BD               	clrf	main@i+1
   430     0715                     l915:
   431                           
   432                           ;newmain.c: 37:             arr[i] = UART_ReceiveData();
   433     0715  1283               	bcf	3,5	;RP0=0, select bank0
   434     0716  1303               	bcf	3,6	;RP1=0, select bank0
   435     0717  083C               	movf	main@i,w
   436     0718  3E2D               	addlw	(low (main@arr| 0))& (0+255)
   437     0719  0084               	movwf	4
   438     071A  120A  118A  264B  120A  118A  	fcall	_UART_ReceiveData
   439     071F  1383               	bcf	3,7	;select IRP bank0
   440     0720  0080               	movwf	0
   441     0721                     l917:
   442                           
   443                           ;newmain.c: 38:         }
   444     0721  3001               	movlw	1
   445     0722  1283               	bcf	3,5	;RP0=0, select bank0
   446     0723  1303               	bcf	3,6	;RP1=0, select bank0
   447     0724  07BC               	addwf	main@i,f
   448     0725  1803               	skipnc
   449     0726  0ABD               	incf	main@i+1,f
   450     0727  3000               	movlw	0
   451     0728  07BD               	addwf	main@i+1,f
   452     0729                     l919:
   453     0729  083D               	movf	main@i+1,w
   454     072A  3A80               	xorlw	128
   455     072B  00FF               	movwf	btemp+1
   456     072C  3080               	movlw	128
   457     072D  027F               	subwf	btemp+1,w
   458     072E  1D03               	skipz
   459     072F  2F32               	goto	u355
   460     0730  3006               	movlw	6
   461     0731  023C               	subwf	main@i,w
   462     0732                     u355:
   463     0732  1C03               	skipc
   464     0733  2F35               	goto	u351
   465     0734  2F36               	goto	u350
   466     0735                     u351:
   467     0735  2F15               	goto	l915
   468     0736                     u350:
   469     0736                     l921:
   470                           
   471                           ;newmain.c: 40:         UART_WriteString(arr);
   472     0736  302D               	movlw	(low (main@arr| 0))& (0+255)
   473     0737  120A  118A  2659  120A  118A  	fcall	_UART_WriteString
   474     073C                     l923:
   475                           
   476                           ;newmain.c: 41:         _delay((unsigned long)((500)*(8000000/4000.0)));
   477     073C  3006               	movlw	6
   478     073D  1283               	bcf	3,5	;RP0=0, select bank0
   479     073E  1303               	bcf	3,6	;RP1=0, select bank0
   480     073F  00AC               	movwf	??_main+2
   481     0740  3013               	movlw	19
   482     0741  00AB               	movwf	??_main+1
   483     0742  30AD               	movlw	173
   484     0743  00AA               	movwf	??_main
   485     0744                     u367:
   486     0744  0BAA               	decfsz	??_main,f
   487     0745  2F44               	goto	u367
   488     0746  0BAB               	decfsz	??_main+1,f
   489     0747  2F44               	goto	u367
   490     0748  0BAC               	decfsz	??_main+2,f
   491     0749  2F44               	goto	u367
   492     074A  2F11               	goto	l909
   493     074B  120A  118A  2800   	ljmp	start
   494     074E                     __end_of_main:
   495                           
   496                           	psect	text1
   497     0659                     __ptext1:	
   498 ;; *************** function _UART_WriteString *****************
   499 ;; Defined at:
   500 ;;		line 70 in file "newmain.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  ptr             1    wreg     PTR const unsigned char 
   503 ;;		 -> main@arr(15), 
   504 ;; Auto vars:     Size  Location     Type
   505 ;;  ptr             1    1[COMMON] PTR const unsigned char 
   506 ;;		 -> main@arr(15), 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         1       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0
   519 ;;      Totals:         1       0       0       0       0
   520 ;;Total ram usage:        1 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 1
   523 ;; This function calls:
   524 ;;		_UART_TransmitData
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530     0659                     _UART_WriteString:	
   531                           ;psect for function _UART_WriteString
   532                           
   533                           
   534                           ;incstack = 0
   535                           ; Regs used in _UART_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   536                           ;UART_WriteString@ptr stored from wreg
   537     0659  00F1               	movwf	UART_WriteString@ptr
   538     065A                     l887:
   539                           
   540                           ;newmain.c: 72:     while(*ptr){
   541     065A  2E67               	goto	l893
   542     065B                     l889:
   543                           
   544                           ;newmain.c: 74:         UART_TransmitData(*ptr++);
   545     065B  0871               	movf	UART_WriteString@ptr,w
   546     065C  0084               	movwf	4
   547     065D  0800               	movf	0,w
   548     065E  120A  118A  2641  120A  118A  	fcall	_UART_TransmitData
   549     0663                     l891:
   550     0663  3001               	movlw	1
   551     0664  00FF               	movwf	btemp+1
   552     0665  087F               	movf	btemp+1,w
   553     0666  07F1               	addwf	UART_WriteString@ptr,f
   554     0667                     l893:
   555                           
   556                           ;newmain.c: 72:     while(*ptr){
   557     0667  0871               	movf	UART_WriteString@ptr,w
   558     0668  0084               	movwf	4
   559     0669  1383               	bcf	3,7	;select IRP bank0
   560     066A  0800               	movf	0,w
   561     066B  1D03               	btfss	3,2
   562     066C  2E6E               	goto	u331
   563     066D  2E6F               	goto	u330
   564     066E                     u331:
   565     066E  2E5B               	goto	l889
   566     066F                     u330:
   567     066F                     l70:
   568     066F  0008               	return
   569     0670                     __end_of_UART_WriteString:
   570                           
   571                           	psect	text2
   572     0641                     __ptext2:	
   573 ;; *************** function _UART_TransmitData *****************
   574 ;; Defined at:
   575 ;;		line 57 in file "newmain.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  data            1    wreg     unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  data            1    0[COMMON] unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         1       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0
   592 ;;      Totals:         1       0       0       0       0
   593 ;;Total ram usage:        1 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_UART_WriteString
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602     0641                     _UART_TransmitData:	
   603                           ;psect for function _UART_TransmitData
   604                           
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _UART_TransmitData: [wreg]
   608                           ;UART_TransmitData@data stored from wreg
   609     0641  00F0               	movwf	UART_TransmitData@data
   610     0642                     l811:
   611                           
   612                           ;newmain.c: 58:     TXREG = data;
   613     0642  0870               	movf	UART_TransmitData@data,w
   614     0643  1283               	bcf	3,5	;RP0=0, select bank0
   615     0644  1303               	bcf	3,6	;RP1=0, select bank0
   616     0645  0099               	movwf	25	;volatile
   617     0646                     l54:	
   618                           ;newmain.c: 59:     while(!TXIF);
   619                           
   620     0646  1E0C               	btfss	12,4	;volatile
   621     0647  2E49               	goto	u191
   622     0648  2E4A               	goto	u190
   623     0649                     u191:
   624     0649  2E46               	goto	l54
   625     064A                     u190:
   626     064A                     l57:
   627     064A  0008               	return
   628     064B                     __end_of_UART_TransmitData:
   629                           
   630                           	psect	text3
   631     064B                     __ptext3:	
   632 ;; *************** function _UART_ReceiveData *****************
   633 ;; Defined at:
   634 ;;		line 61 in file "newmain.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      unsigned char 
   641 ;; Registers used:
   642 ;;		wreg
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661     064B                     _UART_ReceiveData:	
   662                           ;psect for function _UART_ReceiveData
   663                           
   664     064B                     l879:	
   665                           ;incstack = 0
   666                           ; Regs used in _UART_ReceiveData: [wreg]
   667                           
   668                           
   669                           ;newmain.c: 63:     if(OERR){
   670     064B  1283               	bcf	3,5	;RP0=0, select bank0
   671     064C  1303               	bcf	3,6	;RP1=0, select bank0
   672     064D  1C98               	btfss	24,1	;volatile
   673     064E  2E50               	goto	u311
   674     064F  2E51               	goto	u310
   675     0650                     u311:
   676     0650  2E53               	goto	l61
   677     0651                     u310:
   678     0651                     l881:
   679                           
   680                           ;newmain.c: 64:         CREN = 0;
   681     0651  1218               	bcf	24,4	;volatile
   682                           
   683                           ;newmain.c: 65:         CREN = 1;
   684     0652  1618               	bsf	24,4	;volatile
   685     0653                     l61:
   686     0653  1E8C               	btfss	12,5	;volatile
   687     0654  2E56               	goto	u321
   688     0655  2E57               	goto	u320
   689     0656                     u321:
   690     0656  2E53               	goto	l61
   691     0657                     u320:
   692     0657                     l883:
   693                           
   694                           ;newmain.c: 68:     return RCREG;
   695     0657  081A               	movf	26,w	;volatile
   696     0658                     l64:
   697     0658  0008               	return
   698     0659                     __end_of_UART_ReceiveData:
   699                           
   700                           	psect	text4
   701     06B6                     __ptext4:	
   702 ;; *************** function _UART_Initialize *****************
   703 ;; Defined at:
   704 ;;		line 49 in file "newmain.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  baud            4    6[BANK0 ] long 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         0       4       0       0       0
   719 ;;      Locals:         0       0       0       0       0
   720 ;;      Temps:          4       0       0       0       0
   721 ;;      Totals:         4       4       0       0       0
   722 ;;Total ram usage:        8 bytes
   723 ;; Hardware stack levels used: 1
   724 ;; Hardware stack levels required when called: 1
   725 ;; This function calls:
   726 ;;		___aldiv
   727 ;; This function is called by:
   728 ;;		_main
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732     06B6                     _UART_Initialize:	
   733                           ;psect for function _UART_Initialize
   734                           
   735     06B6                     l867:	
   736                           ;incstack = 0
   737                           ; Regs used in _UART_Initialize: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   738                           
   739                           
   740                           ;newmain.c: 51:     SPBRG = (((8000000)/(16*baud))-1);
   741     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   742     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   743     06B8  0826               	movf	UART_Initialize@baud,w
   744     06B9  00F9               	movwf	??_UART_Initialize
   745     06BA  0827               	movf	UART_Initialize@baud+1,w
   746     06BB  00FA               	movwf	??_UART_Initialize+1
   747     06BC  0828               	movf	UART_Initialize@baud+2,w
   748     06BD  00FB               	movwf	??_UART_Initialize+2
   749     06BE  0829               	movf	UART_Initialize@baud+3,w
   750     06BF  00FC               	movwf	??_UART_Initialize+3
   751     06C0  3004               	movlw	4
   752     06C1                     u305:
   753     06C1  1003               	clrc
   754     06C2  0DF9               	rlf	??_UART_Initialize,f
   755     06C3  0DFA               	rlf	??_UART_Initialize+1,f
   756     06C4  0DFB               	rlf	??_UART_Initialize+2,f
   757     06C5  0DFC               	rlf	??_UART_Initialize+3,f
   758     06C6                     u300:
   759     06C6  3EFF               	addlw	-1
   760     06C7  1D03               	skipz
   761     06C8  2EC1               	goto	u305
   762     06C9  087C               	movf	??_UART_Initialize+3,w
   763     06CA  00F3               	movwf	___aldiv@divisor+3
   764     06CB  087B               	movf	??_UART_Initialize+2,w
   765     06CC  00F2               	movwf	___aldiv@divisor+2
   766     06CD  087A               	movf	??_UART_Initialize+1,w
   767     06CE  00F1               	movwf	___aldiv@divisor+1
   768     06CF  0879               	movf	??_UART_Initialize,w
   769     06D0  00F0               	movwf	___aldiv@divisor
   770     06D1  3000               	movlw	0
   771     06D2  00F7               	movwf	___aldiv@dividend+3
   772     06D3  307A               	movlw	122
   773     06D4  00F6               	movwf	___aldiv@dividend+2
   774     06D5  3012               	movlw	18
   775     06D6  00F5               	movwf	___aldiv@dividend+1
   776     06D7  3000               	movlw	0
   777     06D8  00F4               	movwf	___aldiv@dividend
   778     06D9  120A  118A  274E  120A  118A  	fcall	___aldiv
   779     06DE  0870               	movf	?___aldiv,w
   780     06DF  3EFF               	addlw	255
   781     06E0  1683               	bsf	3,5	;RP0=1, select bank1
   782     06E1  1303               	bcf	3,6	;RP1=0, select bank1
   783     06E2  0099               	movwf	25	;volatile
   784     06E3                     l869:
   785                           
   786                           ;newmain.c: 52:     TXSTAbits.BRGH = 1;
   787     06E3  1518               	bsf	24,2	;volatile
   788     06E4                     l871:
   789                           
   790                           ;newmain.c: 53:     TXSTAbits.TXEN = 1;
   791     06E4  1698               	bsf	24,5	;volatile
   792     06E5                     l873:
   793                           
   794                           ;newmain.c: 54:     RCSTAbits.SPEN = 1;
   795     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   796     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   797     06E7  1798               	bsf	24,7	;volatile
   798     06E8                     l875:
   799                           
   800                           ;newmain.c: 55:     RCSTAbits.CREN = 1;
   801     06E8  1618               	bsf	24,4	;volatile
   802     06E9                     l51:
   803     06E9  0008               	return
   804     06EA                     __end_of_UART_Initialize:
   805                           
   806                           	psect	text5
   807     074E                     __ptext5:	
   808 ;; *************** function ___aldiv *****************
   809 ;; Defined at:
   810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;  divisor         4    0[COMMON] long 
   813 ;;  dividend        4    4[COMMON] long 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  quotient        4    2[BANK0 ] long 
   816 ;;  sign            1    1[BANK0 ] unsigned char 
   817 ;;  counter         1    0[BANK0 ] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  4    0[COMMON] long 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, btemp+1
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         8       0       0       0       0
   828 ;;      Locals:         0       6       0       0       0
   829 ;;      Temps:          1       0       0       0       0
   830 ;;      Totals:         9       6       0       0       0
   831 ;;Total ram usage:       15 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_UART_Initialize
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840     074E                     ___aldiv:	
   841                           ;psect for function ___aldiv
   842                           
   843     074E                     l825:	
   844                           ;incstack = 0
   845                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   846                           
   847     074E  1283               	bcf	3,5	;RP0=0, select bank0
   848     074F  1303               	bcf	3,6	;RP1=0, select bank0
   849     0750  01A1               	clrf	___aldiv@sign
   850     0751                     l827:
   851     0751  1FF3               	btfss	___aldiv@divisor+3,7
   852     0752  2F54               	goto	u201
   853     0753  2F55               	goto	u200
   854     0754                     u201:
   855     0754  2F62               	goto	l236
   856     0755                     u200:
   857     0755                     l829:
   858     0755  09F0               	comf	___aldiv@divisor,f
   859     0756  09F1               	comf	___aldiv@divisor+1,f
   860     0757  09F2               	comf	___aldiv@divisor+2,f
   861     0758  09F3               	comf	___aldiv@divisor+3,f
   862     0759  0AF0               	incf	___aldiv@divisor,f
   863     075A  1903               	skipnz
   864     075B  0AF1               	incf	___aldiv@divisor+1,f
   865     075C  1903               	skipnz
   866     075D  0AF2               	incf	___aldiv@divisor+2,f
   867     075E  1903               	skipnz
   868     075F  0AF3               	incf	___aldiv@divisor+3,f
   869     0760  01A1               	clrf	___aldiv@sign
   870     0761  0AA1               	incf	___aldiv@sign,f
   871     0762                     l236:
   872     0762  1FF7               	btfss	___aldiv@dividend+3,7
   873     0763  2F65               	goto	u211
   874     0764  2F66               	goto	u210
   875     0765                     u211:
   876     0765  2F75               	goto	l835
   877     0766                     u210:
   878     0766                     l831:
   879     0766  09F4               	comf	___aldiv@dividend,f
   880     0767  09F5               	comf	___aldiv@dividend+1,f
   881     0768  09F6               	comf	___aldiv@dividend+2,f
   882     0769  09F7               	comf	___aldiv@dividend+3,f
   883     076A  0AF4               	incf	___aldiv@dividend,f
   884     076B  1903               	skipnz
   885     076C  0AF5               	incf	___aldiv@dividend+1,f
   886     076D  1903               	skipnz
   887     076E  0AF6               	incf	___aldiv@dividend+2,f
   888     076F  1903               	skipnz
   889     0770  0AF7               	incf	___aldiv@dividend+3,f
   890     0771                     l833:
   891     0771  3001               	movlw	1
   892     0772  00FF               	movwf	btemp+1
   893     0773  087F               	movf	btemp+1,w
   894     0774  06A1               	xorwf	___aldiv@sign,f
   895     0775                     l835:
   896     0775  3000               	movlw	0
   897     0776  00A5               	movwf	___aldiv@quotient+3
   898     0777  3000               	movlw	0
   899     0778  00A4               	movwf	___aldiv@quotient+2
   900     0779  3000               	movlw	0
   901     077A  00A3               	movwf	___aldiv@quotient+1
   902     077B  3000               	movlw	0
   903     077C  00A2               	movwf	___aldiv@quotient
   904     077D                     l837:
   905     077D  0873               	movf	___aldiv@divisor+3,w
   906     077E  0472               	iorwf	___aldiv@divisor+2,w
   907     077F  0471               	iorwf	___aldiv@divisor+1,w
   908     0780  0470               	iorwf	___aldiv@divisor,w
   909     0781  1903               	skipnz
   910     0782  2F84               	goto	u221
   911     0783  2F85               	goto	u220
   912     0784                     u221:
   913     0784  2FD2               	goto	l859
   914     0785                     u220:
   915     0785                     l839:
   916     0785  01A0               	clrf	___aldiv@counter
   917     0786  0AA0               	incf	___aldiv@counter,f
   918     0787  2F95               	goto	l845
   919     0788                     l841:
   920     0788  3001               	movlw	1
   921     0789  00F8               	movwf	??___aldiv
   922     078A                     u235:
   923     078A  1003               	clrc
   924     078B  0DF0               	rlf	___aldiv@divisor,f
   925     078C  0DF1               	rlf	___aldiv@divisor+1,f
   926     078D  0DF2               	rlf	___aldiv@divisor+2,f
   927     078E  0DF3               	rlf	___aldiv@divisor+3,f
   928     078F  0BF8               	decfsz	??___aldiv,f
   929     0790  2F8A               	goto	u235
   930     0791                     l843:
   931     0791  3001               	movlw	1
   932     0792  00FF               	movwf	btemp+1
   933     0793  087F               	movf	btemp+1,w
   934     0794  07A0               	addwf	___aldiv@counter,f
   935     0795                     l845:
   936     0795  1FF3               	btfss	___aldiv@divisor+3,7
   937     0796  2F98               	goto	u241
   938     0797  2F99               	goto	u240
   939     0798                     u241:
   940     0798  2F88               	goto	l841
   941     0799                     u240:
   942     0799                     l847:
   943     0799  3001               	movlw	1
   944     079A  00F8               	movwf	??___aldiv
   945     079B                     u255:
   946     079B  1003               	clrc
   947     079C  0DA2               	rlf	___aldiv@quotient,f
   948     079D  0DA3               	rlf	___aldiv@quotient+1,f
   949     079E  0DA4               	rlf	___aldiv@quotient+2,f
   950     079F  0DA5               	rlf	___aldiv@quotient+3,f
   951     07A0  0BF8               	decfsz	??___aldiv,f
   952     07A1  2F9B               	goto	u255
   953     07A2                     l849:
   954     07A2  0873               	movf	___aldiv@divisor+3,w
   955     07A3  0277               	subwf	___aldiv@dividend+3,w
   956     07A4  1D03               	skipz
   957     07A5  2FB0               	goto	u265
   958     07A6  0872               	movf	___aldiv@divisor+2,w
   959     07A7  0276               	subwf	___aldiv@dividend+2,w
   960     07A8  1D03               	skipz
   961     07A9  2FB0               	goto	u265
   962     07AA  0871               	movf	___aldiv@divisor+1,w
   963     07AB  0275               	subwf	___aldiv@dividend+1,w
   964     07AC  1D03               	skipz
   965     07AD  2FB0               	goto	u265
   966     07AE  0870               	movf	___aldiv@divisor,w
   967     07AF  0274               	subwf	___aldiv@dividend,w
   968     07B0                     u265:
   969     07B0  1C03               	skipc
   970     07B1  2FB3               	goto	u261
   971     07B2  2FB4               	goto	u260
   972     07B3                     u261:
   973     07B3  2FC3               	goto	l855
   974     07B4                     u260:
   975     07B4                     l851:
   976     07B4  0870               	movf	___aldiv@divisor,w
   977     07B5  02F4               	subwf	___aldiv@dividend,f
   978     07B6  0871               	movf	___aldiv@divisor+1,w
   979     07B7  1C03               	skipc
   980     07B8  0F71               	incfsz	___aldiv@divisor+1,w
   981     07B9  02F5               	subwf	___aldiv@dividend+1,f
   982     07BA  0872               	movf	___aldiv@divisor+2,w
   983     07BB  1C03               	skipc
   984     07BC  0F72               	incfsz	___aldiv@divisor+2,w
   985     07BD  02F6               	subwf	___aldiv@dividend+2,f
   986     07BE  0873               	movf	___aldiv@divisor+3,w
   987     07BF  1C03               	skipc
   988     07C0  0F73               	incfsz	___aldiv@divisor+3,w
   989     07C1  02F7               	subwf	___aldiv@dividend+3,f
   990     07C2                     l853:
   991     07C2  1422               	bsf	___aldiv@quotient,0
   992     07C3                     l855:
   993     07C3  3001               	movlw	1
   994     07C4                     u275:
   995     07C4  1003               	clrc
   996     07C5  0CF3               	rrf	___aldiv@divisor+3,f
   997     07C6  0CF2               	rrf	___aldiv@divisor+2,f
   998     07C7  0CF1               	rrf	___aldiv@divisor+1,f
   999     07C8  0CF0               	rrf	___aldiv@divisor,f
  1000     07C9  3EFF               	addlw	-1
  1001     07CA  1D03               	skipz
  1002     07CB  2FC4               	goto	u275
  1003     07CC                     l857:
  1004     07CC  3001               	movlw	1
  1005     07CD  02A0               	subwf	___aldiv@counter,f
  1006     07CE  1D03               	btfss	3,2
  1007     07CF  2FD1               	goto	u281
  1008     07D0  2FD2               	goto	u280
  1009     07D1                     u281:
  1010     07D1  2F99               	goto	l847
  1011     07D2                     u280:
  1012     07D2                     l859:
  1013     07D2  0821               	movf	___aldiv@sign,w
  1014     07D3  1903               	btfsc	3,2
  1015     07D4  2FD6               	goto	u291
  1016     07D5  2FD7               	goto	u290
  1017     07D6                     u291:
  1018     07D6  2FE2               	goto	l863
  1019     07D7                     u290:
  1020     07D7                     l861:
  1021     07D7  09A2               	comf	___aldiv@quotient,f
  1022     07D8  09A3               	comf	___aldiv@quotient+1,f
  1023     07D9  09A4               	comf	___aldiv@quotient+2,f
  1024     07DA  09A5               	comf	___aldiv@quotient+3,f
  1025     07DB  0AA2               	incf	___aldiv@quotient,f
  1026     07DC  1903               	skipnz
  1027     07DD  0AA3               	incf	___aldiv@quotient+1,f
  1028     07DE  1903               	skipnz
  1029     07DF  0AA4               	incf	___aldiv@quotient+2,f
  1030     07E0  1903               	skipnz
  1031     07E1  0AA5               	incf	___aldiv@quotient+3,f
  1032     07E2                     l863:
  1033     07E2  0825               	movf	___aldiv@quotient+3,w
  1034     07E3  00F3               	movwf	?___aldiv+3
  1035     07E4  0824               	movf	___aldiv@quotient+2,w
  1036     07E5  00F2               	movwf	?___aldiv+2
  1037     07E6  0823               	movf	___aldiv@quotient+1,w
  1038     07E7  00F1               	movwf	?___aldiv+1
  1039     07E8  0822               	movf	___aldiv@quotient,w
  1040     07E9  00F0               	movwf	?___aldiv
  1041     07EA                     l246:
  1042     07EA  0008               	return
  1043     07EB                     __end_of___aldiv:
  1044                           
  1045                           	psect	text6
  1046     0670                     __ptext6:	
  1047 ;; *************** function _LCD_Initialize *****************
  1048 ;; Defined at:
  1049 ;;		line 99 in file "newmain.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 1
  1070 ;; This function calls:
  1071 ;;		_LCD_WriteCommand
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077     0670                     _LCD_Initialize:	
  1078                           ;psect for function _LCD_Initialize
  1079                           
  1080     0670                     l877:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1083                           
  1084                           
  1085                           ;newmain.c: 100:     LCD_WriteCommand(0x01);
  1086     0670  3001               	movlw	1
  1087     0671  120A  118A  268F  120A  118A  	fcall	_LCD_WriteCommand
  1088                           
  1089                           ;newmain.c: 101:     LCD_WriteCommand(0x02);
  1090     0676  3002               	movlw	2
  1091     0677  120A  118A  268F  120A  118A  	fcall	_LCD_WriteCommand
  1092                           
  1093                           ;newmain.c: 102:     LCD_WriteCommand(0x06);
  1094     067C  3006               	movlw	6
  1095     067D  120A  118A  268F  120A  118A  	fcall	_LCD_WriteCommand
  1096                           
  1097                           ;newmain.c: 103:     LCD_WriteCommand(0x38);
  1098     0682  3038               	movlw	56
  1099     0683  120A  118A  268F  120A  118A  	fcall	_LCD_WriteCommand
  1100                           
  1101                           ;newmain.c: 104:     LCD_WriteCommand(0x0C);
  1102     0688  300C               	movlw	12
  1103     0689  120A  118A  268F  120A  118A  	fcall	_LCD_WriteCommand
  1104     068E                     l79:
  1105     068E  0008               	return
  1106     068F                     __end_of_LCD_Initialize:
  1107                           
  1108                           	psect	text7
  1109     068F                     __ptext7:	
  1110 ;; *************** function _LCD_WriteCommand *****************
  1111 ;; Defined at:
  1112 ;;		line 78 in file "newmain.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  cmd             1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  cmd             1    2[COMMON] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, btemp+1
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         1       0       0       0       0
  1128 ;;      Temps:          2       0       0       0       0
  1129 ;;      Totals:         3       0       0       0       0
  1130 ;;Total ram usage:        3 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_LCD_Initialize
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139     068F                     _LCD_WriteCommand:	
  1140                           ;psect for function _LCD_WriteCommand
  1141                           
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _LCD_WriteCommand: [wreg+status,2+status,0+btemp+1]
  1145                           ;LCD_WriteCommand@cmd stored from wreg
  1146     068F  00F2               	movwf	LCD_WriteCommand@cmd
  1147     0690                     l813:
  1148                           
  1149                           ;newmain.c: 80:     PORTD = cmd;
  1150     0690  0872               	movf	LCD_WriteCommand@cmd,w
  1151     0691  1283               	bcf	3,5	;RP0=0, select bank0
  1152     0692  1303               	bcf	3,6	;RP1=0, select bank0
  1153     0693  0088               	movwf	8	;volatile
  1154     0694                     l815:
  1155                           
  1156                           ;newmain.c: 81:     PORTB &= ~0x01;
  1157     0694  30FE               	movlw	254
  1158     0695  00FF               	movwf	btemp+1
  1159     0696  087F               	movf	btemp+1,w
  1160     0697  0586               	andwf	6,f	;volatile
  1161     0698                     l817:
  1162                           
  1163                           ;newmain.c: 82:     PORTB &= ~0x02;
  1164     0698  30FD               	movlw	253
  1165     0699  00FF               	movwf	btemp+1
  1166     069A  087F               	movf	btemp+1,w
  1167     069B  0586               	andwf	6,f	;volatile
  1168     069C                     l819:
  1169                           
  1170                           ;newmain.c: 83:     PORTB |= 0x04;
  1171     069C  1506               	bsf	6,2	;volatile
  1172                           
  1173                           ;newmain.c: 84:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1174     069D  3006               	movlw	6
  1175     069E  00F1               	movwf	??_LCD_WriteCommand+1
  1176     069F  3030               	movlw	48
  1177     06A0  00F0               	movwf	??_LCD_WriteCommand
  1178     06A1                     u377:
  1179     06A1  0BF0               	decfsz	??_LCD_WriteCommand,f
  1180     06A2  2EA1               	goto	u377
  1181     06A3  0BF1               	decfsz	??_LCD_WriteCommand+1,f
  1182     06A4  2EA1               	goto	u377
  1183     06A5  0000               	nop
  1184     06A6                     l821:
  1185                           
  1186                           ;newmain.c: 85:     PORTB &= ~0x04;
  1187     06A6  30FB               	movlw	251
  1188     06A7  00FF               	movwf	btemp+1
  1189     06A8  087F               	movf	btemp+1,w
  1190     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1191     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1192     06AB  0586               	andwf	6,f	;volatile
  1193     06AC                     l823:
  1194                           
  1195                           ;newmain.c: 86:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1196     06AC  3006               	movlw	6
  1197     06AD  00F1               	movwf	??_LCD_WriteCommand+1
  1198     06AE  3030               	movlw	48
  1199     06AF  00F0               	movwf	??_LCD_WriteCommand
  1200     06B0                     u387:
  1201     06B0  0BF0               	decfsz	??_LCD_WriteCommand,f
  1202     06B1  2EB0               	goto	u387
  1203     06B2  0BF1               	decfsz	??_LCD_WriteCommand+1,f
  1204     06B3  2EB0               	goto	u387
  1205     06B4  0000               	nop
  1206     06B5                     l73:
  1207     06B5  0008               	return
  1208     06B6                     __end_of_LCD_WriteCommand:
  1209     007E                     btemp	set	126	;btemp
  1210     007E                     wtemp0	set	126
  1211                           
  1212                           	psect	idloc
  1213                           
  1214                           ;Config register IDLOC0 @ 0x2000
  1215                           ;	unspecified, using default values
  1216     2000                     	org	8192
  1217     2000  3FFF               	dw	16383
  1218                           
  1219                           ;Config register IDLOC1 @ 0x2001
  1220                           ;	unspecified, using default values
  1221     2001                     	org	8193
  1222     2001  3FFF               	dw	16383
  1223                           
  1224                           ;Config register IDLOC2 @ 0x2002
  1225                           ;	unspecified, using default values
  1226     2002                     	org	8194
  1227     2002  3FFF               	dw	16383
  1228                           
  1229                           ;Config register IDLOC3 @ 0x2003
  1230                           ;	unspecified, using default values
  1231     2003                     	org	8195
  1232     2003  3FFF               	dw	16383
  1233                           
  1234                           	psect	config
  1235                           
  1236                           ;Config register CONFIG @ 0x2007
  1237                           ;	Oscillator Selection bits
  1238                           ;	FOSC = HS, HS oscillator
  1239                           ;	Watchdog Timer Enable bit
  1240                           ;	WDTE = OFF, WDT disabled
  1241                           ;	Power-up Timer Enable bit
  1242                           ;	PWRTE = OFF, PWRT disabled
  1243                           ;	Brown-out Reset Enable bit
  1244                           ;	BOREN = OFF, BOR disabled
  1245                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1246                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1247                           ;	Data EEPROM Memory Code Protection bit
  1248                           ;	CPD = OFF, Data EEPROM code protection off
  1249                           ;	Flash Program Memory Write Enable bits
  1250                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1251                           ;	In-Circuit Debugger Mode bit
  1252                           ;	DEBUG = 0x1, unprogrammed default
  1253                           ;	Flash Program Memory Code Protection bit
  1254                           ;	CP = OFF, Code protection off
  1255     2007                     	org	8199
  1256     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     30      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_WriteString@ptr	PTR const unsigned char  size(1) Largest target is 15
		 -> main@arr(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_UART_Initialize
    _UART_WriteString->_UART_TransmitData
    _UART_Initialize->___aldiv
    _LCD_Initialize->_LCD_WriteCommand

Critical Paths under _main in BANK0

    _main->_UART_Initialize
    _UART_Initialize->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     789
                                             10 BANK0     20    20      0
                     _LCD_Initialize
                    _UART_Initialize
                   _UART_ReceiveData
                   _UART_WriteString
 ---------------------------------------------------------------------------------
 (1) _UART_WriteString                                     1     1      0     100
                                              1 COMMON     1     1      0
                  _UART_TransmitData
 ---------------------------------------------------------------------------------
 (2) _UART_TransmitData                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_ReceiveData                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      8     4      4     550
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       0     0      0      22
                   _LCD_WriteCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCommand                                     3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Initialize
     _LCD_WriteCommand
   _UART_Initialize
     ___aldiv
   _UART_ReceiveData
   _UART_WriteString
     _UART_TransmitData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 17 05:09:45 2023

           _LCD_Initialize 0670                         l51 06E9                         l61 0653  
                       l54 0646                         l70 066F                         l64 0658  
                       l73 06B5                         l57 064A                         l79 068E  
                      l236 0762                        l246 07EA                        l811 0642  
                      l821 06A6                        l813 0690                        l901 06F9  
                      l823 06AC                        l815 0694                        l831 0766  
                      l903 06FC                        l817 0698                        l841 0788  
                      l833 0771                        l825 074E                        l921 0736  
                      l905 06FF                        l819 069C                        l851 07B4  
                      l843 0791                        l835 0775                        l827 0751  
                      l923 073C                        l915 0715                        l907 070C  
                      l861 07D7                        l853 07C2                        l845 0795  
                      l837 077D                        l829 0755                        l917 0721  
                      l909 0711                        l863 07E2                        l855 07C3  
                      l847 0799                        l839 0785                        l871 06E4  
                      l919 0729                        l857 07CC                        l849 07A2  
                      l873 06E5                        l881 0651                        l859 07D2  
                      l875 06E8                        l867 06B6                        l883 0657  
                      l891 0663                        l877 0670                        l869 06E3  
                      l893 0667                        l879 064B                        l887 065A  
                      l895 06EA                        l889 065B                        l897 06F3  
                      l899 06F6                        u200 0755                        u201 0754  
                      u210 0766                        u211 0765                        u220 0785  
                      u300 06C6                        u221 0784                        u310 0651  
                      u311 0650                        u240 0799                        u320 0657  
                      u241 0798                        u305 06C1                        u321 0656  
                      u330 066F                        u235 078A                        u331 066E  
                      u260 07B4                        u340 06EE                        u261 07B3  
                      u190 064A                        u350 0736                        u255 079B  
                      u191 0649                        u351 0735                        u280 07D2  
                      u281 07D1                        u265 07B0                        u290 07D7  
                      u291 07D6                        u275 07C4                        u355 0732  
                      u367 0744                        u377 06A1                        u387 06B0  
                      fsr0 0004                        indf 0000          ?_LCD_WriteCommand 0070  
       ??_LCD_WriteCommand 0070                       _CREN 00C4                       _RCIF 0065  
                     _OERR 00C1                       _TXIF 0064                       _main 06EA  
                     btemp 007E                       start 0000     __end_of_LCD_Initialize 068F  
         ?_UART_Initialize 0026            __end_of___aldiv 07EB                      ?_main 0070  
                    _RCREG 001A                      _SPBRG 0099                      _PORTB 0006  
                    _PORTD 0008                      _TRISB 0086                      _TRISD 0088  
                    _TXREG 0019                      main@i 003C                      status 0003  
                    wtemp0 007E            ?_LCD_Initialize 0070            __initialization 07EB  
             __end_of_main 074E   __end_of_UART_WriteString 0670                     ??_main 002A  
        ?_UART_ReceiveData 0070         ??_UART_ReceiveData 0070                  ??___aldiv 0078  
  __end_of__initialization 07FC             __pcstackCOMMON 0070                 __pbssBANK0 003E  
               __pmaintext 06EA           ??_LCD_Initialize 0073                    ___aldiv 074E  
        ?_UART_WriteString 0070                    __ptext1 0659                    __ptext2 0641  
                  __ptext3 064B                    __ptext4 06B6                    __ptext5 074E  
                  __ptext6 0670                    __ptext7 068F         ??_UART_WriteString 0071  
         ___aldiv@dividend 0074                    main@arr 002D       end_of_initialization 07FC  
                _RCSTAbits 0018           ___aldiv@quotient 0022                  _TXSTAbits 0098  
         _LCD_WriteCommand 068F        start_initialization 07EB          ??_UART_Initialize 0079  
                ___latbits 0002              __pcstackBANK0 0020                   ?___aldiv 0070  
         _UART_ReceiveData 064B          _UART_TransmitData 0641         ?_UART_TransmitData 0070  
      ??_UART_TransmitData 0070        UART_Initialize@baud 0026            ___aldiv@divisor 0070  
          ___aldiv@counter 0020  __end_of_UART_TransmitData 064B        LCD_WriteCommand@cmd 0072  
 __end_of_LCD_WriteCommand 06B6            _UART_Initialize 06B6      UART_TransmitData@data 0070  
                 main@F893 003E        UART_WriteString@ptr 0071   __end_of_UART_ReceiveData 0659  
         _UART_WriteString 0659    __end_of_UART_Initialize 06EA               ___aldiv@sign 0021  
