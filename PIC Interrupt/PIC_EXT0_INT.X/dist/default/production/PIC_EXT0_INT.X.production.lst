

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Mar 03 21:03:12 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0008                     _PORTD	set	8
   171     000B                     _INTCONbits	set	11
   172     0059                     _INTF	set	89
   173     0088                     _TRISD	set	136
   174     0081                     _OPTION_REGbits	set	129
   175                           
   176                           	psect	cinit
   177     0011                     start_initialization:	
   178                           ; #config settings
   179                           
   180     0011                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   184     0012                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     0012                     __end_of__initialization:
   188     0012  0183               	clrf	3
   189     0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192     0076                     __pbssCOMMON:
   193     0076                     _counter:
   194     0076                     	ds	1
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_EXT_INT_Initialize:
   199     0070                     ?_isr:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ??_isr:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ?_main:	
   206                           ; 1 bytes @ 0x0
   207                           
   208                           
   209                           ; 2 bytes @ 0x0
   210     0070                     	ds	3
   211     0073                     ??_EXT_INT_Initialize:
   212     0073                     ??_main:	
   213                           ; 1 bytes @ 0x3
   214                           
   215                           
   216                           ; 1 bytes @ 0x3
   217     0073                     	ds	3
   218                           
   219                           	psect	maintext
   220     0016                     __pmaintext:	
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 27 in file "newmain.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  2   26[None  ] int 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   240 ;;      Params:         0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0
   242 ;;      Temps:          3       0       0       0       0
   243 ;;      Totals:         3       0       0       0       0
   244 ;;Total ram usage:        3 bytes
   245 ;; Hardware stack levels required when called: 2
   246 ;; This function calls:
   247 ;;		_EXT_INT_Initialize
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     0016                     _main:	
   254                           ;psect for function _main
   255                           
   256     0016                     l633:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   259                           
   260                           
   261                           ;newmain.c: 29:     TRISD = 0x00;
   262     0016  1683               	bsf	3,5	;RP0=1, select bank1
   263     0017  1303               	bcf	3,6	;RP1=0, select bank1
   264     0018  0188               	clrf	8	;volatile
   265                           
   266                           ;newmain.c: 30:     PORTD = 0x00;
   267     0019  1283               	bcf	3,5	;RP0=0, select bank0
   268     001A  1303               	bcf	3,6	;RP1=0, select bank0
   269     001B  0188               	clrf	8	;volatile
   270     001C                     l635:
   271                           
   272                           ;newmain.c: 31:     EXT_INT_Initialize();
   273     001C  120A  118A  2093  120A  118A  	fcall	_EXT_INT_Initialize
   274     0021                     l637:
   275                           
   276                           ;newmain.c: 33:         if(counter == 1) {
   277     0021  0376               	decf	_counter,w	;volatile
   278     0022  1D03               	btfss	3,2
   279     0023  2825               	goto	u11
   280     0024  2826               	goto	u10
   281     0025                     u11:
   282     0025  2835               	goto	l643
   283     0026                     u10:
   284     0026                     l639:
   285                           
   286                           ;newmain.c: 35:             PORTD ^= 0x01;
   287     0026  3001               	movlw	1
   288     0027  00FF               	movwf	btemp+1
   289     0028  087F               	movf	btemp+1,w
   290     0029  1283               	bcf	3,5	;RP0=0, select bank0
   291     002A  1303               	bcf	3,6	;RP1=0, select bank0
   292     002B  0688               	xorwf	8,f	;volatile
   293     002C                     l641:
   294                           
   295                           ;newmain.c: 36:             _delay((unsigned long)((50)*(1000000/4000.0)));
   296     002C  3011               	movlw	17
   297     002D  00F4               	movwf	??_main+1
   298     002E  303A               	movlw	58
   299     002F  00F3               	movwf	??_main
   300     0030                     u67:
   301     0030  0BF3               	decfsz	??_main,f
   302     0031  2830               	goto	u67
   303     0032  0BF4               	decfsz	??_main+1,f
   304     0033  2830               	goto	u67
   305     0034  0000               	nop
   306     0035                     l643:
   307                           
   308                           ;newmain.c: 38:         if (counter == 2) {
   309     0035  3002               	movlw	2
   310     0036  0676               	xorwf	_counter,w	;volatile
   311     0037  1D03               	btfss	3,2
   312     0038  283A               	goto	u21
   313     0039  283B               	goto	u20
   314     003A                     u21:
   315     003A  284A               	goto	l649
   316     003B                     u20:
   317     003B                     l645:
   318                           
   319                           ;newmain.c: 40:             PORTD ^= 0x01;
   320     003B  3001               	movlw	1
   321     003C  00FF               	movwf	btemp+1
   322     003D  087F               	movf	btemp+1,w
   323     003E  1283               	bcf	3,5	;RP0=0, select bank0
   324     003F  1303               	bcf	3,6	;RP1=0, select bank0
   325     0040  0688               	xorwf	8,f	;volatile
   326     0041                     l647:
   327                           
   328                           ;newmain.c: 41:             _delay((unsigned long)((100)*(1000000/4000.0)));
   329     0041  3021               	movlw	33
   330     0042  00F4               	movwf	??_main+1
   331     0043  3076               	movlw	118
   332     0044  00F3               	movwf	??_main
   333     0045                     u77:
   334     0045  0BF3               	decfsz	??_main,f
   335     0046  2845               	goto	u77
   336     0047  0BF4               	decfsz	??_main+1,f
   337     0048  2845               	goto	u77
   338     0049  0000               	nop
   339     004A                     l649:
   340                           
   341                           ;newmain.c: 43:         if (counter == 3) {
   342     004A  3003               	movlw	3
   343     004B  0676               	xorwf	_counter,w	;volatile
   344     004C  1D03               	btfss	3,2
   345     004D  284F               	goto	u31
   346     004E  2850               	goto	u30
   347     004F                     u31:
   348     004F  285E               	goto	l655
   349     0050                     u30:
   350     0050                     l651:
   351                           
   352                           ;newmain.c: 45:             PORTD ^= 0x01;
   353     0050  3001               	movlw	1
   354     0051  00FF               	movwf	btemp+1
   355     0052  087F               	movf	btemp+1,w
   356     0053  1283               	bcf	3,5	;RP0=0, select bank0
   357     0054  1303               	bcf	3,6	;RP1=0, select bank0
   358     0055  0688               	xorwf	8,f	;volatile
   359     0056                     l653:
   360                           
   361                           ;newmain.c: 46:             _delay((unsigned long)((500)*(1000000/4000.0)));
   362     0056  30A3               	movlw	163
   363     0057  00F4               	movwf	??_main+1
   364     0058  3055               	movlw	85
   365     0059  00F3               	movwf	??_main
   366     005A                     u87:
   367     005A  0BF3               	decfsz	??_main,f
   368     005B  285A               	goto	u87
   369     005C  0BF4               	decfsz	??_main+1,f
   370     005D  285A               	goto	u87
   371     005E                     l655:
   372                           
   373                           ;newmain.c: 48:         if (counter == 4) {
   374     005E  3004               	movlw	4
   375     005F  0676               	xorwf	_counter,w	;volatile
   376     0060  1D03               	btfss	3,2
   377     0061  2863               	goto	u41
   378     0062  2864               	goto	u40
   379     0063                     u41:
   380     0063  2877               	goto	l661
   381     0064                     u40:
   382     0064                     l657:
   383                           
   384                           ;newmain.c: 50:             PORTD ^= 0x01;
   385     0064  3001               	movlw	1
   386     0065  00FF               	movwf	btemp+1
   387     0066  087F               	movf	btemp+1,w
   388     0067  1283               	bcf	3,5	;RP0=0, select bank0
   389     0068  1303               	bcf	3,6	;RP1=0, select bank0
   390     0069  0688               	xorwf	8,f	;volatile
   391     006A                     l659:
   392                           
   393                           ;newmain.c: 51:             _delay((unsigned long)((1000)*(1000000/4000.0)));
   394     006A  3002               	movlw	2
   395     006B  00F5               	movwf	??_main+2
   396     006C  3045               	movlw	69
   397     006D  00F4               	movwf	??_main+1
   398     006E  30A9               	movlw	169
   399     006F  00F3               	movwf	??_main
   400     0070                     u97:
   401     0070  0BF3               	decfsz	??_main,f
   402     0071  2870               	goto	u97
   403     0072  0BF4               	decfsz	??_main+1,f
   404     0073  2870               	goto	u97
   405     0074  0BF5               	decfsz	??_main+2,f
   406     0075  2870               	goto	u97
   407     0076  2877               	nop2
   408     0077                     l661:
   409                           
   410                           ;newmain.c: 54:         if(counter > 4) {
   411     0077  3005               	movlw	5
   412     0078  0276               	subwf	_counter,w	;volatile
   413     0079  1C03               	skipc
   414     007A  287C               	goto	u51
   415     007B  287D               	goto	u50
   416     007C                     u51:
   417     007C  2821               	goto	l637
   418     007D                     u50:
   419     007D                     l663:
   420                           
   421                           ;newmain.c: 56:             counter = 0;
   422     007D  01F6               	clrf	_counter	;volatile
   423                           
   424                           ;newmain.c: 57:             PORTD = 0x00;
   425     007E  1283               	bcf	3,5	;RP0=0, select bank0
   426     007F  1303               	bcf	3,6	;RP1=0, select bank0
   427     0080  0188               	clrf	8	;volatile
   428     0081  2821               	goto	l637
   429     0082  120A  118A  280E   	ljmp	start
   430     0085                     __end_of_main:
   431                           
   432                           	psect	text1
   433     0093                     __ptext1:	
   434 ;; *************** function _EXT_INT_Initialize *****************
   435 ;; Defined at:
   436 ;;		line 15 in file "newmain.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		None
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 1
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464     0093                     _EXT_INT_Initialize:	
   465                           ;psect for function _EXT_INT_Initialize
   466                           
   467     0093                     l627:	
   468                           ;incstack = 0
   469                           ; Regs used in _EXT_INT_Initialize: []
   470                           
   471                           
   472                           ;newmain.c: 17:     OPTION_REGbits.INTEDG = 0;
   473     0093  1683               	bsf	3,5	;RP0=1, select bank1
   474     0094  1303               	bcf	3,6	;RP1=0, select bank1
   475     0095  1301               	bcf	1,6	;volatile
   476                           
   477                           ;newmain.c: 18:     INTCONbits.INTE = 1;
   478     0096  160B               	bsf	11,4	;volatile
   479                           
   480                           ;newmain.c: 19:     INTCONbits.GIE = 1;
   481     0097  178B               	bsf	11,7	;volatile
   482                           
   483                           ;newmain.c: 20:     INTCONbits.PEIE = 1;
   484     0098  170B               	bsf	11,6	;volatile
   485     0099                     l17:
   486     0099  0008               	return
   487     009A                     __end_of_EXT_INT_Initialize:
   488                           
   489                           	psect	text2
   490     0085                     __ptext2:	
   491 ;; *************** function _isr *****************
   492 ;; Defined at:
   493 ;;		line 22 in file "newmain.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, btemp+1
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0
   509 ;;      Temps:          3       0       0       0       0
   510 ;;      Totals:         3       0       0       0       0
   511 ;;Total ram usage:        3 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		Interrupt level 1
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520     0085                     _isr:	
   521                           ;psect for function _isr
   522                           
   523     0085                     i1l629:
   524                           
   525                           ;newmain.c: 24:     counter++;
   526     0085  3001               	movlw	1
   527     0086  00FF               	movwf	btemp+1
   528     0087  087F               	movf	btemp+1,w
   529     0088  07F6               	addwf	_counter,f	;volatile
   530     0089                     i1l631:
   531                           
   532                           ;newmain.c: 25:     INTF = 0;
   533     0089  108B               	bcf	11,1	;volatile
   534     008A                     i1l22:
   535     008A  0872               	movf	??_isr+2,w
   536     008B  00FF               	movwf	btemp+1
   537     008C  0871               	movf	??_isr+1,w
   538     008D  008A               	movwf	10
   539     008E  0E70               	swapf	??_isr,w
   540     008F  0083               	movwf	3
   541     0090  0EFE               	swapf	btemp,f
   542     0091  0E7E               	swapf	btemp,w
   543     0092  0009               	retfie
   544     0093                     __end_of_isr:
   545     007E                     btemp	set	126	;btemp
   546     007E                     wtemp0	set	126
   547                           
   548                           	psect	intentry
   549     0004                     __pintentry:	
   550                           ;incstack = 0
   551                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
   552                           
   553     0004                     interrupt_function:
   554     007E                     saved_w	set	btemp
   555     0004  00FE               	movwf	btemp
   556     0005  0E03               	swapf	3,w
   557     0006  00F0               	movwf	??_isr
   558     0007  080A               	movf	10,w
   559     0008  00F1               	movwf	??_isr+1
   560     0009  087F               	movf	btemp+1,w
   561     000A  00F2               	movwf	??_isr+2
   562     000B  120A  118A  2885   	ljmp	_isr
   563                           
   564                           	psect	idloc
   565                           
   566                           ;Config register IDLOC0 @ 0x2000
   567                           ;	unspecified, using default values
   568     2000                     	org	8192
   569     2000  3FFF               	dw	16383
   570                           
   571                           ;Config register IDLOC1 @ 0x2001
   572                           ;	unspecified, using default values
   573     2001                     	org	8193
   574     2001  3FFF               	dw	16383
   575                           
   576                           ;Config register IDLOC2 @ 0x2002
   577                           ;	unspecified, using default values
   578     2002                     	org	8194
   579     2002  3FFF               	dw	16383
   580                           
   581                           ;Config register IDLOC3 @ 0x2003
   582                           ;	unspecified, using default values
   583     2003                     	org	8195
   584     2003  3FFF               	dw	16383
   585                           
   586                           	psect	config
   587                           
   588                           ;Config register CONFIG @ 0x2007
   589                           ;	Oscillator Selection bits
   590                           ;	FOSC = HS, HS oscillator
   591                           ;	Watchdog Timer Enable bit
   592                           ;	WDTE = OFF, WDT disabled
   593                           ;	Power-up Timer Enable bit
   594                           ;	PWRTE = OFF, PWRT disabled
   595                           ;	Brown-out Reset Enable bit
   596                           ;	BOREN = OFF, BOR disabled
   597                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   598                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   599                           ;	Data EEPROM Memory Code Protection bit
   600                           ;	CPD = OFF, Data EEPROM code protection off
   601                           ;	Flash Program Memory Write Enable bits
   602                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   603                           ;	In-Circuit Debugger Mode bit
   604                           ;	DEBUG = 0x1, unprogrammed default
   605                           ;	Flash Program Memory Code Protection bit
   606                           ;	CP = OFF, Code protection off
   607     2007                     	org	8199
   608     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
                 _EXT_INT_Initialize
 ---------------------------------------------------------------------------------
 (1) _EXT_INT_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EXT_INT_Initialize

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Mar 03 21:03:12 2024

                        l17 0099                          u10 0026                          u11 0025  
                        u20 003B                          u21 003A                          u30 0050  
                        u31 004F                          u40 0064                          u41 0063  
                        u50 007D                          u51 007C                          u67 0030  
                        u77 0045                          u87 005A                          u97 0070  
                       l641 002C                         l633 0016                         l627 0093  
                       l651 0050                         l643 0035                         l635 001C  
                       l661 0077                         l653 0056                         l645 003B  
                       l637 0021                         l663 007D                         l655 005E  
                       l647 0041                         l639 0026                         l657 0064  
                       l649 004A                         l659 006A                         _isr 0085  
                      ?_isr 0070                        i1l22 008A                        _INTF 0059  
                      _main 0016                        btemp 007E                        start 000E  
                     ??_isr 0070                       ?_main 0070                       i1l631 0089  
                     i1l629 0085                       _PORTD 0008                       _TRISD 0088  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 0011                __end_of_main 0085                      ??_main 0073  
                    saved_w 007E     __end_of__initialization 0012              __pcstackCOMMON 0070  
            _OPTION_REGbits 0081                  __pmaintext 0016                  __pintentry 0004  
                   __ptext1 0093                     __ptext2 0085                     _counter 0076  
      end_of_initialization 0012         start_initialization 0011                 __end_of_isr 0093  
__end_of_EXT_INT_Initialize 009A                 __pbssCOMMON 0076                   ___latbits 0002  
         interrupt_function 0004                  _INTCONbits 000B          _EXT_INT_Initialize 0093  
                  intlevel1 0000         ?_EXT_INT_Initialize 0070        ??_EXT_INT_Initialize 0073  
