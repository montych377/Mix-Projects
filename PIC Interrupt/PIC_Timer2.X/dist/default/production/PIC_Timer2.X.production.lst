

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Mar 04 03:26:55 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0008                     _PORTD	set	8
   171     000B                     _INTCONbits	set	11
   172     0012                     _T2CONbits	set	18
   173     0011                     _TMR2	set	17
   174     0061                     _TMR2IF	set	97
   175     0088                     _TRISD	set	136
   176     008C                     _PIE1bits	set	140
   177                           
   178                           	psect	cinit
   179     000F                     start_initialization:	
   180                           ; #config settings
   181                           
   182     000F                     __initialization:
   183                           
   184                           ; Clear objects allocated to COMMON
   185     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   186     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   187     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   188     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   189     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   190     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   191     0015                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     0015                     __end_of__initialization:
   195     0015  0183               	clrf	3
   196     0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMMON
   199     0070                     __pbssCOMMON:
   200     0070                     _counter3:
   201     0070                     	ds	2
   202     0072                     _counter2:
   203     0072                     	ds	2
   204     0074                     _counter1:
   205     0074                     	ds	2
   206                           
   207                           	psect	cstackCOMMON
   208     0076                     __pcstackCOMMON:
   209     0076                     ?_Timer2:
   210     0076                     ??_Timer2:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0076                     ?_Timer2_Init:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0076                     ?_main:	
   217                           ; 1 bytes @ 0x0
   218                           
   219                           
   220                           ; 2 bytes @ 0x0
   221     0076                     	ds	2
   222     0078                     ??_Timer2_Init:
   223     0078                     ??_main:	
   224                           ; 1 bytes @ 0x2
   225                           
   226                           
   227                           	psect	maintext
   228     0019                     __pmaintext:	
   229                           ; 1 bytes @ 0x2
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 39 in file "newmain.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  2   33[None  ] int 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_Timer2_Init
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262     0019                     _main:	
   263                           ;psect for function _main
   264                           
   265     0019                     l650:	
   266                           ;incstack = 0
   267                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   268                           
   269                           
   270                           ;newmain.c: 41:     TRISD = 0x00;
   271     0019  1683               	bsf	3,5	;RP0=1, select bank1
   272     001A  1303               	bcf	3,6	;RP1=0, select bank1
   273     001B  0188               	clrf	8	;volatile
   274                           
   275                           ;newmain.c: 42:     PORTD = 0x00;
   276     001C  1283               	bcf	3,5	;RP0=0, select bank0
   277     001D  1303               	bcf	3,6	;RP1=0, select bank0
   278     001E  0188               	clrf	8	;volatile
   279     001F                     l652:
   280                           
   281                           ;newmain.c: 43:     Timer2_Init();
   282     001F  120A  118A  207B  120A  118A  	fcall	_Timer2_Init
   283     0024                     l654:
   284                           
   285                           ;newmain.c: 47:         if(counter1 == 100){
   286     0024  3064               	movlw	100
   287     0025  0674               	xorwf	_counter1,w	;volatile
   288     0026  0475               	iorwf	_counter1+1,w	;volatile
   289     0027  1D03               	btfss	3,2
   290     0028  282A               	goto	u21
   291     0029  282B               	goto	u20
   292     002A                     u21:
   293     002A  2833               	goto	l660
   294     002B                     u20:
   295     002B                     l656:
   296                           
   297                           ;newmain.c: 49:             PORTD ^= 0x01;
   298     002B  3001               	movlw	1
   299     002C  00FF               	movwf	btemp+1
   300     002D  087F               	movf	btemp+1,w
   301     002E  1283               	bcf	3,5	;RP0=0, select bank0
   302     002F  1303               	bcf	3,6	;RP1=0, select bank0
   303     0030  0688               	xorwf	8,f	;volatile
   304     0031                     l658:
   305                           
   306                           ;newmain.c: 50:             counter1 = 0;
   307     0031  01F4               	clrf	_counter1	;volatile
   308     0032  01F5               	clrf	_counter1+1	;volatile
   309     0033                     l660:
   310                           
   311                           ;newmain.c: 52:         if(counter2 == 300){
   312     0033  302C               	movlw	44
   313     0034  0672               	xorwf	_counter2,w	;volatile
   314     0035  1D03               	skipz
   315     0036  283B               	goto	u31
   316     0037  0373               	decf	_counter2+1,w	;volatile
   317     0038  1D03               	btfss	3,2
   318     0039  283B               	goto	u31
   319     003A  283C               	goto	u30
   320     003B                     u31:
   321     003B  2844               	goto	l666
   322     003C                     u30:
   323     003C                     l662:
   324                           
   325                           ;newmain.c: 54:             PORTD ^= 0x02;
   326     003C  3002               	movlw	2
   327     003D  00FF               	movwf	btemp+1
   328     003E  087F               	movf	btemp+1,w
   329     003F  1283               	bcf	3,5	;RP0=0, select bank0
   330     0040  1303               	bcf	3,6	;RP1=0, select bank0
   331     0041  0688               	xorwf	8,f	;volatile
   332     0042                     l664:
   333                           
   334                           ;newmain.c: 55:             counter2=0;
   335     0042  01F2               	clrf	_counter2	;volatile
   336     0043  01F3               	clrf	_counter2+1	;volatile
   337     0044                     l666:
   338                           
   339                           ;newmain.c: 57:         if(counter3 == 500){
   340     0044  30F4               	movlw	244
   341     0045  0670               	xorwf	_counter3,w	;volatile
   342     0046  1D03               	skipz
   343     0047  284C               	goto	u41
   344     0048  0371               	decf	_counter3+1,w	;volatile
   345     0049  1D03               	btfss	3,2
   346     004A  284C               	goto	u41
   347     004B  284D               	goto	u40
   348     004C                     u41:
   349     004C  2824               	goto	l654
   350     004D                     u40:
   351     004D                     l668:
   352                           
   353                           ;newmain.c: 59:             PORTD ^= 0x04;
   354     004D  3004               	movlw	4
   355     004E  00FF               	movwf	btemp+1
   356     004F  087F               	movf	btemp+1,w
   357     0050  1283               	bcf	3,5	;RP0=0, select bank0
   358     0051  1303               	bcf	3,6	;RP1=0, select bank0
   359     0052  0688               	xorwf	8,f	;volatile
   360     0053                     l670:
   361                           
   362                           ;newmain.c: 60:             counter3 = 0;
   363     0053  01F0               	clrf	_counter3	;volatile
   364     0054  01F1               	clrf	_counter3+1	;volatile
   365     0055  2824               	goto	l654
   366     0056  120A  118A  280C   	ljmp	start
   367     0059                     __end_of_main:
   368                           
   369                           	psect	text1
   370     007B                     __ptext1:	
   371 ;; *************** function _Timer2_Init *****************
   372 ;; Defined at:
   373 ;;		line 29 in file "newmain.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0
   389 ;;      Temps:          0       0       0       0       0
   390 ;;      Totals:         0       0       0       0       0
   391 ;;Total ram usage:        0 bytes
   392 ;; Hardware stack levels used: 1
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401     007B                     _Timer2_Init:	
   402                           ;psect for function _Timer2_Init
   403                           
   404     007B                     l632:	
   405                           ;incstack = 0
   406                           ; Regs used in _Timer2_Init: [wreg]
   407                           
   408                           
   409                           ;newmain.c: 31:     T2CONbits.T2CKPS0 = 1;
   410     007B  1283               	bcf	3,5	;RP0=0, select bank0
   411     007C  1303               	bcf	3,6	;RP1=0, select bank0
   412     007D  1412               	bsf	18,0	;volatile
   413                           
   414                           ;newmain.c: 32:     T2CONbits.T2CKPS1 = 0;
   415     007E  1092               	bcf	18,1	;volatile
   416     007F                     l634:
   417                           
   418                           ;newmain.c: 33:     TMR2 = 130;
   419     007F  3082               	movlw	130
   420     0080  0091               	movwf	17	;volatile
   421     0081                     l636:
   422                           
   423                           ;newmain.c: 34:     PIE1bits.TMR2IE = 1;
   424     0081  1683               	bsf	3,5	;RP0=1, select bank1
   425     0082  1303               	bcf	3,6	;RP1=0, select bank1
   426     0083  148C               	bsf	12,1	;volatile
   427     0084                     l638:
   428                           
   429                           ;newmain.c: 35:     INTCONbits.GIE = 1;
   430     0084  178B               	bsf	11,7	;volatile
   431     0085                     l640:
   432                           
   433                           ;newmain.c: 36:     INTCONbits.PEIE = 1;
   434     0085  170B               	bsf	11,6	;volatile
   435     0086                     l642:
   436                           
   437                           ;newmain.c: 37:     T2CONbits.TMR2ON = 1;
   438     0086  1283               	bcf	3,5	;RP0=0, select bank0
   439     0087  1303               	bcf	3,6	;RP1=0, select bank0
   440     0088  1512               	bsf	18,2	;volatile
   441     0089                     l29:
   442     0089  0008               	return
   443     008A                     __end_of_Timer2_Init:
   444                           
   445                           	psect	text2
   446     0059                     __ptext2:	
   447 ;; *************** function _Timer2 *****************
   448 ;; Defined at:
   449 ;;		line 16 in file "newmain.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          2       0       0       0       0
   466 ;;      Totals:         2       0       0       0       0
   467 ;;Total ram usage:        2 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		Interrupt level 1
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476     0059                     _Timer2:	
   477                           ;psect for function _Timer2
   478                           
   479     0059                     i1l644:
   480                           
   481                           ;newmain.c: 18:     if(TMR2IF) {
   482     0059  1283               	bcf	3,5	;RP0=0, select bank0
   483     005A  1303               	bcf	3,6	;RP1=0, select bank0
   484     005B  1C8C               	btfss	12,1	;volatile
   485     005C  285E               	goto	u1_21
   486     005D  285F               	goto	u1_20
   487     005E                     u1_21:
   488     005E  2874               	goto	i1l26
   489     005F                     u1_20:
   490     005F                     i1l646:
   491                           
   492                           ;newmain.c: 20:         counter1++;
   493     005F  3001               	movlw	1
   494     0060  07F4               	addwf	_counter1,f	;volatile
   495     0061  1803               	skipnc
   496     0062  0AF5               	incf	_counter1+1,f	;volatile
   497     0063  3000               	movlw	0
   498     0064  07F5               	addwf	_counter1+1,f	;volatile
   499                           
   500                           ;newmain.c: 21:         counter2++;
   501     0065  3001               	movlw	1
   502     0066  07F2               	addwf	_counter2,f	;volatile
   503     0067  1803               	skipnc
   504     0068  0AF3               	incf	_counter2+1,f	;volatile
   505     0069  3000               	movlw	0
   506     006A  07F3               	addwf	_counter2+1,f	;volatile
   507                           
   508                           ;newmain.c: 22:         counter3++;
   509     006B  3001               	movlw	1
   510     006C  07F0               	addwf	_counter3,f	;volatile
   511     006D  1803               	skipnc
   512     006E  0AF1               	incf	_counter3+1,f	;volatile
   513     006F  3000               	movlw	0
   514     0070  07F1               	addwf	_counter3+1,f	;volatile
   515                           
   516                           ;newmain.c: 24:         TMR2 = 130;
   517     0071  3082               	movlw	130
   518     0072  0091               	movwf	17	;volatile
   519     0073                     i1l648:
   520                           
   521                           ;newmain.c: 25:         TMR2IF = 0;
   522     0073  108C               	bcf	12,1	;volatile
   523     0074                     i1l26:
   524     0074  0877               	movf	??_Timer2+1,w
   525     0075  008A               	movwf	10
   526     0076  0E76               	swapf	??_Timer2,w
   527     0077  0083               	movwf	3
   528     0078  0EFE               	swapf	btemp,f
   529     0079  0E7E               	swapf	btemp,w
   530     007A  0009               	retfie
   531     007B                     __end_of_Timer2:
   532     007E                     btemp	set	126	;btemp
   533     007E                     wtemp0	set	126
   534                           
   535                           	psect	intentry
   536     0004                     __pintentry:	
   537                           ;incstack = 0
   538                           ; Regs used in _Timer2: [wreg]
   539                           
   540     0004                     interrupt_function:
   541     007E                     saved_w	set	btemp
   542     0004  00FE               	movwf	btemp
   543     0005  0E03               	swapf	3,w
   544     0006  00F6               	movwf	??_Timer2
   545     0007  080A               	movf	10,w
   546     0008  00F7               	movwf	??_Timer2+1
   547     0009  120A  118A  2859   	ljmp	_Timer2
   548                           
   549                           	psect	idloc
   550                           
   551                           ;Config register IDLOC0 @ 0x2000
   552                           ;	unspecified, using default values
   553     2000                     	org	8192
   554     2000  3FFF               	dw	16383
   555                           
   556                           ;Config register IDLOC1 @ 0x2001
   557                           ;	unspecified, using default values
   558     2001                     	org	8193
   559     2001  3FFF               	dw	16383
   560                           
   561                           ;Config register IDLOC2 @ 0x2002
   562                           ;	unspecified, using default values
   563     2002                     	org	8194
   564     2002  3FFF               	dw	16383
   565                           
   566                           ;Config register IDLOC3 @ 0x2003
   567                           ;	unspecified, using default values
   568     2003                     	org	8195
   569     2003  3FFF               	dw	16383
   570                           
   571                           	psect	config
   572                           
   573                           ;Config register CONFIG @ 0x2007
   574                           ;	Oscillator Selection bits
   575                           ;	FOSC = HS, HS oscillator
   576                           ;	Watchdog Timer Enable bit
   577                           ;	WDTE = OFF, WDT disabled
   578                           ;	Power-up Timer Enable bit
   579                           ;	PWRTE = OFF, PWRT disabled
   580                           ;	Brown-out Reset Enable bit
   581                           ;	BOREN = OFF, BOR disabled
   582                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   583                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   584                           ;	Data EEPROM Memory Code Protection bit
   585                           ;	CPD = OFF, Data EEPROM code protection off
   586                           ;	Flash Program Memory Write Enable bits
   587                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   588                           ;	In-Circuit Debugger Mode bit
   589                           ;	DEBUG = 0x1, unprogrammed default
   590                           ;	Flash Program Memory Code Protection bit
   591                           ;	CP = OFF, Code protection off
   592     2007                     	org	8199
   593     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer2 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer2 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer2 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer2 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer2 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer2                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer2_Init

 _Timer2 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Mar 04 03:26:55 2024

                     l29 0089                       u20 002B                       u21 002A  
                     u30 003C                       u31 003B                       u40 004D  
                     u41 004C                      l640 0085                      l632 007B  
                    l642 0086                      l634 007F                      l650 0019  
                    l636 0081                      l660 0033                      l652 001F  
                    l638 0084                      l670 0053                      l662 003C  
                    l654 0024                      l664 0042                      l656 002B  
                    l666 0044                      l658 0031                      l668 004D  
                   i1l26 0074                     _TMR2 0011                     u1_20 005F  
                   u1_21 005E                     _main 0019                     btemp 007E  
                   start 000C                    ?_main 0076                    i1l644 0059  
                  i1l646 005F                    i1l648 0073                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0059  
                 ??_main 0078                   _TMR2IF 0061            ??_Timer2_Init 0078  
                 _Timer2 0059                   saved_w 007E  __end_of__initialization 0015  
         __pcstackCOMMON 0076      __end_of_Timer2_Init 008A                  ?_Timer2 0076  
             __pmaintext 0019               __pintentry 0004              _Timer2_Init 007B  
                __ptext1 007B                  __ptext2 0059                _T2CONbits 0012  
   end_of_initialization 0015           __end_of_Timer2 007B      start_initialization 000F  
               ??_Timer2 0076              __pbssCOMMON 0070                ___latbits 0002  
           ?_Timer2_Init 0076        interrupt_function 0004                 _PIE1bits 008C  
               _counter1 0074                 _counter2 0072                 _counter3 0070  
             _INTCONbits 000B                 intlevel1 0000  
