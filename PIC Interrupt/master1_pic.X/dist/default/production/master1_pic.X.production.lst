

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Feb 20 22:03:40 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0008                     _PORTD	set	8
   169  0013                     _SSPBUF	set	19
   170  0014                     _SSPCON	set	20
   171  0088                     _TRISD	set	136
   172  0094                     _SSPSTATbits	set	148
   173  0094                     _SSPSTAT	set	148
   174  043C                     _TRISC4	set	1084
   175  043D                     _TRISC5	set	1085
   176  043B                     _TRISC3	set	1083
   177                           
   178                           	psect	cinit
   179  07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182  07FC                     __initialization:
   183  07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  07FC                     __end_of__initialization:
   187  07FC  0183               	clrf	3
   188  07FD  120A  118A  2FD4   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191  0070                     __pcstackCOMMON:
   192  0070                     ?_SPI_Initialize:
   193  0070                     ??_SPI_Initialize:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_SPI_rx:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ??_SPI_rx:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_main:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207  0070                     	ds	1
   208  0071                     SPI_rx@data:
   209                           
   210                           ; 1 bytes @ 0x1
   211  0071                     	ds	1
   212  0072                     ??_main:
   213                           
   214                           ; 1 bytes @ 0x2
   215  0072                     	ds	3
   216  0075                     main@data:
   217                           
   218                           ; 1 bytes @ 0x5
   219  0075                     	ds	1
   220                           
   221                           	psect	maintext
   222  07D4                     __pmaintext:	
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 30 in file "slave.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  data            1    5[COMMON] unsigned char 
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         1       0       0       0       0
   244 ;;      Temps:          3       0       0       0       0
   245 ;;      Totals:         4       0       0       0       0
   246 ;;Total ram usage:        4 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_SPI_Initialize
   250 ;;		_SPI_rx
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256  07D4                     _main:	
   257                           ;psect for function _main
   258                           
   259  07D4                     l649:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   262                           
   263                           
   264                           ;slave.c: 31:     TRISD = 0X00;
   265  07D4  1683               	bsf	3,5	;RP0=1, select bank1
   266  07D5  1303               	bcf	3,6	;RP1=0, select bank1
   267  07D6  0188               	clrf	8	;volatile
   268                           
   269                           ;slave.c: 32:     PORTD = 0X00;
   270  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   271  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   272  07D9  0188               	clrf	8	;volatile
   273  07DA                     l651:
   274                           
   275                           ;slave.c: 33:     SPI_Initialize();
   276  07DA  120A  118A  27BB  120A  118A  	fcall	_SPI_Initialize
   277  07DF                     l653:
   278                           
   279                           ;slave.c: 35:         char data = SPI_rx();
   280  07DF  120A  118A  27C6  120A  118A  	fcall	_SPI_rx
   281  07E4  00F2               	movwf	??_main
   282  07E5  0872               	movf	??_main,w
   283  07E6  00F5               	movwf	main@data
   284  07E7                     l655:
   285                           
   286                           ;slave.c: 36:         _delay((unsigned long)((100)*(8000000/4000.0)));
   287  07E7  3002               	movlw	2
   288  07E8  00F4               	movwf	??_main+2
   289  07E9  3004               	movlw	4
   290  07EA  00F3               	movwf	??_main+1
   291  07EB  30BA               	movlw	186
   292  07EC  00F2               	movwf	??_main
   293  07ED                     u37:
   294  07ED  0BF2               	decfsz	??_main,f
   295  07EE  2FED               	goto	u37
   296  07EF  0BF3               	decfsz	??_main+1,f
   297  07F0  2FED               	goto	u37
   298  07F1  0BF4               	decfsz	??_main+2,f
   299  07F2  2FED               	goto	u37
   300  07F3  0000               	nop
   301  07F4                     l657:
   302                           
   303                           ;slave.c: 37:         PORTD=data;
   304  07F4  0875               	movf	main@data,w
   305  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   306  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   307  07F7  0088               	movwf	8	;volatile
   308  07F8  2FDF               	goto	l653
   309  07F9  120A  118A  2800   	ljmp	start
   310  07FC                     __end_of_main:
   311                           
   312                           	psect	text1
   313  07C6                     __ptext1:	
   314 ;; *************** function _SPI_rx *****************
   315 ;; Defined at:
   316 ;;		line 24 in file "slave.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  data            1    1[COMMON] unsigned char 
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      unsigned char 
   323 ;; Registers used:
   324 ;;		wreg
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         1       0       0       0       0
   332 ;;      Temps:          1       0       0       0       0
   333 ;;      Totals:         2       0       0       0       0
   334 ;;Total ram usage:        2 bytes
   335 ;; Hardware stack levels used: 1
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		_main
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343  07C6                     _SPI_rx:	
   344                           ;psect for function _SPI_rx
   345                           
   346  07C6                     l641:	
   347                           ;incstack = 0
   348                           ; Regs used in _SPI_rx: [wreg]
   349                           
   350  07C6                     l32:	
   351                           ;slave.c: 25:     while (!SSPSTATbits.BF);
   352                           
   353  07C6  1683               	bsf	3,5	;RP0=1, select bank1
   354  07C7  1303               	bcf	3,6	;RP1=0, select bank1
   355  07C8  1C14               	btfss	20,0	;volatile
   356  07C9  2FCB               	goto	u11
   357  07CA  2FCC               	goto	u10
   358  07CB                     u11:
   359  07CB  2FC6               	goto	l32
   360  07CC                     u10:
   361  07CC                     l643:
   362                           
   363                           ;slave.c: 26:     char data= SSPBUF;
   364  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   365  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   366  07CE  0813               	movf	19,w	;volatile
   367  07CF  00F0               	movwf	??_SPI_rx
   368  07D0  0870               	movf	??_SPI_rx,w
   369  07D1  00F1               	movwf	SPI_rx@data
   370                           
   371                           ;slave.c: 27:     return data;
   372  07D2  0871               	movf	SPI_rx@data,w
   373  07D3                     l35:
   374  07D3  0008               	return
   375  07D4                     __end_of_SPI_rx:
   376                           
   377                           	psect	text2
   378  07BB                     __ptext2:	
   379 ;; *************** function _SPI_Initialize *****************
   380 ;; Defined at:
   381 ;;		line 13 in file "slave.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408  07BB                     _SPI_Initialize:	
   409                           ;psect for function _SPI_Initialize
   410                           
   411  07BB                     l635:	
   412                           ;incstack = 0
   413                           ; Regs used in _SPI_Initialize: [wreg+status,2]
   414                           
   415                           
   416                           ;slave.c: 14:     TRISC3 = 1;
   417  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   418  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   419  07BD  1587               	bsf	7,3	;volatile
   420                           
   421                           ;slave.c: 15:     TRISC5 = 0;
   422  07BE  1287               	bcf	7,5	;volatile
   423                           
   424                           ;slave.c: 16:     TRISC4 = 1;
   425  07BF  1607               	bsf	7,4	;volatile
   426  07C0                     l637:
   427                           
   428                           ;slave.c: 17:     SSPSTAT = 0b00000000;
   429  07C0  0194               	clrf	20	;volatile
   430  07C1                     l639:
   431                           
   432                           ;slave.c: 18:     SSPCON = 0b00100100;
   433  07C1  3024               	movlw	36
   434  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   435  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   436  07C4  0094               	movwf	20	;volatile
   437  07C5                     l23:
   438  07C5  0008               	return
   439  07C6                     __end_of_SPI_Initialize:
   440  007E                     btemp	set	126	;btemp
   441  007E                     wtemp0	set	126
   442                           
   443                           	psect	idloc
   444                           
   445                           ;Config register IDLOC0 @ 0x2000
   446                           ;	unspecified, using default values
   447  2000                     	org	8192
   448  2000  3FFF               	dw	16383
   449                           
   450                           ;Config register IDLOC1 @ 0x2001
   451                           ;	unspecified, using default values
   452  2001                     	org	8193
   453  2001  3FFF               	dw	16383
   454                           
   455                           ;Config register IDLOC2 @ 0x2002
   456                           ;	unspecified, using default values
   457  2002                     	org	8194
   458  2002  3FFF               	dw	16383
   459                           
   460                           ;Config register IDLOC3 @ 0x2003
   461                           ;	unspecified, using default values
   462  2003                     	org	8195
   463  2003  3FFF               	dw	16383
   464                           
   465                           	psect	config
   466                           
   467                           ;Config register CONFIG @ 0x2007
   468                           ;	Oscillator Selection bits
   469                           ;	FOSC = HS, HS oscillator
   470                           ;	Watchdog Timer Enable bit
   471                           ;	WDTE = OFF, WDT disabled
   472                           ;	Power-up Timer Enable bit
   473                           ;	PWRTE = OFF, PWRT disabled
   474                           ;	Brown-out Reset Enable bit
   475                           ;	BOREN = OFF, BOR disabled
   476                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   477                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   478                           ;	Data EEPROM Memory Code Protection bit
   479                           ;	CPD = OFF, Data EEPROM code protection off
   480                           ;	Flash Program Memory Write Enable bits
   481                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   482                           ;	In-Circuit Debugger Mode bit
   483                           ;	DEBUG = 0x1, unprogrammed default
   484                           ;	Flash Program Memory Code Protection bit
   485                           ;	CP = OFF, Code protection off
   486  2007                     	org	8199
   487  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_rx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              2 COMMON     4     4      0
                     _SPI_Initialize
                             _SPI_rx
 ---------------------------------------------------------------------------------
 (1) _SPI_rx                                               2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Initialize
   _SPI_rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Feb 20 22:03:40 2024

         _SPI_Initialize 07BB              _SSPSTATbits 0094                       l23 07C5  
                     l32 07C6                       l35 07D3                       u10 07CC  
                     u11 07CB                       u37 07ED                      l641 07C6  
                    l635 07BB                      l643 07CC                      l651 07DA  
                    l637 07C0                      l653 07DF                      l639 07C1  
                    l655 07E7                      l657 07F4                      l649 07D4  
                   _main 07D4                     btemp 007E                     start 0000  
 __end_of_SPI_Initialize 07C6                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        ?_SPI_Initialize 0070          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0072                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _SPI_rx 07C6  __end_of__initialization 07FC           __pcstackCOMMON 0070  
                ?_SPI_rx 0070               __pmaintext 07D4                  _SSPSTAT 0094  
       ??_SPI_Initialize 0070                  __ptext1 07C6                  __ptext2 07BB  
   end_of_initialization 07FC           __end_of_SPI_rx 07D4      start_initialization 07FC  
               ??_SPI_rx 0070                ___latbits 0002               SPI_rx@data 0071  
               main@data 0075  
