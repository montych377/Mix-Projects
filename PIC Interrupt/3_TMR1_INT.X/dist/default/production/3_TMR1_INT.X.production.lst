

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Nov 20 01:30:04 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     000B                     _INTCONbits	set	11
   170     0010                     _T1CONbits	set	16
   171     000F                     _TMR1H	set	15
   172     000E                     _TMR1L	set	14
   173     0008                     _PORTD	set	8
   174     0060                     _TMR1IF	set	96
   175     008C                     _PIE1bits	set	140
   176     0088                     _TRISD	set	136
   177                           
   178                           	psect	cinit
   179     0011                     start_initialization:	
   180                           ; #config settings
   181                           
   182     0011                     __initialization:
   183                           
   184                           ; Clear objects allocated to COMMON
   185     0011  01F0               	clrf	__pbssCOMMON& (0+127)
   186     0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   187     0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   188     0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   189     0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   190     0016                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     0016                     __end_of__initialization:
   194     0016  0183               	clrf	3
   195     0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198     0070                     __pbssCOMMON:
   199     0070                     _counter2:
   200     0070                     	ds	2
   201     0072                     _counter1:
   202     0072                     	ds	2
   203     0074                     _value:
   204     0074                     	ds	1
   205                           
   206                           	psect	cstackCOMMON
   207     0075                     __pcstackCOMMON:
   208     0075                     ?_timer1_isr:
   209     0075                     ??_timer1_isr:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0075                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217     0075                     	ds	3
   218     0078                     ??_main:
   219                           
   220                           	psect	maintext
   221     001A                     __pmaintext:	
   222                           ; 1 bytes @ 0x3
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 31 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  2   32[None  ] int 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, btemp+1
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255     001A                     _main:	
   256                           ;psect for function _main
   257                           
   258     001A                     l642:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   261                           
   262                           
   263                           ;main.c: 33:     TRISD = 0x00;
   264     001A  1683               	bsf	3,5	;RP0=1, select bank1
   265     001B  1303               	bcf	3,6	;RP1=0, select bank1
   266     001C  0188               	clrf	8	;volatile
   267                           
   268                           ;main.c: 34:     PORTD = 0x00;
   269     001D  1283               	bcf	3,5	;RP0=0, select bank0
   270     001E  1303               	bcf	3,6	;RP1=0, select bank0
   271     001F  0188               	clrf	8	;volatile
   272     0020                     l644:
   273                           
   274                           ;main.c: 36:     T1CONbits.T1CKPS0 = 1;
   275     0020  1610               	bsf	16,4	;volatile
   276     0021                     l646:
   277                           
   278                           ;main.c: 37:     T1CONbits.T1CKPS1 = 1;
   279     0021  1690               	bsf	16,5	;volatile
   280     0022                     l648:
   281                           
   282                           ;main.c: 39:     TMR1L = 0x57;
   283     0022  3057               	movlw	87
   284     0023  008E               	movwf	14	;volatile
   285     0024                     l650:
   286                           
   287                           ;main.c: 40:     TMR1H = 0x9E;
   288     0024  309E               	movlw	158
   289     0025  008F               	movwf	15	;volatile
   290     0026                     l652:
   291                           
   292                           ;main.c: 42:     PIE1bits.TMR1IE = 1;
   293     0026  1683               	bsf	3,5	;RP0=1, select bank1
   294     0027  1303               	bcf	3,6	;RP1=0, select bank1
   295     0028  140C               	bsf	12,0	;volatile
   296     0029                     l654:
   297                           
   298                           ;main.c: 43:     INTCONbits.PEIE = 1;
   299     0029  170B               	bsf	11,6	;volatile
   300     002A                     l656:
   301                           
   302                           ;main.c: 44:     INTCONbits.GIE = 1;
   303     002A  178B               	bsf	11,7	;volatile
   304     002B                     l658:
   305                           
   306                           ;main.c: 45:     T1CONbits.TMR1ON = 1;
   307     002B  1283               	bcf	3,5	;RP0=0, select bank0
   308     002C  1303               	bcf	3,6	;RP1=0, select bank0
   309     002D  1410               	bsf	16,0	;volatile
   310     002E                     l660:
   311                           
   312                           ;main.c: 51:         if(counter1 == 5){
   313     002E  3005               	movlw	5
   314     002F  0672               	xorwf	_counter1,w	;volatile
   315     0030  0473               	iorwf	_counter1+1,w	;volatile
   316     0031  1D03               	btfss	3,2
   317     0032  2834               	goto	u21
   318     0033  2835               	goto	u20
   319     0034                     u21:
   320     0034  283D               	goto	l666
   321     0035                     u20:
   322     0035                     l662:
   323                           
   324                           ;main.c: 52:             PORTD ^= 0x02;
   325     0035  3002               	movlw	2
   326     0036  00FF               	movwf	btemp+1
   327     0037  087F               	movf	btemp+1,w
   328     0038  1283               	bcf	3,5	;RP0=0, select bank0
   329     0039  1303               	bcf	3,6	;RP1=0, select bank0
   330     003A  0688               	xorwf	8,f	;volatile
   331     003B                     l664:
   332                           
   333                           ;main.c: 53:             counter1 = 0;
   334     003B  01F2               	clrf	_counter1	;volatile
   335     003C  01F3               	clrf	_counter1+1	;volatile
   336     003D                     l666:
   337                           
   338                           ;main.c: 55:         if(counter2 == 10){
   339     003D  300A               	movlw	10
   340     003E  0670               	xorwf	_counter2,w	;volatile
   341     003F  0471               	iorwf	_counter2+1,w	;volatile
   342     0040  1D03               	btfss	3,2
   343     0041  2843               	goto	u31
   344     0042  2844               	goto	u30
   345     0043                     u31:
   346     0043  282E               	goto	l660
   347     0044                     u30:
   348     0044                     l668:
   349                           
   350                           ;main.c: 56:             PORTD ^= 0x04;
   351     0044  3004               	movlw	4
   352     0045  00FF               	movwf	btemp+1
   353     0046  087F               	movf	btemp+1,w
   354     0047  1283               	bcf	3,5	;RP0=0, select bank0
   355     0048  1303               	bcf	3,6	;RP1=0, select bank0
   356     0049  0688               	xorwf	8,f	;volatile
   357     004A                     l670:
   358                           
   359                           ;main.c: 57:             counter2 = 0;
   360     004A  01F0               	clrf	_counter2	;volatile
   361     004B  01F1               	clrf	_counter2+1	;volatile
   362     004C  282E               	goto	l660
   363     004D  120A  118A  280E   	ljmp	start
   364     0050                     __end_of_main:
   365                           
   366                           	psect	text1
   367     0050                     __ptext1:	
   368 ;; *************** function _timer1_isr *****************
   369 ;; Defined at:
   370 ;;		line 17 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, btemp+1
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          3       0       0       0       0
   387 ;;      Totals:         3       0       0       0       0
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		Interrupt level 1
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397     0050                     _timer1_isr:	
   398                           ;psect for function _timer1_isr
   399                           
   400     0050                     i1l630:
   401                           
   402                           ;main.c: 19:     if(TMR1IF==1){
   403     0050  1283               	bcf	3,5	;RP0=0, select bank0
   404     0051  1303               	bcf	3,6	;RP1=0, select bank0
   405     0052  1C0C               	btfss	12,0	;volatile
   406     0053  2855               	goto	u1_21
   407     0054  2856               	goto	u1_20
   408     0055                     u1_21:
   409     0055  286B               	goto	i1l28
   410     0056                     u1_20:
   411     0056                     i1l632:
   412                           
   413                           ;main.c: 21:         counter1++;
   414     0056  3001               	movlw	1
   415     0057  07F2               	addwf	_counter1,f	;volatile
   416     0058  1803               	skipnc
   417     0059  0AF3               	incf	_counter1+1,f	;volatile
   418     005A  3000               	movlw	0
   419     005B  07F3               	addwf	_counter1+1,f	;volatile
   420                           
   421                           ;main.c: 22:         counter2++;
   422     005C  3001               	movlw	1
   423     005D  07F0               	addwf	_counter2,f	;volatile
   424     005E  1803               	skipnc
   425     005F  0AF1               	incf	_counter2+1,f	;volatile
   426     0060  3000               	movlw	0
   427     0061  07F1               	addwf	_counter2+1,f	;volatile
   428     0062                     i1l634:
   429                           
   430                           ;main.c: 23:         PORTD ^= 0x01;
   431     0062  3001               	movlw	1
   432     0063  00FF               	movwf	btemp+1
   433     0064  087F               	movf	btemp+1,w
   434     0065  0688               	xorwf	8,f	;volatile
   435     0066                     i1l636:
   436                           
   437                           ;main.c: 25:         TMR1L = 0x57;
   438     0066  3057               	movlw	87
   439     0067  008E               	movwf	14	;volatile
   440     0068                     i1l638:
   441                           
   442                           ;main.c: 26:         TMR1H = 0x9E;
   443     0068  309E               	movlw	158
   444     0069  008F               	movwf	15	;volatile
   445     006A                     i1l640:
   446                           
   447                           ;main.c: 27:         TMR1IF = 0;
   448     006A  100C               	bcf	12,0	;volatile
   449     006B                     i1l28:
   450     006B  0877               	movf	??_timer1_isr+2,w
   451     006C  00FF               	movwf	btemp+1
   452     006D  0876               	movf	??_timer1_isr+1,w
   453     006E  008A               	movwf	10
   454     006F  0E75               	swapf	??_timer1_isr,w
   455     0070  0083               	movwf	3
   456     0071  0EFE               	swapf	btemp,f
   457     0072  0E7E               	swapf	btemp,w
   458     0073  0009               	retfie
   459     0074                     __end_of_timer1_isr:
   460     007E                     btemp	set	126	;btemp
   461     007E                     wtemp0	set	126
   462                           
   463                           	psect	intentry
   464     0004                     __pintentry:	
   465                           ;incstack = 0
   466                           ; Regs used in _timer1_isr: [wreg+status,2+status,0+btemp+1]
   467                           
   468     0004                     interrupt_function:
   469     007E                     saved_w	set	btemp
   470     0004  00FE               	movwf	btemp
   471     0005  0E03               	swapf	3,w
   472     0006  00F5               	movwf	??_timer1_isr
   473     0007  080A               	movf	10,w
   474     0008  00F6               	movwf	??_timer1_isr+1
   475     0009  087F               	movf	btemp+1,w
   476     000A  00F7               	movwf	??_timer1_isr+2
   477     000B  120A  118A  2850   	ljmp	_timer1_isr
   478                           
   479                           	psect	idloc
   480                           
   481                           ;Config register IDLOC0 @ 0x2000
   482                           ;	unspecified, using default values
   483     2000                     	org	8192
   484     2000  3FFF               	dw	16383
   485                           
   486                           ;Config register IDLOC1 @ 0x2001
   487                           ;	unspecified, using default values
   488     2001                     	org	8193
   489     2001  3FFF               	dw	16383
   490                           
   491                           ;Config register IDLOC2 @ 0x2002
   492                           ;	unspecified, using default values
   493     2002                     	org	8194
   494     2002  3FFF               	dw	16383
   495                           
   496                           ;Config register IDLOC3 @ 0x2003
   497                           ;	unspecified, using default values
   498     2003                     	org	8195
   499     2003  3FFF               	dw	16383
   500                           
   501                           	psect	config
   502                           
   503                           ;Config register CONFIG @ 0x2007
   504                           ;	Oscillator Selection bits
   505                           ;	FOSC = HS, HS oscillator
   506                           ;	Watchdog Timer Enable bit
   507                           ;	WDTE = OFF, WDT disabled
   508                           ;	Power-up Timer Enable bit
   509                           ;	PWRTE = OFF, PWRT disabled
   510                           ;	Brown-out Reset Enable bit
   511                           ;	BOREN = OFF, BOR disabled
   512                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   513                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   514                           ;	Data EEPROM Memory Code Protection bit
   515                           ;	CPD = OFF, Data EEPROM code protection off
   516                           ;	Flash Program Memory Write Enable bits
   517                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   518                           ;	In-Circuit Debugger Mode bit
   519                           ;	DEBUG = 0x1, unprogrammed default
   520                           ;	Flash Program Memory Code Protection bit
   521                           ;	CP = OFF, Code protection off
   522     2007                     	org	8199
   523     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer1_isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer1_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer1_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer1_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer1_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer1_isr                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer1_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Nov 20 01:30:04 2023

                     u20 0035                       u21 0034                       u30 0044  
                     u31 0043                      l650 0024                      l642 001A  
                    l660 002E                      l652 0026                      l644 0020  
                    l670 004A                      l662 0035                      l654 0029  
                    l646 0021                      l664 003B                      l656 002A  
                    l648 0022                      l666 003D                      l658 002B  
                    l668 0044                     i1l28 006B                     u1_20 0056  
                   u1_21 0055                     _main 001A                     btemp 007E  
                   start 000E                    ?_main 0075                    i1l630 0050  
                  i1l640 006A                    i1l632 0056                    i1l634 0062  
                  i1l636 0066                    i1l638 0068                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTD 0008                    _TRISD 0088  
                  _value 0074                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0050  
                 ??_main 0078                   _TMR1IF 0060                   saved_w 007E  
__end_of__initialization 0016           __pcstackCOMMON 0075               __pmaintext 001A  
             __pintentry 0004                  __ptext1 0050                _T1CONbits 0010  
   end_of_initialization 0016               _timer1_isr 0050      start_initialization 0011  
            ?_timer1_isr 0075              __pbssCOMMON 0070                ___latbits 0002  
      interrupt_function 0004                 _PIE1bits 008C                 _counter1 0072  
               _counter2 0070             ??_timer1_isr 0075               _INTCONbits 000B  
               intlevel1 0000       __end_of_timer1_isr 0074  
