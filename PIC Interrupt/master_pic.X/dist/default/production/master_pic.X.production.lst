

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Feb 20 22:01:45 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0013                     _SSPBUF	set	19
   169  0014                     _SSPCON	set	20
   170  0094                     _SSPSTATbits	set	148
   171  0094                     _SSPSTAT	set	148
   172  043D                     _TRISC5	set	1085
   173  043B                     _TRISC3	set	1083
   174                           
   175                           	psect	cinit
   176  07FC                     start_initialization:	
   177                           ; #config settings
   178                           
   179  07FC                     __initialization:
   180  07FC                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183  07FC                     __end_of__initialization:
   184  07FC  0183               	clrf	3
   185  07FD  120A  118A  2FE0   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188  0070                     __pcstackCOMMON:
   189  0070                     ?_SPI_Initialize:
   190  0070                     ??_SPI_Initialize:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?_SPI_tx:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ??_SPI_tx:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     SPI_tx@data:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207  0070                     	ds	1
   208  0071                     ??_main:
   209                           
   210                           ; 1 bytes @ 0x1
   211  0071                     	ds	3
   212                           
   213                           	psect	maintext
   214  07E0                     __pmaintext:	
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 29 in file "mas.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2, status,0, pclath, cstack
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0
   236 ;;      Temps:          3       0       0       0       0
   237 ;;      Totals:         3       0       0       0       0
   238 ;;Total ram usage:        3 bytes
   239 ;; Hardware stack levels required when called: 1
   240 ;; This function calls:
   241 ;;		_SPI_Initialize
   242 ;;		_SPI_tx
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248  07E0                     _main:	
   249                           ;psect for function _main
   250                           
   251  07E0                     l643:	
   252                           ;incstack = 0
   253                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   254                           
   255                           
   256                           ;mas.c: 30:     SPI_Initialize();
   257  07E0  120A  118A  27CA  120A  118A  	fcall	_SPI_Initialize
   258  07E5                     l34:	
   259                           ;mas.c: 31:     while(1) {
   260                           
   261                           
   262                           ;mas.c: 32:         SPI_tx('A');
   263  07E5  3041               	movlw	65
   264  07E6  120A  118A  27D4  120A  118A  	fcall	_SPI_tx
   265  07EB                     l645:
   266                           
   267                           ;mas.c: 33:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   268  07EB  300B               	movlw	11
   269  07EC  00F3               	movwf	??_main+2
   270  07ED  3026               	movlw	38
   271  07EE  00F2               	movwf	??_main+1
   272  07EF  305D               	movlw	93
   273  07F0  00F1               	movwf	??_main
   274  07F1                     u37:
   275  07F1  0BF1               	decfsz	??_main,f
   276  07F2  2FF1               	goto	u37
   277  07F3  0BF2               	decfsz	??_main+1,f
   278  07F4  2FF1               	goto	u37
   279  07F5  0BF3               	decfsz	??_main+2,f
   280  07F6  2FF1               	goto	u37
   281  07F7  2FF8               	nop2
   282  07F8  2FE5               	goto	l34
   283  07F9  120A  118A  2800   	ljmp	start
   284  07FC                     __end_of_main:
   285                           
   286                           	psect	text1
   287  07D4                     __ptext1:	
   288 ;; *************** function _SPI_tx *****************
   289 ;; Defined at:
   290 ;;		line 19 in file "mas.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;  data            1    wreg     unsigned char 
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  data            1    0[COMMON] unsigned char 
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   304 ;;      Params:         0       0       0       0       0
   305 ;;      Locals:         1       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0
   307 ;;      Totals:         1       0       0       0       0
   308 ;;Total ram usage:        1 bytes
   309 ;; Hardware stack levels used: 1
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317  07D4                     _SPI_tx:	
   318                           ;psect for function _SPI_tx
   319                           
   320                           
   321                           ;incstack = 0
   322                           ; Regs used in _SPI_tx: [wreg]
   323                           ;SPI_tx@data stored from wreg
   324  07D4  00F0               	movwf	SPI_tx@data
   325  07D5                     l635:
   326                           
   327                           ;mas.c: 20:     SSPBUF = data;
   328  07D5  0870               	movf	SPI_tx@data,w
   329  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   330  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   331  07D8  0093               	movwf	19	;volatile
   332  07D9                     l20:	
   333                           ;mas.c: 21:     while (!SSPSTATbits.BF);
   334                           
   335  07D9  1683               	bsf	3,5	;RP0=1, select bank1
   336  07DA  1303               	bcf	3,6	;RP1=0, select bank1
   337  07DB  1C14               	btfss	20,0	;volatile
   338  07DC  2FDE               	goto	u11
   339  07DD  2FDF               	goto	u10
   340  07DE                     u11:
   341  07DE  2FD9               	goto	l20
   342  07DF                     u10:
   343  07DF                     l23:
   344  07DF  0008               	return
   345  07E0                     __end_of_SPI_tx:
   346                           
   347                           	psect	text2
   348  07CA                     __ptext2:	
   349 ;; *************** function _SPI_Initialize *****************
   350 ;; Defined at:
   351 ;;		line 13 in file "mas.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378  07CA                     _SPI_Initialize:	
   379                           ;psect for function _SPI_Initialize
   380                           
   381  07CA                     l629:	
   382                           ;incstack = 0
   383                           ; Regs used in _SPI_Initialize: [wreg+status,2]
   384                           
   385                           
   386                           ;mas.c: 14:     TRISC3 = 0;
   387  07CA  1683               	bsf	3,5	;RP0=1, select bank1
   388  07CB  1303               	bcf	3,6	;RP1=0, select bank1
   389  07CC  1187               	bcf	7,3	;volatile
   390                           
   391                           ;mas.c: 15:     TRISC5 = 0;
   392  07CD  1287               	bcf	7,5	;volatile
   393  07CE                     l631:
   394                           
   395                           ;mas.c: 16:     SSPSTAT = 0b00000000;
   396  07CE  0194               	clrf	20	;volatile
   397  07CF                     l633:
   398                           
   399                           ;mas.c: 17:     SSPCON = 0b00100000;
   400  07CF  3020               	movlw	32
   401  07D0  1283               	bcf	3,5	;RP0=0, select bank0
   402  07D1  1303               	bcf	3,6	;RP1=0, select bank0
   403  07D2  0094               	movwf	20	;volatile
   404  07D3                     l17:
   405  07D3  0008               	return
   406  07D4                     __end_of_SPI_Initialize:
   407  007E                     btemp	set	126	;btemp
   408  007E                     wtemp0	set	126
   409                           
   410                           	psect	idloc
   411                           
   412                           ;Config register IDLOC0 @ 0x2000
   413                           ;	unspecified, using default values
   414  2000                     	org	8192
   415  2000  3FFF               	dw	16383
   416                           
   417                           ;Config register IDLOC1 @ 0x2001
   418                           ;	unspecified, using default values
   419  2001                     	org	8193
   420  2001  3FFF               	dw	16383
   421                           
   422                           ;Config register IDLOC2 @ 0x2002
   423                           ;	unspecified, using default values
   424  2002                     	org	8194
   425  2002  3FFF               	dw	16383
   426                           
   427                           ;Config register IDLOC3 @ 0x2003
   428                           ;	unspecified, using default values
   429  2003                     	org	8195
   430  2003  3FFF               	dw	16383
   431                           
   432                           	psect	config
   433                           
   434                           ;Config register CONFIG @ 0x2007
   435                           ;	Oscillator Selection bits
   436                           ;	FOSC = HS, HS oscillator
   437                           ;	Watchdog Timer Enable bit
   438                           ;	WDTE = OFF, WDT disabled
   439                           ;	Power-up Timer Enable bit
   440                           ;	PWRTE = OFF, PWRT disabled
   441                           ;	Brown-out Reset Enable bit
   442                           ;	BOREN = OFF, BOR disabled
   443                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   444                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   445                           ;	Data EEPROM Memory Code Protection bit
   446                           ;	CPD = OFF, Data EEPROM code protection off
   447                           ;	Flash Program Memory Write Enable bits
   448                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   449                           ;	In-Circuit Debugger Mode bit
   450                           ;	DEBUG = 0x1, unprogrammed default
   451                           ;	Flash Program Memory Code Protection bit
   452                           ;	CP = OFF, Code protection off
   453  2007                     	org	8199
   454  2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                     _SPI_Initialize
                             _SPI_tx
 ---------------------------------------------------------------------------------
 (1) _SPI_tx                                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Initialize
   _SPI_tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Feb 20 22:01:45 2024

         _SPI_Initialize 07CA              _SSPSTATbits 0094                       l20 07D9  
                     l23 07DF                       l17 07D3                       l34 07E5  
                     u10 07DF                       u11 07DE                       u37 07F1  
                    l631 07CE                      l633 07CF                      l635 07D5  
                    l643 07E0                      l629 07CA                      l645 07EB  
                   _main 07E0                     btemp 007E                     start 0000  
 __end_of_SPI_Initialize 07D4                    ?_main 0070                    status 0003  
                  wtemp0 007E          ?_SPI_Initialize 0070          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0071                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 _SPI_tx 07D4  __end_of__initialization 07FC           __pcstackCOMMON 0070  
                ?_SPI_tx 0070               __pmaintext 07E0                  _SSPSTAT 0094  
       ??_SPI_Initialize 0070                  __ptext1 07D4                  __ptext2 07CA  
   end_of_initialization 07FC           __end_of_SPI_tx 07E0      start_initialization 07FC  
               ??_SPI_tx 0070                ___latbits 0002               SPI_tx@data 0070  
