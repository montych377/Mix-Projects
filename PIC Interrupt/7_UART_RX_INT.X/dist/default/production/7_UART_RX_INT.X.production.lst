

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Nov 21 22:14:32 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0088                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0093                     	;# 
   167     0094                     	;# 
   168     0098                     	;# 
   169     0099                     	;# 
   170     009C                     	;# 
   171     009D                     	;# 
   172     009E                     	;# 
   173     009F                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180                           
   181                           	psect	idataCOMMON
   182     01C5                     __pidataCOMMON:
   183                           
   184                           ;initializer for _data
   185     01C5  3441               	retlw	65
   186     001A                     _RCREG	set	26
   187     000B                     _INTCONbits	set	11
   188     0018                     _RCSTA	set	24
   189     0006                     _PORTB	set	6
   190     0008                     _PORTD	set	8
   191     00C4                     _CREN	set	196
   192     00C1                     _OERR	set	193
   193     0065                     _RCIF	set	101
   194     008C                     _PIE1bits	set	140
   195     0098                     _TXSTA	set	152
   196     0099                     _SPBRG	set	153
   197     0086                     _TRISB	set	134
   198     0088                     _TRISD	set	136
   199                           
   200                           	psect	cinit
   201     0013                     start_initialization:	
   202                           ; #config settings
   203                           
   204     0013                     __initialization:
   205                           
   206                           ; Initialize objects allocated to COMMON
   207     0013  120A  118A  21C5  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   208     0018  00F9               	movwf	__pdataCOMMON& (0+127)
   209                           
   210                           ; Clear objects allocated to BANK0
   211     0019  01B6               	clrf	__pbssBANK0& (0+127)
   212     001A  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   213     001B  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   214     001C  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   215     001D  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   216                           
   217                           ; Clear objects allocated to COMMON
   218     001E  01F8               	clrf	__pbssCOMMON& (0+127)
   219     001F                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     001F                     __end_of__initialization:
   223     001F  0183               	clrf	3
   224     0020  120A  118A  2996   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMMON
   227     0078                     __pbssCOMMON:
   228     0078                     _counter:
   229     0078                     	ds	1
   230                           
   231                           	psect	dataCOMMON
   232     0079                     __pdataCOMMON:
   233     0079                     _data:
   234     0079                     	ds	1
   235                           
   236                           	psect	bssBANK0
   237     0036                     __pbssBANK0:
   238     0036                     _arr:
   239     0036                     	ds	5
   240                           
   241                           	psect	cstackCOMMON
   242     0070                     __pcstackCOMMON:
   243     0070                     ?_LCD_Command:
   244     0070                     ?_LCD_Data:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ??_LCD_Data:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?_LCD_Initialize:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?_LCD_String:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     ?_UART_TX:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0070                     ?i1_LCD_Command:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     ??i1_LCD_Command:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0070                     ?_main:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           ; 2 bytes @ 0x0
   270     0070                     	ds	2
   271     0072                     LCD_Data@data:
   272     0072                     i1LCD_Command@cmd:	
   273                           ; 1 bytes @ 0x2
   274                           
   275                           
   276                           ; 1 bytes @ 0x2
   277     0072                     	ds	1
   278     0073                     ??_LCD_String:
   279     0073                     LCD_String@ptr:	
   280                           ; 1 bytes @ 0x3
   281                           
   282                           
   283                           ; 1 bytes @ 0x3
   284     0073                     	ds	1
   285     0074                     ??_UART_TX:
   286                           
   287                           ; 1 bytes @ 0x4
   288     0074                     	ds	4
   289                           
   290                           	psect	cstackBANK0
   291     0020                     __pcstackBANK0:
   292     0020                     ??_LCD_Command:
   293     0020                     ?___lldiv:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0020                     ___lldiv@divisor:	
   297                           ; 4 bytes @ 0x0
   298                           
   299                           
   300                           ; 4 bytes @ 0x0
   301     0020                     	ds	2
   302     0022                     LCD_Command@cmd:
   303                           
   304                           ; 1 bytes @ 0x2
   305     0022                     	ds	1
   306     0023                     ??_LCD_Initialize:
   307                           
   308                           ; 1 bytes @ 0x3
   309     0023                     	ds	1
   310     0024                     ___lldiv@dividend:
   311                           
   312                           ; 4 bytes @ 0x4
   313     0024                     	ds	4
   314     0028                     ??___lldiv:
   315                           
   316                           ; 1 bytes @ 0x8
   317     0028                     	ds	1
   318     0029                     ___lldiv@quotient:
   319                           
   320                           ; 4 bytes @ 0x9
   321     0029                     	ds	4
   322     002D                     ___lldiv@counter:
   323                           
   324                           ; 1 bytes @ 0xD
   325     002D                     	ds	1
   326     002E                     ?_UART_Initializer:
   327     002E                     UART_Initializer@baud:	
   328                           ; 1 bytes @ 0xE
   329                           
   330                           
   331                           ; 4 bytes @ 0xE
   332     002E                     	ds	4
   333     0032                     ??_UART_Initializer:
   334                           
   335                           ; 1 bytes @ 0x12
   336     0032                     	ds	4
   337     0036                     ??_main:
   338                           
   339                           	psect	maintext
   340     0196                     __pmaintext:	
   341                           ; 1 bytes @ 0x16
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 96 in file "newmain.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  2   64[None  ] int 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : B00/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0
   364 ;;      Totals:         0       0       0       0       0
   365 ;;Total ram usage:        0 bytes
   366 ;; Hardware stack levels required when called: 5
   367 ;; This function calls:
   368 ;;		_LCD_Initialize
   369 ;;		_UART_Initializer
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375     0196                     _main:	
   376                           ;psect for function _main
   377                           
   378     0196                     l890:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   381                           
   382                           
   383                           ;newmain.c: 97:     LCD_Initialize();
   384     0196  120A  118A  2173  120A  118A  	fcall	_LCD_Initialize
   385                           
   386                           ;newmain.c: 98:     UART_Initializer(9600);
   387     019B  3000               	movlw	0
   388     019C  1283               	bcf	3,5	;RP0=0, select bank0
   389     019D  1303               	bcf	3,6	;RP1=0, select bank0
   390     019E  00B1               	movwf	UART_Initializer@baud+3
   391     019F  3000               	movlw	0
   392     01A0  00B0               	movwf	UART_Initializer@baud+2
   393     01A1  3025               	movlw	37
   394     01A2  00AF               	movwf	UART_Initializer@baud+1
   395     01A3  3080               	movlw	128
   396     01A4  00AE               	movwf	UART_Initializer@baud
   397     01A5  120A  118A  208B  120A  118A  	fcall	_UART_Initializer
   398     01AA                     l65:	
   399                           ;newmain.c: 100:     while(1) ;
   400                           
   401     01AA                     l66:
   402     01AA  29AA               	goto	l65
   403     01AB  120A  118A  2810   	ljmp	start
   404     01AE                     __end_of_main:
   405                           
   406                           	psect	text1
   407     008B                     __ptext1:	
   408 ;; *************** function _UART_Initializer *****************
   409 ;; Defined at:
   410 ;;		line 60 in file "newmain.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  baud            4   14[BANK0 ] unsigned long 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       4       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       4       0       0       0
   427 ;;      Totals:         0       8       0       0       0
   428 ;;Total ram usage:        8 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 4
   431 ;; This function calls:
   432 ;;		___lldiv
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438     008B                     _UART_Initializer:	
   439                           ;psect for function _UART_Initializer
   440                           
   441     008B                     l846:	
   442                           ;incstack = 0
   443                           ; Regs used in _UART_Initializer: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   444                           
   445                           
   446                           ;newmain.c: 62:     SPBRG = (((8000000UL)/(16*baud))-1);
   447     008B  1283               	bcf	3,5	;RP0=0, select bank0
   448     008C  1303               	bcf	3,6	;RP1=0, select bank0
   449     008D  082E               	movf	UART_Initializer@baud,w
   450     008E  00B2               	movwf	??_UART_Initializer
   451     008F  082F               	movf	UART_Initializer@baud+1,w
   452     0090  00B3               	movwf	??_UART_Initializer+1
   453     0091  0830               	movf	UART_Initializer@baud+2,w
   454     0092  00B4               	movwf	??_UART_Initializer+2
   455     0093  0831               	movf	UART_Initializer@baud+3,w
   456     0094  00B5               	movwf	??_UART_Initializer+3
   457     0095  3004               	movlw	4
   458     0096                     u215:
   459     0096  1003               	clrc
   460     0097  0DB2               	rlf	??_UART_Initializer,f
   461     0098  0DB3               	rlf	??_UART_Initializer+1,f
   462     0099  0DB4               	rlf	??_UART_Initializer+2,f
   463     009A  0DB5               	rlf	??_UART_Initializer+3,f
   464     009B                     u210:
   465     009B  3EFF               	addlw	-1
   466     009C  1D03               	skipz
   467     009D  2896               	goto	u215
   468     009E  0835               	movf	??_UART_Initializer+3,w
   469     009F  00A3               	movwf	___lldiv@divisor+3
   470     00A0  0834               	movf	??_UART_Initializer+2,w
   471     00A1  00A2               	movwf	___lldiv@divisor+2
   472     00A2  0833               	movf	??_UART_Initializer+1,w
   473     00A3  00A1               	movwf	___lldiv@divisor+1
   474     00A4  0832               	movf	??_UART_Initializer,w
   475     00A5  00A0               	movwf	___lldiv@divisor
   476     00A6  3000               	movlw	0
   477     00A7  00A7               	movwf	___lldiv@dividend+3
   478     00A8  307A               	movlw	122
   479     00A9  00A6               	movwf	___lldiv@dividend+2
   480     00AA  3012               	movlw	18
   481     00AB  00A5               	movwf	___lldiv@dividend+1
   482     00AC  3000               	movlw	0
   483     00AD  00A4               	movwf	___lldiv@dividend
   484     00AE  120A  118A  2023  120A  118A  	fcall	___lldiv
   485     00B3  1283               	bcf	3,5	;RP0=0, select bank0
   486     00B4  1303               	bcf	3,6	;RP1=0, select bank0
   487     00B5  0820               	movf	?___lldiv,w
   488     00B6  3EFF               	addlw	255
   489     00B7  1683               	bsf	3,5	;RP0=1, select bank1
   490     00B8  1303               	bcf	3,6	;RP1=0, select bank1
   491     00B9  0099               	movwf	25	;volatile
   492     00BA                     l848:
   493                           
   494                           ;newmain.c: 63:     TXSTA = 0x24;
   495     00BA  3024               	movlw	36
   496     00BB  0098               	movwf	24	;volatile
   497     00BC                     l850:
   498                           
   499                           ;newmain.c: 64:     RCSTA = 0x90;
   500     00BC  3090               	movlw	144
   501     00BD  1283               	bcf	3,5	;RP0=0, select bank0
   502     00BE  1303               	bcf	3,6	;RP1=0, select bank0
   503     00BF  0098               	movwf	24	;volatile
   504     00C0                     l852:
   505                           
   506                           ;newmain.c: 65:     PIE1bits.RCIE = 1;
   507     00C0  1683               	bsf	3,5	;RP0=1, select bank1
   508     00C1  1303               	bcf	3,6	;RP1=0, select bank1
   509     00C2  168C               	bsf	12,5	;volatile
   510     00C3                     l854:
   511                           
   512                           ;newmain.c: 66:     INTCONbits.PEIE = 1;
   513     00C3  170B               	bsf	11,6	;volatile
   514     00C4                     l856:
   515                           
   516                           ;newmain.c: 67:     INTCONbits.GIE = 1;
   517     00C4  178B               	bsf	11,7	;volatile
   518     00C5                     l52:
   519     00C5  0008               	return
   520     00C6                     __end_of_UART_Initializer:
   521                           
   522                           	psect	text2
   523     0023                     __ptext2:	
   524 ;; *************** function ___lldiv *****************
   525 ;; Defined at:
   526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  divisor         4    0[BANK0 ] unsigned long 
   529 ;;  dividend        4    4[BANK0 ] unsigned long 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  quotient        4    9[BANK0 ] unsigned long 
   532 ;;  counter         1   13[BANK0 ] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  4    0[BANK0 ] unsigned long 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, btemp+1
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       8       0       0       0
   543 ;;      Locals:         0       5       0       0       0
   544 ;;      Temps:          0       1       0       0       0
   545 ;;      Totals:         0      14       0       0       0
   546 ;;Total ram usage:       14 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 3
   549 ;; This function calls:
   550 ;;		Nothing
   551 ;; This function is called by:
   552 ;;		_UART_Initializer
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556     0023                     ___lldiv:	
   557                           ;psect for function ___lldiv
   558                           
   559     0023                     l800:	
   560                           ;incstack = 0
   561                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
   562                           
   563     0023  3000               	movlw	0
   564     0024  1283               	bcf	3,5	;RP0=0, select bank0
   565     0025  1303               	bcf	3,6	;RP1=0, select bank0
   566     0026  00AC               	movwf	___lldiv@quotient+3
   567     0027  3000               	movlw	0
   568     0028  00AB               	movwf	___lldiv@quotient+2
   569     0029  3000               	movlw	0
   570     002A  00AA               	movwf	___lldiv@quotient+1
   571     002B  3000               	movlw	0
   572     002C  00A9               	movwf	___lldiv@quotient
   573     002D  0823               	movf	___lldiv@divisor+3,w
   574     002E  0422               	iorwf	___lldiv@divisor+2,w
   575     002F  0421               	iorwf	___lldiv@divisor+1,w
   576     0030  0420               	iorwf	___lldiv@divisor,w
   577     0031  1903               	skipnz
   578     0032  2834               	goto	u131
   579     0033  2835               	goto	u130
   580     0034                     u131:
   581     0034  2882               	goto	l822
   582     0035                     u130:
   583     0035                     l802:
   584     0035  01AD               	clrf	___lldiv@counter
   585     0036  0AAD               	incf	___lldiv@counter,f
   586     0037  2845               	goto	l808
   587     0038                     l804:
   588     0038  3001               	movlw	1
   589     0039  00A8               	movwf	??___lldiv
   590     003A                     u145:
   591     003A  1003               	clrc
   592     003B  0DA0               	rlf	___lldiv@divisor,f
   593     003C  0DA1               	rlf	___lldiv@divisor+1,f
   594     003D  0DA2               	rlf	___lldiv@divisor+2,f
   595     003E  0DA3               	rlf	___lldiv@divisor+3,f
   596     003F  0BA8               	decfsz	??___lldiv,f
   597     0040  283A               	goto	u145
   598     0041                     l806:
   599     0041  3001               	movlw	1
   600     0042  00FF               	movwf	btemp+1
   601     0043  087F               	movf	btemp+1,w
   602     0044  07AD               	addwf	___lldiv@counter,f
   603     0045                     l808:
   604     0045  1FA3               	btfss	___lldiv@divisor+3,7
   605     0046  2848               	goto	u151
   606     0047  2849               	goto	u150
   607     0048                     u151:
   608     0048  2838               	goto	l804
   609     0049                     u150:
   610     0049                     l810:
   611     0049  3001               	movlw	1
   612     004A  00A8               	movwf	??___lldiv
   613     004B                     u165:
   614     004B  1003               	clrc
   615     004C  0DA9               	rlf	___lldiv@quotient,f
   616     004D  0DAA               	rlf	___lldiv@quotient+1,f
   617     004E  0DAB               	rlf	___lldiv@quotient+2,f
   618     004F  0DAC               	rlf	___lldiv@quotient+3,f
   619     0050  0BA8               	decfsz	??___lldiv,f
   620     0051  284B               	goto	u165
   621     0052                     l812:
   622     0052  0823               	movf	___lldiv@divisor+3,w
   623     0053  0227               	subwf	___lldiv@dividend+3,w
   624     0054  1D03               	skipz
   625     0055  2860               	goto	u175
   626     0056  0822               	movf	___lldiv@divisor+2,w
   627     0057  0226               	subwf	___lldiv@dividend+2,w
   628     0058  1D03               	skipz
   629     0059  2860               	goto	u175
   630     005A  0821               	movf	___lldiv@divisor+1,w
   631     005B  0225               	subwf	___lldiv@dividend+1,w
   632     005C  1D03               	skipz
   633     005D  2860               	goto	u175
   634     005E  0820               	movf	___lldiv@divisor,w
   635     005F  0224               	subwf	___lldiv@dividend,w
   636     0060                     u175:
   637     0060  1C03               	skipc
   638     0061  2863               	goto	u171
   639     0062  2864               	goto	u170
   640     0063                     u171:
   641     0063  2873               	goto	l818
   642     0064                     u170:
   643     0064                     l814:
   644     0064  0820               	movf	___lldiv@divisor,w
   645     0065  02A4               	subwf	___lldiv@dividend,f
   646     0066  0821               	movf	___lldiv@divisor+1,w
   647     0067  1C03               	skipc
   648     0068  0F21               	incfsz	___lldiv@divisor+1,w
   649     0069  02A5               	subwf	___lldiv@dividend+1,f
   650     006A  0822               	movf	___lldiv@divisor+2,w
   651     006B  1C03               	skipc
   652     006C  0F22               	incfsz	___lldiv@divisor+2,w
   653     006D  02A6               	subwf	___lldiv@dividend+2,f
   654     006E  0823               	movf	___lldiv@divisor+3,w
   655     006F  1C03               	skipc
   656     0070  0F23               	incfsz	___lldiv@divisor+3,w
   657     0071  02A7               	subwf	___lldiv@dividend+3,f
   658     0072                     l816:
   659     0072  1429               	bsf	___lldiv@quotient,0
   660     0073                     l818:
   661     0073  3001               	movlw	1
   662     0074                     u185:
   663     0074  1003               	clrc
   664     0075  0CA3               	rrf	___lldiv@divisor+3,f
   665     0076  0CA2               	rrf	___lldiv@divisor+2,f
   666     0077  0CA1               	rrf	___lldiv@divisor+1,f
   667     0078  0CA0               	rrf	___lldiv@divisor,f
   668     0079  3EFF               	addlw	-1
   669     007A  1D03               	skipz
   670     007B  2874               	goto	u185
   671     007C                     l820:
   672     007C  3001               	movlw	1
   673     007D  02AD               	subwf	___lldiv@counter,f
   674     007E  1D03               	btfss	3,2
   675     007F  2881               	goto	u191
   676     0080  2882               	goto	u190
   677     0081                     u191:
   678     0081  2849               	goto	l810
   679     0082                     u190:
   680     0082                     l822:
   681     0082  082C               	movf	___lldiv@quotient+3,w
   682     0083  00A3               	movwf	?___lldiv+3
   683     0084  082B               	movf	___lldiv@quotient+2,w
   684     0085  00A2               	movwf	?___lldiv+2
   685     0086  082A               	movf	___lldiv@quotient+1,w
   686     0087  00A1               	movwf	?___lldiv+1
   687     0088  0829               	movf	___lldiv@quotient,w
   688     0089  00A0               	movwf	?___lldiv
   689     008A                     l190:
   690     008A  0008               	return
   691     008B                     __end_of___lldiv:
   692                           
   693                           	psect	text3
   694     0173                     __ptext3:	
   695 ;; *************** function _LCD_Initialize *****************
   696 ;; Defined at:
   697 ;;		line 41 in file "newmain.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 4
   718 ;; This function calls:
   719 ;;		_LCD_Command
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725     0173                     _LCD_Initialize:	
   726                           ;psect for function _LCD_Initialize
   727                           
   728     0173                     l826:	
   729                           ;incstack = 0
   730                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   731                           
   732                           
   733                           ;newmain.c: 43:     TRISD = 0x00;
   734     0173  1683               	bsf	3,5	;RP0=1, select bank1
   735     0174  1303               	bcf	3,6	;RP1=0, select bank1
   736     0175  0188               	clrf	8	;volatile
   737                           
   738                           ;newmain.c: 44:     TRISB = 0x00;
   739     0176  0186               	clrf	6	;volatile
   740     0177                     l828:
   741                           
   742                           ;newmain.c: 46:     LCD_Command(0x01);
   743     0177  3001               	movlw	1
   744     0178  120A  118A  20FD  120A  118A  	fcall	_LCD_Command
   745     017D                     l830:
   746                           
   747                           ;newmain.c: 47:     LCD_Command(0x02);
   748     017D  3002               	movlw	2
   749     017E  120A  118A  20FD  120A  118A  	fcall	_LCD_Command
   750     0183                     l832:
   751                           
   752                           ;newmain.c: 48:     LCD_Command(0x06);
   753     0183  3006               	movlw	6
   754     0184  120A  118A  20FD  120A  118A  	fcall	_LCD_Command
   755     0189                     l834:
   756                           
   757                           ;newmain.c: 49:     LCD_Command(0x38);
   758     0189  3038               	movlw	56
   759     018A  120A  118A  20FD  120A  118A  	fcall	_LCD_Command
   760     018F                     l836:
   761                           
   762                           ;newmain.c: 50:     LCD_Command(0x0C);
   763     018F  300C               	movlw	12
   764     0190  120A  118A  20FD  120A  118A  	fcall	_LCD_Command
   765     0195                     l43:
   766     0195  0008               	return
   767     0196                     __end_of_LCD_Initialize:
   768                           
   769                           	psect	text4
   770     00FD                     __ptext4:	
   771 ;; *************** function _LCD_Command *****************
   772 ;; Defined at:
   773 ;;		line 20 in file "newmain.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  cmd             1    wreg     unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  cmd             1    2[BANK0 ] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, btemp+1
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       1       0       0       0
   789 ;;      Temps:          0       2       0       0       0
   790 ;;      Totals:         0       3       0       0       0
   791 ;;Total ram usage:        3 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; Hardware stack levels required when called: 3
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_LCD_Initialize
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801     00FD                     _LCD_Command:	
   802                           ;psect for function _LCD_Command
   803                           
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+btemp+1]
   807                           ;LCD_Command@cmd stored from wreg
   808     00FD  1283               	bcf	3,5	;RP0=0, select bank0
   809     00FE  1303               	bcf	3,6	;RP1=0, select bank0
   810     00FF  00A2               	movwf	LCD_Command@cmd
   811     0100                     l776:
   812                           
   813                           ;newmain.c: 22:     PORTD = cmd;
   814     0100  0822               	movf	LCD_Command@cmd,w
   815     0101  0088               	movwf	8	;volatile
   816     0102                     l778:
   817                           
   818                           ;newmain.c: 23:     PORTB &= ~0x01;
   819     0102  30FE               	movlw	254
   820     0103  00FF               	movwf	btemp+1
   821     0104  087F               	movf	btemp+1,w
   822     0105  0586               	andwf	6,f	;volatile
   823     0106                     l780:
   824                           
   825                           ;newmain.c: 24:     PORTB &= ~0x02;
   826     0106  30FD               	movlw	253
   827     0107  00FF               	movwf	btemp+1
   828     0108  087F               	movf	btemp+1,w
   829     0109  0586               	andwf	6,f	;volatile
   830     010A                     l782:
   831                           
   832                           ;newmain.c: 25:     PORTB |= 0x04;
   833     010A  1506               	bsf	6,2	;volatile
   834                           
   835                           ;newmain.c: 26:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
   836     010B  3006               	movlw	6
   837     010C  1283               	bcf	3,5	;RP0=0, select bank0
   838     010D  1303               	bcf	3,6	;RP1=0, select bank0
   839     010E  00A1               	movwf	??_LCD_Command+1
   840     010F  302F               	movlw	47
   841     0110  00A0               	movwf	??_LCD_Command
   842     0111                     u257:
   843     0111  0BA0               	decfsz	??_LCD_Command,f
   844     0112  2911               	goto	u257
   845     0113  0BA1               	decfsz	??_LCD_Command+1,f
   846     0114  2911               	goto	u257
   847     0115  2916               	nop2
   848     0116                     l784:
   849                           
   850                           ;newmain.c: 27:     PORTB &= ~0x04;
   851     0116  30FB               	movlw	251
   852     0117  00FF               	movwf	btemp+1
   853     0118  087F               	movf	btemp+1,w
   854     0119  1283               	bcf	3,5	;RP0=0, select bank0
   855     011A  1303               	bcf	3,6	;RP1=0, select bank0
   856     011B  0586               	andwf	6,f	;volatile
   857     011C                     l786:
   858                           
   859                           ;newmain.c: 28:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
   860     011C  3006               	movlw	6
   861     011D  1283               	bcf	3,5	;RP0=0, select bank0
   862     011E  1303               	bcf	3,6	;RP1=0, select bank0
   863     011F  00A1               	movwf	??_LCD_Command+1
   864     0120  302F               	movlw	47
   865     0121  00A0               	movwf	??_LCD_Command
   866     0122                     u267:
   867     0122  0BA0               	decfsz	??_LCD_Command,f
   868     0123  2922               	goto	u267
   869     0124  0BA1               	decfsz	??_LCD_Command+1,f
   870     0125  2922               	goto	u267
   871     0126  2927               	nop2
   872     0127                     l37:
   873     0127  0008               	return
   874     0128                     __end_of_LCD_Command:
   875                           
   876                           	psect	text5
   877     00C6                     __ptext5:	
   878 ;; *************** function _UART_TX *****************
   879 ;; Defined at:
   880 ;;		line 71 in file "newmain.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          4       0       0       0       0
   897 ;;      Totals:         4       0       0       0       0
   898 ;;Total ram usage:        4 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; Hardware stack levels required when called: 2
   901 ;; This function calls:
   902 ;;		_LCD_String
   903 ;;		i1_LCD_Command
   904 ;; This function is called by:
   905 ;;		Interrupt level 1
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909     00C6                     _UART_TX:	
   910                           ;psect for function _UART_TX
   911                           
   912     00C6                     i1l870:
   913                           
   914                           ;newmain.c: 74:     if(RCIF == 1){
   915     00C6  1283               	bcf	3,5	;RP0=0, select bank0
   916     00C7  1303               	bcf	3,6	;RP1=0, select bank0
   917     00C8  1E8C               	btfss	12,5	;volatile
   918     00C9  28CB               	goto	u22_21
   919     00CA  28CC               	goto	u22_20
   920     00CB                     u22_21:
   921     00CB  28F2               	goto	i1l60
   922     00CC                     u22_20:
   923     00CC                     i1l872:
   924                           
   925                           ;newmain.c: 76:         if(OERR){
   926     00CC  1C98               	btfss	24,1	;volatile
   927     00CD  28CF               	goto	u23_21
   928     00CE  28D0               	goto	u23_20
   929     00CF                     u23_21:
   930     00CF  28D2               	goto	i1l876
   931     00D0                     u23_20:
   932     00D0                     i1l874:
   933                           
   934                           ;newmain.c: 78:             CREN = 0;
   935     00D0  1218               	bcf	24,4	;volatile
   936                           
   937                           ;newmain.c: 79:             CREN= 1;
   938     00D1  1618               	bsf	24,4	;volatile
   939     00D2                     i1l876:
   940                           
   941                           ;newmain.c: 82:         arr[counter] = RCREG;
   942     00D2  0878               	movf	_counter,w
   943     00D3  3E36               	addlw	(low (_arr| 0))& (0+255)
   944     00D4  0084               	movwf	4
   945     00D5  081A               	movf	26,w	;volatile
   946     00D6  1383               	bcf	3,7	;select IRP bank0
   947     00D7  0080               	movwf	0
   948     00D8                     i1l878:
   949                           
   950                           ;newmain.c: 83:         counter++;
   951     00D8  3001               	movlw	1
   952     00D9  00FF               	movwf	btemp+1
   953     00DA  087F               	movf	btemp+1,w
   954     00DB  07F8               	addwf	_counter,f	;volatile
   955     00DC                     i1l880:
   956                           
   957                           ;newmain.c: 84:         if(counter == 5){
   958     00DC  3005               	movlw	5
   959     00DD  0678               	xorwf	_counter,w	;volatile
   960     00DE  1D03               	btfss	3,2
   961     00DF  28E1               	goto	u24_21
   962     00E0  28E2               	goto	u24_20
   963     00E1                     u24_21:
   964     00E1  28E3               	goto	i1l884
   965     00E2                     u24_20:
   966     00E2                     i1l882:
   967                           
   968                           ;newmain.c: 86:             counter = 0;
   969     00E2  01F8               	clrf	_counter	;volatile
   970     00E3                     i1l884:
   971                           
   972                           ;newmain.c: 88:         LCD_Command(0x80);
   973     00E3  3080               	movlw	128
   974     00E4  120A  118A  2128  120A  118A  	fcall	i1_LCD_Command
   975     00E9                     i1l886:
   976                           
   977                           ;newmain.c: 89:         LCD_String(arr);
   978     00E9  3036               	movlw	(low (_arr| 0))& (0+255)
   979     00EA  120A  118A  21AE  120A  118A  	fcall	_LCD_String
   980     00EF                     i1l888:
   981                           
   982                           ;newmain.c: 90:         RCIF = 0;
   983     00EF  1283               	bcf	3,5	;RP0=0, select bank0
   984     00F0  1303               	bcf	3,6	;RP1=0, select bank0
   985     00F1  128C               	bcf	12,5	;volatile
   986     00F2                     i1l60:
   987     00F2  0877               	movf	??_UART_TX+3,w
   988     00F3  00FF               	movwf	btemp+1
   989     00F4  0876               	movf	??_UART_TX+2,w
   990     00F5  008A               	movwf	10
   991     00F6  0875               	movf	??_UART_TX+1,w
   992     00F7  0084               	movwf	4
   993     00F8  0E74               	swapf	??_UART_TX,w
   994     00F9  0083               	movwf	3
   995     00FA  0EFE               	swapf	btemp,f
   996     00FB  0E7E               	swapf	btemp,w
   997     00FC  0009               	retfie
   998     00FD                     __end_of_UART_TX:
   999                           
  1000                           	psect	intentry
  1001     0004                     __pintentry:	
  1002                           ;incstack = 0
  1003                           ; Regs used in _UART_TX: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1004                           
  1005     0004                     interrupt_function:
  1006     007E                     saved_w	set	btemp
  1007     0004  00FE               	movwf	btemp
  1008     0005  0E03               	swapf	3,w
  1009     0006  00F4               	movwf	??_UART_TX
  1010     0007  0804               	movf	4,w
  1011     0008  00F5               	movwf	??_UART_TX+1
  1012     0009  080A               	movf	10,w
  1013     000A  00F6               	movwf	??_UART_TX+2
  1014     000B  087F               	movf	btemp+1,w
  1015     000C  00F7               	movwf	??_UART_TX+3
  1016     000D  120A  118A  28C6   	ljmp	_UART_TX
  1017                           
  1018                           	psect	text6
  1019     0128                     __ptext6:	
  1020 ;; *************** function i1_LCD_Command *****************
  1021 ;; Defined at:
  1022 ;;		line 20 in file "newmain.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  cmd             1    wreg     unsigned char 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  cmd             1    2[COMMON] unsigned char 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, status,0, btemp+1
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       0       0       0       0
  1037 ;;      Locals:         1       0       0       0       0
  1038 ;;      Temps:          2       0       0       0       0
  1039 ;;      Totals:         3       0       0       0       0
  1040 ;;Total ram usage:        3 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_UART_TX
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049     0128                     i1_LCD_Command:	
  1050                           ;psect for function i1_LCD_Command
  1051                           
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in i1_LCD_Command: [wreg+status,2+status,0+btemp+1]
  1055                           ;i1LCD_Command@cmd stored from wreg
  1056     0128  00F2               	movwf	i1LCD_Command@cmd
  1057     0129                     i1l858:
  1058                           
  1059                           ;newmain.c: 22:     PORTD = cmd;
  1060     0129  0872               	movf	i1LCD_Command@cmd,w
  1061     012A  1283               	bcf	3,5	;RP0=0, select bank0
  1062     012B  1303               	bcf	3,6	;RP1=0, select bank0
  1063     012C  0088               	movwf	8	;volatile
  1064     012D                     i1l860:
  1065                           
  1066                           ;newmain.c: 23:     PORTB &= ~0x01;
  1067     012D  30FE               	movlw	254
  1068     012E  00FF               	movwf	btemp+1
  1069     012F  087F               	movf	btemp+1,w
  1070     0130  0586               	andwf	6,f	;volatile
  1071     0131                     i1l862:
  1072                           
  1073                           ;newmain.c: 24:     PORTB &= ~0x02;
  1074     0131  30FD               	movlw	253
  1075     0132  00FF               	movwf	btemp+1
  1076     0133  087F               	movf	btemp+1,w
  1077     0134  0586               	andwf	6,f	;volatile
  1078     0135                     i1l864:
  1079                           
  1080                           ;newmain.c: 25:     PORTB |= 0x04;
  1081     0135  1506               	bsf	6,2	;volatile
  1082                           
  1083                           ;newmain.c: 26:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1084     0136  3006               	movlw	6
  1085     0137  00F1               	movwf	??i1_LCD_Command+1
  1086     0138  3030               	movlw	48
  1087     0139  00F0               	movwf	??i1_LCD_Command
  1088     013A                     u27_27:
  1089     013A  0BF0               	decfsz	??i1_LCD_Command,f
  1090     013B  293A               	goto	u27_27
  1091     013C  0BF1               	decfsz	??i1_LCD_Command+1,f
  1092     013D  293A               	goto	u27_27
  1093     013E  0000               	nop
  1094     013F                     i1l866:
  1095                           
  1096                           ;newmain.c: 27:     PORTB &= ~0x04;
  1097     013F  30FB               	movlw	251
  1098     0140  00FF               	movwf	btemp+1
  1099     0141  087F               	movf	btemp+1,w
  1100     0142  1283               	bcf	3,5	;RP0=0, select bank0
  1101     0143  1303               	bcf	3,6	;RP1=0, select bank0
  1102     0144  0586               	andwf	6,f	;volatile
  1103     0145                     i1l868:
  1104                           
  1105                           ;newmain.c: 28:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1106     0145  3006               	movlw	6
  1107     0146  00F1               	movwf	??i1_LCD_Command+1
  1108     0147  3030               	movlw	48
  1109     0148  00F0               	movwf	??i1_LCD_Command
  1110     0149                     u28_27:
  1111     0149  0BF0               	decfsz	??i1_LCD_Command,f
  1112     014A  2949               	goto	u28_27
  1113     014B  0BF1               	decfsz	??i1_LCD_Command+1,f
  1114     014C  2949               	goto	u28_27
  1115     014D  0000               	nop
  1116     014E                     i1l37:
  1117     014E  0008               	return
  1118     014F                     __end_ofi1_LCD_Command:
  1119                           
  1120                           	psect	text7
  1121     01AE                     __ptext7:	
  1122 ;; *************** function _LCD_String *****************
  1123 ;; Defined at:
  1124 ;;		line 52 in file "newmain.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  ptr             1    wreg     PTR volatile unsigned ch
  1127 ;;		 -> arr(5), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  ptr             1    3[COMMON] PTR volatile unsigned ch
  1130 ;;		 -> arr(5), 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       0       0       0       0
  1141 ;;      Locals:         1       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0
  1143 ;;      Totals:         1       0       0       0       0
  1144 ;;Total ram usage:        1 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 1
  1147 ;; This function calls:
  1148 ;;		_LCD_Data
  1149 ;; This function is called by:
  1150 ;;		_UART_TX
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154     01AE                     _LCD_String:	
  1155                           ;psect for function _LCD_String
  1156                           
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1160                           ;LCD_String@ptr stored from wreg
  1161     01AE  00F3               	movwf	LCD_String@ptr
  1162     01AF                     i1l838:
  1163                           
  1164                           ;newmain.c: 54:     while(*ptr) {
  1165     01AF  29BC               	goto	i1l844
  1166     01B0                     i1l840:
  1167                           
  1168                           ;newmain.c: 55:         LCD_Data(*ptr++);
  1169     01B0  0873               	movf	LCD_String@ptr,w
  1170     01B1  0084               	movwf	4
  1171     01B2  0800               	movf	0,w
  1172     01B3  120A  118A  214F  120A  118A  	fcall	_LCD_Data
  1173     01B8                     i1l842:
  1174     01B8  3001               	movlw	1
  1175     01B9  00FF               	movwf	btemp+1
  1176     01BA  087F               	movf	btemp+1,w
  1177     01BB  07F3               	addwf	LCD_String@ptr,f
  1178     01BC                     i1l844:
  1179                           
  1180                           ;newmain.c: 54:     while(*ptr) {
  1181     01BC  0873               	movf	LCD_String@ptr,w
  1182     01BD  0084               	movwf	4
  1183     01BE  1383               	bcf	3,7	;select IRP bank0
  1184     01BF  0800               	movf	0,w
  1185     01C0  1D03               	btfss	3,2
  1186     01C1  29C3               	goto	u20_21
  1187     01C2  29C4               	goto	u20_20
  1188     01C3                     u20_21:
  1189     01C3  29B0               	goto	i1l840
  1190     01C4                     u20_20:
  1191     01C4                     i1l49:
  1192     01C4  0008               	return
  1193     01C5                     __end_of_LCD_String:
  1194                           
  1195                           	psect	text8
  1196     014F                     __ptext8:	
  1197 ;; *************** function _LCD_Data *****************
  1198 ;; Defined at:
  1199 ;;		line 30 in file "newmain.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  data            1    wreg     unsigned char 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  data            1    2[COMMON] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, btemp+1
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         1       0       0       0       0
  1215 ;;      Temps:          2       0       0       0       0
  1216 ;;      Totals:         3       0       0       0       0
  1217 ;;Total ram usage:        3 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_LCD_String
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     014F                     _LCD_Data:	
  1227                           ;psect for function _LCD_Data
  1228                           
  1229                           
  1230                           ;incstack = 0
  1231                           ; Regs used in _LCD_Data: [wreg+status,2+status,0+btemp+1]
  1232                           ;LCD_Data@data stored from wreg
  1233     014F  00F2               	movwf	LCD_Data@data
  1234     0150                     i1l788:
  1235                           
  1236                           ;newmain.c: 32:     PORTD = data;
  1237     0150  0872               	movf	LCD_Data@data,w
  1238     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1239     0152  1303               	bcf	3,6	;RP1=0, select bank0
  1240     0153  0088               	movwf	8	;volatile
  1241     0154                     i1l790:
  1242                           
  1243                           ;newmain.c: 33:     PORTB |= 0x01;
  1244     0154  1406               	bsf	6,0	;volatile
  1245     0155                     i1l792:
  1246                           
  1247                           ;newmain.c: 34:     PORTB &= ~0x02;
  1248     0155  30FD               	movlw	253
  1249     0156  00FF               	movwf	btemp+1
  1250     0157  087F               	movf	btemp+1,w
  1251     0158  0586               	andwf	6,f	;volatile
  1252     0159                     i1l794:
  1253                           
  1254                           ;newmain.c: 35:     PORTB |= 0x04;
  1255     0159  1506               	bsf	6,2	;volatile
  1256     015A                     i1l796:
  1257                           
  1258                           ;newmain.c: 36:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1259     015A  3006               	movlw	6
  1260     015B  00F1               	movwf	??_LCD_Data+1
  1261     015C  3030               	movlw	48
  1262     015D  00F0               	movwf	??_LCD_Data
  1263     015E                     u29_27:
  1264     015E  0BF0               	decfsz	??_LCD_Data,f
  1265     015F  295E               	goto	u29_27
  1266     0160  0BF1               	decfsz	??_LCD_Data+1,f
  1267     0161  295E               	goto	u29_27
  1268     0162  0000               	nop
  1269                           
  1270                           ;newmain.c: 37:     PORTB &= ~0x04;
  1271     0163  30FB               	movlw	251
  1272     0164  00FF               	movwf	btemp+1
  1273     0165  087F               	movf	btemp+1,w
  1274     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1275     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1276     0168  0586               	andwf	6,f	;volatile
  1277     0169                     i1l798:
  1278                           
  1279                           ;newmain.c: 38:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1280     0169  3006               	movlw	6
  1281     016A  00F1               	movwf	??_LCD_Data+1
  1282     016B  3030               	movlw	48
  1283     016C  00F0               	movwf	??_LCD_Data
  1284     016D                     u30_27:
  1285     016D  0BF0               	decfsz	??_LCD_Data,f
  1286     016E  296D               	goto	u30_27
  1287     016F  0BF1               	decfsz	??_LCD_Data+1,f
  1288     0170  296D               	goto	u30_27
  1289     0171  0000               	nop
  1290     0172                     i1l40:
  1291     0172  0008               	return
  1292     0173                     __end_of_LCD_Data:
  1293     007E                     btemp	set	126	;btemp
  1294     007E                     wtemp0	set	126
  1295                           
  1296                           	psect	idloc
  1297                           
  1298                           ;Config register IDLOC0 @ 0x2000
  1299                           ;	unspecified, using default values
  1300     2000                     	org	8192
  1301     2000  3FFF               	dw	16383
  1302                           
  1303                           ;Config register IDLOC1 @ 0x2001
  1304                           ;	unspecified, using default values
  1305     2001                     	org	8193
  1306     2001  3FFF               	dw	16383
  1307                           
  1308                           ;Config register IDLOC2 @ 0x2002
  1309                           ;	unspecified, using default values
  1310     2002                     	org	8194
  1311     2002  3FFF               	dw	16383
  1312                           
  1313                           ;Config register IDLOC3 @ 0x2003
  1314                           ;	unspecified, using default values
  1315     2003                     	org	8195
  1316     2003  3FFF               	dw	16383
  1317                           
  1318                           	psect	config
  1319                           
  1320                           ;Config register CONFIG @ 0x2007
  1321                           ;	Oscillator Selection bits
  1322                           ;	FOSC = HS, HS oscillator
  1323                           ;	Watchdog Timer Enable bit
  1324                           ;	WDTE = OFF, WDT disabled
  1325                           ;	Power-up Timer Enable bit
  1326                           ;	PWRTE = OFF, PWRT disabled
  1327                           ;	Brown-out Reset Enable bit
  1328                           ;	BOREN = OFF, BOR disabled
  1329                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1330                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1331                           ;	Data EEPROM Memory Code Protection bit
  1332                           ;	CPD = OFF, Data EEPROM code protection off
  1333                           ;	Flash Program Memory Write Enable bits
  1334                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1335                           ;	In-Circuit Debugger Mode bit
  1336                           ;	DEBUG = 0x1, unprogrammed default
  1337                           ;	Flash Program Memory Code Protection bit
  1338                           ;	CP = OFF, Code protection off
  1339     2007                     	org	8199
  1340     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     22      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_String@ptr	PTR volatile unsigned char  size(1) Largest target is 5
		 -> arr(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _UART_TX in COMMON

    _UART_TX->_LCD_String
    _LCD_String->_LCD_Data

Critical Paths under _main in BANK0

    _main->_UART_Initializer
    _UART_Initializer->___lldiv
    _LCD_Initialize->_LCD_Command

Critical Paths under _UART_TX in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_TX in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_TX in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_TX in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     434
                     _LCD_Initialize
                   _UART_Initializer
 ---------------------------------------------------------------------------------
 (1) _UART_Initializer                                     8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _UART_TX                                              4     4      0     122
                                              4 COMMON     4     4      0
                         _LCD_String
                      i1_LCD_Command
 ---------------------------------------------------------------------------------
 (4) i1_LCD_Command                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           1     1      0     100
                                              3 COMMON     1     1      0
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (5) _LCD_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Initialize
     _LCD_Command
   _UART_Initializer
     ___lldiv

 _UART_TX (ROOT)
   _LCD_String
     _LCD_Data
   i1_LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Nov 21 22:14:32 2023

          _LCD_Initialize 0173              ?_LCD_Command 0070                        l43 0195  
                      l52 00C5                        l37 0127                        l65 01AA  
                      l66 01AA               ?_LCD_String 0070                       l190 008A  
                     l800 0023                       l810 0049                       l802 0035  
                     l820 007C                       l812 0052                       l804 0038  
                     l830 017D                       l814 0064                       l806 0041  
                     l822 0082                       l832 0183                       l816 0072  
                     l808 0045                       l834 0189                       l826 0173  
                     l818 0073                       l850 00BC                       l780 0106  
                     l836 018F                       l828 0177                       l852 00C0  
                     l782 010A                       l854 00C3                       l846 008B  
                     l784 0116                       l776 0100                       l856 00C4  
                     l848 00BA                       l786 011C                       l778 0102  
                     l890 0196                       u130 0035                       u210 009B  
                     u131 0034                       u150 0049                       u151 0048  
                     u215 0096                       u145 003A                       u170 0064  
                     u171 0063                       u165 004B                       u190 0082  
                     u191 0081                       u175 0060                       u257 0111  
                     u185 0074                       u267 0122                       _arr 0036  
                     fsr0 0004                       indf 0000                      _CREN 00C4  
                    i1l40 0172                      i1l60 00F2                      _RCIF 0065  
                    i1l37 014E                      i1l49 01C4                      _OERR 00C1  
         __end_of_UART_TX 00FD                      _data 0079                      _main 0196  
                    btemp 007E                      start 0010    __end_of_LCD_Initialize 0196  
        __end_of_LCD_Data 0173              LCD_Data@data 0072                     ?_main 0070  
         __end_of___lldiv 008B                     i1l840 01B0                     i1l842 01B8  
                   i1l844 01BC                     i1l860 012D                     i1l790 0154  
                   i1l838 01AF                     i1l862 0131                     i1l870 00C6  
                   i1l792 0155                     i1l864 0135                     i1l880 00DC  
                   i1l872 00CC                     i1l794 0159                     i1l866 013F  
                   i1l858 0129                     i1l882 00E2                     i1l874 00D0  
                   i1l796 015A                     i1l788 0150                     i1l868 0145  
                   i1l884 00E3                     i1l876 00D2                     i1l798 0169  
                   i1l886 00E9                     i1l878 00D8                     i1l888 00EF  
                   _RCREG 001A                     _RCSTA 0018                     u20_20 01C4  
                   u20_21 01C3                     u22_20 00CC                     u22_21 00CB  
                   u30_27 016D                     u23_20 00D0                     u23_21 00CF  
                   u24_20 00E2                     u24_21 00E1                     _SPBRG 0099  
                   _PORTB 0006                     _PORTD 0008                     u27_27 013A  
                   u28_27 0149                     u29_27 015E                     _TRISB 0086  
                   _TRISD 0088                     _TXSTA 0098                     pclath 000A  
                   status 0003                     wtemp0 007E           ?_LCD_Initialize 0070  
         __initialization 0013              __end_of_main 01AE                    ??_main 0036  
       ?_UART_Initializer 002E        ??_UART_Initializer 0032                 ??_UART_TX 0074  
               ??___lldiv 0028              __pdataCOMMON 0079                    saved_w 007E  
               ?_LCD_Data 0070   __end_of__initialization 001F            __pcstackCOMMON 0070  
            ??_LCD_String 0073             i1_LCD_Command 0128                __pbssBANK0 0036  
              ??_LCD_Data 0070        __end_of_LCD_String 01C5                __pmaintext 0196  
              __pintentry 0004            ?i1_LCD_Command 0070                   _UART_TX 00C6  
        ??_LCD_Initialize 0023             LCD_String@ptr 0073                   ___lldiv 0023  
                 __ptext1 008B                   __ptext2 0023                   __ptext3 0173  
                 __ptext4 00FD                   __ptext5 00C6                   __ptext6 0128  
                 __ptext7 01AE                   __ptext8 014F                   _counter 0078  
    UART_Initializer@baud 002E      end_of_initialization 001F            LCD_Command@cmd 0022  
         ___lldiv@divisor 0020           ___lldiv@counter 002D           ??i1_LCD_Command 0070  
           ??_LCD_Command 0020             __pidataCOMMON 01C5       start_initialization 0013  
     __end_of_LCD_Command 0128               __pbssCOMMON 0078                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_UART_TX 0070          _UART_Initializer 008B  
                ?___lldiv 0020                  _LCD_Data 014F         interrupt_function 0004  
                _PIE1bits 008C               _LCD_Command 00FD          i1LCD_Command@cmd 0072  
   __end_ofi1_LCD_Command 014F                _LCD_String 01AE  __end_of_UART_Initializer 00C6  
              _INTCONbits 000B                  intlevel1 0000          ___lldiv@dividend 0024  
        ___lldiv@quotient 0029  
