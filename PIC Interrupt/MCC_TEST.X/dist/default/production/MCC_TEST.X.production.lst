

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jul 13 04:35:51 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16LF1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47     0000                     
    48                           ; Version 2.40
    49                           ; Generated 17/11/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16LF1829 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001E                     	;# 
   112     001F                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     0091                     	;# 
   117     0092                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     0111                     	;# 
   135     0112                     	;# 
   136     0113                     	;# 
   137     0114                     	;# 
   138     0115                     	;# 
   139     0116                     	;# 
   140     0117                     	;# 
   141     0118                     	;# 
   142     0119                     	;# 
   143     011A                     	;# 
   144     011B                     	;# 
   145     011D                     	;# 
   146     011E                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     018E                     	;# 
   150     0191                     	;# 
   151     0191                     	;# 
   152     0192                     	;# 
   153     0193                     	;# 
   154     0193                     	;# 
   155     0193                     	;# 
   156     0194                     	;# 
   157     0195                     	;# 
   158     0196                     	;# 
   159     0199                     	;# 
   160     019A                     	;# 
   161     019B                     	;# 
   162     019B                     	;# 
   163     019B                     	;# 
   164     019B                     	;# 
   165     019C                     	;# 
   166     019C                     	;# 
   167     019D                     	;# 
   168     019E                     	;# 
   169     019F                     	;# 
   170     020C                     	;# 
   171     020D                     	;# 
   172     020E                     	;# 
   173     0211                     	;# 
   174     0211                     	;# 
   175     0212                     	;# 
   176     0212                     	;# 
   177     0213                     	;# 
   178     0213                     	;# 
   179     0214                     	;# 
   180     0214                     	;# 
   181     0215                     	;# 
   182     0215                     	;# 
   183     0215                     	;# 
   184     0216                     	;# 
   185     0216                     	;# 
   186     0217                     	;# 
   187     0217                     	;# 
   188     0219                     	;# 
   189     021A                     	;# 
   190     021B                     	;# 
   191     021C                     	;# 
   192     021D                     	;# 
   193     021E                     	;# 
   194     021F                     	;# 
   195     0291                     	;# 
   196     0291                     	;# 
   197     0292                     	;# 
   198     0293                     	;# 
   199     0294                     	;# 
   200     0295                     	;# 
   201     0295                     	;# 
   202     0296                     	;# 
   203     0298                     	;# 
   204     0298                     	;# 
   205     0299                     	;# 
   206     029A                     	;# 
   207     029B                     	;# 
   208     029C                     	;# 
   209     029D                     	;# 
   210     029E                     	;# 
   211     0311                     	;# 
   212     0311                     	;# 
   213     0312                     	;# 
   214     0313                     	;# 
   215     0318                     	;# 
   216     0318                     	;# 
   217     0319                     	;# 
   218     031A                     	;# 
   219     038C                     	;# 
   220     038D                     	;# 
   221     038E                     	;# 
   222     0391                     	;# 
   223     0392                     	;# 
   224     0393                     	;# 
   225     0394                     	;# 
   226     0395                     	;# 
   227     0396                     	;# 
   228     039A                     	;# 
   229     039C                     	;# 
   230     039D                     	;# 
   231     039E                     	;# 
   232     039F                     	;# 
   233     0415                     	;# 
   234     0416                     	;# 
   235     0417                     	;# 
   236     041C                     	;# 
   237     041D                     	;# 
   238     041E                     	;# 
   239     0FE4                     	;# 
   240     0FE5                     	;# 
   241     0FE6                     	;# 
   242     0FE7                     	;# 
   243     0FE8                     	;# 
   244     0FE9                     	;# 
   245     0FEA                     	;# 
   246     0FEB                     	;# 
   247     0FED                     	;# 
   248     0FEE                     	;# 
   249     0FEF                     	;# 
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     0008                     	;# 
   259     0009                     	;# 
   260     000A                     	;# 
   261     000B                     	;# 
   262     000C                     	;# 
   263     000D                     	;# 
   264     000E                     	;# 
   265     0011                     	;# 
   266     0012                     	;# 
   267     0013                     	;# 
   268     0014                     	;# 
   269     0015                     	;# 
   270     0016                     	;# 
   271     0016                     	;# 
   272     0017                     	;# 
   273     0018                     	;# 
   274     0019                     	;# 
   275     001A                     	;# 
   276     001B                     	;# 
   277     001C                     	;# 
   278     001E                     	;# 
   279     001F                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     0111                     	;# 
   302     0112                     	;# 
   303     0113                     	;# 
   304     0114                     	;# 
   305     0115                     	;# 
   306     0116                     	;# 
   307     0117                     	;# 
   308     0118                     	;# 
   309     0119                     	;# 
   310     011A                     	;# 
   311     011B                     	;# 
   312     011D                     	;# 
   313     011E                     	;# 
   314     018C                     	;# 
   315     018D                     	;# 
   316     018E                     	;# 
   317     0191                     	;# 
   318     0191                     	;# 
   319     0192                     	;# 
   320     0193                     	;# 
   321     0193                     	;# 
   322     0193                     	;# 
   323     0194                     	;# 
   324     0195                     	;# 
   325     0196                     	;# 
   326     0199                     	;# 
   327     019A                     	;# 
   328     019B                     	;# 
   329     019B                     	;# 
   330     019B                     	;# 
   331     019B                     	;# 
   332     019C                     	;# 
   333     019C                     	;# 
   334     019D                     	;# 
   335     019E                     	;# 
   336     019F                     	;# 
   337     020C                     	;# 
   338     020D                     	;# 
   339     020E                     	;# 
   340     0211                     	;# 
   341     0211                     	;# 
   342     0212                     	;# 
   343     0212                     	;# 
   344     0213                     	;# 
   345     0213                     	;# 
   346     0214                     	;# 
   347     0214                     	;# 
   348     0215                     	;# 
   349     0215                     	;# 
   350     0215                     	;# 
   351     0216                     	;# 
   352     0216                     	;# 
   353     0217                     	;# 
   354     0217                     	;# 
   355     0219                     	;# 
   356     021A                     	;# 
   357     021B                     	;# 
   358     021C                     	;# 
   359     021D                     	;# 
   360     021E                     	;# 
   361     021F                     	;# 
   362     0291                     	;# 
   363     0291                     	;# 
   364     0292                     	;# 
   365     0293                     	;# 
   366     0294                     	;# 
   367     0295                     	;# 
   368     0295                     	;# 
   369     0296                     	;# 
   370     0298                     	;# 
   371     0298                     	;# 
   372     0299                     	;# 
   373     029A                     	;# 
   374     029B                     	;# 
   375     029C                     	;# 
   376     029D                     	;# 
   377     029E                     	;# 
   378     0311                     	;# 
   379     0311                     	;# 
   380     0312                     	;# 
   381     0313                     	;# 
   382     0318                     	;# 
   383     0318                     	;# 
   384     0319                     	;# 
   385     031A                     	;# 
   386     038C                     	;# 
   387     038D                     	;# 
   388     038E                     	;# 
   389     0391                     	;# 
   390     0392                     	;# 
   391     0393                     	;# 
   392     0394                     	;# 
   393     0395                     	;# 
   394     0396                     	;# 
   395     039A                     	;# 
   396     039C                     	;# 
   397     039D                     	;# 
   398     039E                     	;# 
   399     039F                     	;# 
   400     0415                     	;# 
   401     0416                     	;# 
   402     0417                     	;# 
   403     041C                     	;# 
   404     041D                     	;# 
   405     041E                     	;# 
   406     0FE4                     	;# 
   407     0FE5                     	;# 
   408     0FE6                     	;# 
   409     0FE7                     	;# 
   410     0FE8                     	;# 
   411     0FE9                     	;# 
   412     0FEA                     	;# 
   413     0FEB                     	;# 
   414     0FED                     	;# 
   415     0FEE                     	;# 
   416     0FEF                     	;# 
   417     0000                     	;# 
   418     0001                     	;# 
   419     0002                     	;# 
   420     0003                     	;# 
   421     0004                     	;# 
   422     0005                     	;# 
   423     0006                     	;# 
   424     0007                     	;# 
   425     0008                     	;# 
   426     0009                     	;# 
   427     000A                     	;# 
   428     000B                     	;# 
   429     000C                     	;# 
   430     000D                     	;# 
   431     000E                     	;# 
   432     0011                     	;# 
   433     0012                     	;# 
   434     0013                     	;# 
   435     0014                     	;# 
   436     0015                     	;# 
   437     0016                     	;# 
   438     0016                     	;# 
   439     0017                     	;# 
   440     0018                     	;# 
   441     0019                     	;# 
   442     001A                     	;# 
   443     001B                     	;# 
   444     001C                     	;# 
   445     001E                     	;# 
   446     001F                     	;# 
   447     008C                     	;# 
   448     008D                     	;# 
   449     008E                     	;# 
   450     0091                     	;# 
   451     0092                     	;# 
   452     0093                     	;# 
   453     0094                     	;# 
   454     0095                     	;# 
   455     0096                     	;# 
   456     0097                     	;# 
   457     0098                     	;# 
   458     0099                     	;# 
   459     009A                     	;# 
   460     009B                     	;# 
   461     009B                     	;# 
   462     009C                     	;# 
   463     009D                     	;# 
   464     009E                     	;# 
   465     010C                     	;# 
   466     010D                     	;# 
   467     010E                     	;# 
   468     0111                     	;# 
   469     0112                     	;# 
   470     0113                     	;# 
   471     0114                     	;# 
   472     0115                     	;# 
   473     0116                     	;# 
   474     0117                     	;# 
   475     0118                     	;# 
   476     0119                     	;# 
   477     011A                     	;# 
   478     011B                     	;# 
   479     011D                     	;# 
   480     011E                     	;# 
   481     018C                     	;# 
   482     018D                     	;# 
   483     018E                     	;# 
   484     0191                     	;# 
   485     0191                     	;# 
   486     0192                     	;# 
   487     0193                     	;# 
   488     0193                     	;# 
   489     0193                     	;# 
   490     0194                     	;# 
   491     0195                     	;# 
   492     0196                     	;# 
   493     0199                     	;# 
   494     019A                     	;# 
   495     019B                     	;# 
   496     019B                     	;# 
   497     019B                     	;# 
   498     019B                     	;# 
   499     019C                     	;# 
   500     019C                     	;# 
   501     019D                     	;# 
   502     019E                     	;# 
   503     019F                     	;# 
   504     020C                     	;# 
   505     020D                     	;# 
   506     020E                     	;# 
   507     0211                     	;# 
   508     0211                     	;# 
   509     0212                     	;# 
   510     0212                     	;# 
   511     0213                     	;# 
   512     0213                     	;# 
   513     0214                     	;# 
   514     0214                     	;# 
   515     0215                     	;# 
   516     0215                     	;# 
   517     0215                     	;# 
   518     0216                     	;# 
   519     0216                     	;# 
   520     0217                     	;# 
   521     0217                     	;# 
   522     0219                     	;# 
   523     021A                     	;# 
   524     021B                     	;# 
   525     021C                     	;# 
   526     021D                     	;# 
   527     021E                     	;# 
   528     021F                     	;# 
   529     0291                     	;# 
   530     0291                     	;# 
   531     0292                     	;# 
   532     0293                     	;# 
   533     0294                     	;# 
   534     0295                     	;# 
   535     0295                     	;# 
   536     0296                     	;# 
   537     0298                     	;# 
   538     0298                     	;# 
   539     0299                     	;# 
   540     029A                     	;# 
   541     029B                     	;# 
   542     029C                     	;# 
   543     029D                     	;# 
   544     029E                     	;# 
   545     0311                     	;# 
   546     0311                     	;# 
   547     0312                     	;# 
   548     0313                     	;# 
   549     0318                     	;# 
   550     0318                     	;# 
   551     0319                     	;# 
   552     031A                     	;# 
   553     038C                     	;# 
   554     038D                     	;# 
   555     038E                     	;# 
   556     0391                     	;# 
   557     0392                     	;# 
   558     0393                     	;# 
   559     0394                     	;# 
   560     0395                     	;# 
   561     0396                     	;# 
   562     039A                     	;# 
   563     039C                     	;# 
   564     039D                     	;# 
   565     039E                     	;# 
   566     039F                     	;# 
   567     0415                     	;# 
   568     0416                     	;# 
   569     0417                     	;# 
   570     041C                     	;# 
   571     041D                     	;# 
   572     041E                     	;# 
   573     0FE4                     	;# 
   574     0FE5                     	;# 
   575     0FE6                     	;# 
   576     0FE7                     	;# 
   577     0FE8                     	;# 
   578     0FE9                     	;# 
   579     0FEA                     	;# 
   580     0FEB                     	;# 
   581     0FED                     	;# 
   582     0FEE                     	;# 
   583     0FEF                     	;# 
   584     0000                     	;# 
   585     0001                     	;# 
   586     0002                     	;# 
   587     0003                     	;# 
   588     0004                     	;# 
   589     0005                     	;# 
   590     0006                     	;# 
   591     0007                     	;# 
   592     0008                     	;# 
   593     0009                     	;# 
   594     000A                     	;# 
   595     000B                     	;# 
   596     000C                     	;# 
   597     000D                     	;# 
   598     000E                     	;# 
   599     0011                     	;# 
   600     0012                     	;# 
   601     0013                     	;# 
   602     0014                     	;# 
   603     0015                     	;# 
   604     0016                     	;# 
   605     0016                     	;# 
   606     0017                     	;# 
   607     0018                     	;# 
   608     0019                     	;# 
   609     001A                     	;# 
   610     001B                     	;# 
   611     001C                     	;# 
   612     001E                     	;# 
   613     001F                     	;# 
   614     008C                     	;# 
   615     008D                     	;# 
   616     008E                     	;# 
   617     0091                     	;# 
   618     0092                     	;# 
   619     0093                     	;# 
   620     0094                     	;# 
   621     0095                     	;# 
   622     0096                     	;# 
   623     0097                     	;# 
   624     0098                     	;# 
   625     0099                     	;# 
   626     009A                     	;# 
   627     009B                     	;# 
   628     009B                     	;# 
   629     009C                     	;# 
   630     009D                     	;# 
   631     009E                     	;# 
   632     010C                     	;# 
   633     010D                     	;# 
   634     010E                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     018E                     	;# 
   651     0191                     	;# 
   652     0191                     	;# 
   653     0192                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0193                     	;# 
   657     0194                     	;# 
   658     0195                     	;# 
   659     0196                     	;# 
   660     0199                     	;# 
   661     019A                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019B                     	;# 
   666     019C                     	;# 
   667     019C                     	;# 
   668     019D                     	;# 
   669     019E                     	;# 
   670     019F                     	;# 
   671     020C                     	;# 
   672     020D                     	;# 
   673     020E                     	;# 
   674     0211                     	;# 
   675     0211                     	;# 
   676     0212                     	;# 
   677     0212                     	;# 
   678     0213                     	;# 
   679     0213                     	;# 
   680     0214                     	;# 
   681     0214                     	;# 
   682     0215                     	;# 
   683     0215                     	;# 
   684     0215                     	;# 
   685     0216                     	;# 
   686     0216                     	;# 
   687     0217                     	;# 
   688     0217                     	;# 
   689     0219                     	;# 
   690     021A                     	;# 
   691     021B                     	;# 
   692     021C                     	;# 
   693     021D                     	;# 
   694     021E                     	;# 
   695     021F                     	;# 
   696     0291                     	;# 
   697     0291                     	;# 
   698     0292                     	;# 
   699     0293                     	;# 
   700     0294                     	;# 
   701     0295                     	;# 
   702     0295                     	;# 
   703     0296                     	;# 
   704     0298                     	;# 
   705     0298                     	;# 
   706     0299                     	;# 
   707     029A                     	;# 
   708     029B                     	;# 
   709     029C                     	;# 
   710     029D                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     038C                     	;# 
   721     038D                     	;# 
   722     038E                     	;# 
   723     0391                     	;# 
   724     0392                     	;# 
   725     0393                     	;# 
   726     0394                     	;# 
   727     0395                     	;# 
   728     0396                     	;# 
   729     039A                     	;# 
   730     039C                     	;# 
   731     039D                     	;# 
   732     039E                     	;# 
   733     039F                     	;# 
   734     0415                     	;# 
   735     0416                     	;# 
   736     0417                     	;# 
   737     041C                     	;# 
   738     041D                     	;# 
   739     041E                     	;# 
   740     0FE4                     	;# 
   741     0FE5                     	;# 
   742     0FE6                     	;# 
   743     0FE7                     	;# 
   744     0FE8                     	;# 
   745     0FE9                     	;# 
   746     0FEA                     	;# 
   747     0FEB                     	;# 
   748     0FED                     	;# 
   749     0FEE                     	;# 
   750     0FEF                     	;# 
   751     0000                     	;# 
   752     0001                     	;# 
   753     0002                     	;# 
   754     0003                     	;# 
   755     0004                     	;# 
   756     0005                     	;# 
   757     0006                     	;# 
   758     0007                     	;# 
   759     0008                     	;# 
   760     0009                     	;# 
   761     000A                     	;# 
   762     000B                     	;# 
   763     000C                     	;# 
   764     000D                     	;# 
   765     000E                     	;# 
   766     0011                     	;# 
   767     0012                     	;# 
   768     0013                     	;# 
   769     0014                     	;# 
   770     0015                     	;# 
   771     0016                     	;# 
   772     0016                     	;# 
   773     0017                     	;# 
   774     0018                     	;# 
   775     0019                     	;# 
   776     001A                     	;# 
   777     001B                     	;# 
   778     001C                     	;# 
   779     001E                     	;# 
   780     001F                     	;# 
   781     008C                     	;# 
   782     008D                     	;# 
   783     008E                     	;# 
   784     0091                     	;# 
   785     0092                     	;# 
   786     0093                     	;# 
   787     0094                     	;# 
   788     0095                     	;# 
   789     0096                     	;# 
   790     0097                     	;# 
   791     0098                     	;# 
   792     0099                     	;# 
   793     009A                     	;# 
   794     009B                     	;# 
   795     009B                     	;# 
   796     009C                     	;# 
   797     009D                     	;# 
   798     009E                     	;# 
   799     010C                     	;# 
   800     010D                     	;# 
   801     010E                     	;# 
   802     0111                     	;# 
   803     0112                     	;# 
   804     0113                     	;# 
   805     0114                     	;# 
   806     0115                     	;# 
   807     0116                     	;# 
   808     0117                     	;# 
   809     0118                     	;# 
   810     0119                     	;# 
   811     011A                     	;# 
   812     011B                     	;# 
   813     011D                     	;# 
   814     011E                     	;# 
   815     018C                     	;# 
   816     018D                     	;# 
   817     018E                     	;# 
   818     0191                     	;# 
   819     0191                     	;# 
   820     0192                     	;# 
   821     0193                     	;# 
   822     0193                     	;# 
   823     0193                     	;# 
   824     0194                     	;# 
   825     0195                     	;# 
   826     0196                     	;# 
   827     0199                     	;# 
   828     019A                     	;# 
   829     019B                     	;# 
   830     019B                     	;# 
   831     019B                     	;# 
   832     019B                     	;# 
   833     019C                     	;# 
   834     019C                     	;# 
   835     019D                     	;# 
   836     019E                     	;# 
   837     019F                     	;# 
   838     020C                     	;# 
   839     020D                     	;# 
   840     020E                     	;# 
   841     0211                     	;# 
   842     0211                     	;# 
   843     0212                     	;# 
   844     0212                     	;# 
   845     0213                     	;# 
   846     0213                     	;# 
   847     0214                     	;# 
   848     0214                     	;# 
   849     0215                     	;# 
   850     0215                     	;# 
   851     0215                     	;# 
   852     0216                     	;# 
   853     0216                     	;# 
   854     0217                     	;# 
   855     0217                     	;# 
   856     0219                     	;# 
   857     021A                     	;# 
   858     021B                     	;# 
   859     021C                     	;# 
   860     021D                     	;# 
   861     021E                     	;# 
   862     021F                     	;# 
   863     0291                     	;# 
   864     0291                     	;# 
   865     0292                     	;# 
   866     0293                     	;# 
   867     0294                     	;# 
   868     0295                     	;# 
   869     0295                     	;# 
   870     0296                     	;# 
   871     0298                     	;# 
   872     0298                     	;# 
   873     0299                     	;# 
   874     029A                     	;# 
   875     029B                     	;# 
   876     029C                     	;# 
   877     029D                     	;# 
   878     029E                     	;# 
   879     0311                     	;# 
   880     0311                     	;# 
   881     0312                     	;# 
   882     0313                     	;# 
   883     0318                     	;# 
   884     0318                     	;# 
   885     0319                     	;# 
   886     031A                     	;# 
   887     038C                     	;# 
   888     038D                     	;# 
   889     038E                     	;# 
   890     0391                     	;# 
   891     0392                     	;# 
   892     0393                     	;# 
   893     0394                     	;# 
   894     0395                     	;# 
   895     0396                     	;# 
   896     039A                     	;# 
   897     039C                     	;# 
   898     039D                     	;# 
   899     039E                     	;# 
   900     039F                     	;# 
   901     0415                     	;# 
   902     0416                     	;# 
   903     0417                     	;# 
   904     041C                     	;# 
   905     041D                     	;# 
   906     041E                     	;# 
   907     0FE4                     	;# 
   908     0FE5                     	;# 
   909     0FE6                     	;# 
   910     0FE7                     	;# 
   911     0FE8                     	;# 
   912     0FE9                     	;# 
   913     0FEA                     	;# 
   914     0FEB                     	;# 
   915     0FED                     	;# 
   916     0FEE                     	;# 
   917     0FEF                     	;# 
   918     0000                     	;# 
   919     0001                     	;# 
   920     0002                     	;# 
   921     0003                     	;# 
   922     0004                     	;# 
   923     0005                     	;# 
   924     0006                     	;# 
   925     0007                     	;# 
   926     0008                     	;# 
   927     0009                     	;# 
   928     000A                     	;# 
   929     000B                     	;# 
   930     000C                     	;# 
   931     000D                     	;# 
   932     000E                     	;# 
   933     0011                     	;# 
   934     0012                     	;# 
   935     0013                     	;# 
   936     0014                     	;# 
   937     0015                     	;# 
   938     0016                     	;# 
   939     0016                     	;# 
   940     0017                     	;# 
   941     0018                     	;# 
   942     0019                     	;# 
   943     001A                     	;# 
   944     001B                     	;# 
   945     001C                     	;# 
   946     001E                     	;# 
   947     001F                     	;# 
   948     008C                     	;# 
   949     008D                     	;# 
   950     008E                     	;# 
   951     0091                     	;# 
   952     0092                     	;# 
   953     0093                     	;# 
   954     0094                     	;# 
   955     0095                     	;# 
   956     0096                     	;# 
   957     0097                     	;# 
   958     0098                     	;# 
   959     0099                     	;# 
   960     009A                     	;# 
   961     009B                     	;# 
   962     009B                     	;# 
   963     009C                     	;# 
   964     009D                     	;# 
   965     009E                     	;# 
   966     010C                     	;# 
   967     010D                     	;# 
   968     010E                     	;# 
   969     0111                     	;# 
   970     0112                     	;# 
   971     0113                     	;# 
   972     0114                     	;# 
   973     0115                     	;# 
   974     0116                     	;# 
   975     0117                     	;# 
   976     0118                     	;# 
   977     0119                     	;# 
   978     011A                     	;# 
   979     011B                     	;# 
   980     011D                     	;# 
   981     011E                     	;# 
   982     018C                     	;# 
   983     018D                     	;# 
   984     018E                     	;# 
   985     0191                     	;# 
   986     0191                     	;# 
   987     0192                     	;# 
   988     0193                     	;# 
   989     0193                     	;# 
   990     0193                     	;# 
   991     0194                     	;# 
   992     0195                     	;# 
   993     0196                     	;# 
   994     0199                     	;# 
   995     019A                     	;# 
   996     019B                     	;# 
   997     019B                     	;# 
   998     019B                     	;# 
   999     019B                     	;# 
  1000     019C                     	;# 
  1001     019C                     	;# 
  1002     019D                     	;# 
  1003     019E                     	;# 
  1004     019F                     	;# 
  1005     020C                     	;# 
  1006     020D                     	;# 
  1007     020E                     	;# 
  1008     0211                     	;# 
  1009     0211                     	;# 
  1010     0212                     	;# 
  1011     0212                     	;# 
  1012     0213                     	;# 
  1013     0213                     	;# 
  1014     0214                     	;# 
  1015     0214                     	;# 
  1016     0215                     	;# 
  1017     0215                     	;# 
  1018     0215                     	;# 
  1019     0216                     	;# 
  1020     0216                     	;# 
  1021     0217                     	;# 
  1022     0217                     	;# 
  1023     0219                     	;# 
  1024     021A                     	;# 
  1025     021B                     	;# 
  1026     021C                     	;# 
  1027     021D                     	;# 
  1028     021E                     	;# 
  1029     021F                     	;# 
  1030     0291                     	;# 
  1031     0291                     	;# 
  1032     0292                     	;# 
  1033     0293                     	;# 
  1034     0294                     	;# 
  1035     0295                     	;# 
  1036     0295                     	;# 
  1037     0296                     	;# 
  1038     0298                     	;# 
  1039     0298                     	;# 
  1040     0299                     	;# 
  1041     029A                     	;# 
  1042     029B                     	;# 
  1043     029C                     	;# 
  1044     029D                     	;# 
  1045     029E                     	;# 
  1046     0311                     	;# 
  1047     0311                     	;# 
  1048     0312                     	;# 
  1049     0313                     	;# 
  1050     0318                     	;# 
  1051     0318                     	;# 
  1052     0319                     	;# 
  1053     031A                     	;# 
  1054     038C                     	;# 
  1055     038D                     	;# 
  1056     038E                     	;# 
  1057     0391                     	;# 
  1058     0392                     	;# 
  1059     0393                     	;# 
  1060     0394                     	;# 
  1061     0395                     	;# 
  1062     0396                     	;# 
  1063     039A                     	;# 
  1064     039C                     	;# 
  1065     039D                     	;# 
  1066     039E                     	;# 
  1067     039F                     	;# 
  1068     0415                     	;# 
  1069     0416                     	;# 
  1070     0417                     	;# 
  1071     041C                     	;# 
  1072     041D                     	;# 
  1073     041E                     	;# 
  1074     0FE4                     	;# 
  1075     0FE5                     	;# 
  1076     0FE6                     	;# 
  1077     0FE7                     	;# 
  1078     0FE8                     	;# 
  1079     0FE9                     	;# 
  1080     0FEA                     	;# 
  1081     0FEB                     	;# 
  1082     0FED                     	;# 
  1083     0FEE                     	;# 
  1084     0FEF                     	;# 
  1085     0000                     	;# 
  1086     0001                     	;# 
  1087     0002                     	;# 
  1088     0003                     	;# 
  1089     0004                     	;# 
  1090     0005                     	;# 
  1091     0006                     	;# 
  1092     0007                     	;# 
  1093     0008                     	;# 
  1094     0009                     	;# 
  1095     000A                     	;# 
  1096     000B                     	;# 
  1097     000C                     	;# 
  1098     000D                     	;# 
  1099     000E                     	;# 
  1100     0011                     	;# 
  1101     0012                     	;# 
  1102     0013                     	;# 
  1103     0014                     	;# 
  1104     0015                     	;# 
  1105     0016                     	;# 
  1106     0016                     	;# 
  1107     0017                     	;# 
  1108     0018                     	;# 
  1109     0019                     	;# 
  1110     001A                     	;# 
  1111     001B                     	;# 
  1112     001C                     	;# 
  1113     001E                     	;# 
  1114     001F                     	;# 
  1115     008C                     	;# 
  1116     008D                     	;# 
  1117     008E                     	;# 
  1118     0091                     	;# 
  1119     0092                     	;# 
  1120     0093                     	;# 
  1121     0094                     	;# 
  1122     0095                     	;# 
  1123     0096                     	;# 
  1124     0097                     	;# 
  1125     0098                     	;# 
  1126     0099                     	;# 
  1127     009A                     	;# 
  1128     009B                     	;# 
  1129     009B                     	;# 
  1130     009C                     	;# 
  1131     009D                     	;# 
  1132     009E                     	;# 
  1133     010C                     	;# 
  1134     010D                     	;# 
  1135     010E                     	;# 
  1136     0111                     	;# 
  1137     0112                     	;# 
  1138     0113                     	;# 
  1139     0114                     	;# 
  1140     0115                     	;# 
  1141     0116                     	;# 
  1142     0117                     	;# 
  1143     0118                     	;# 
  1144     0119                     	;# 
  1145     011A                     	;# 
  1146     011B                     	;# 
  1147     011D                     	;# 
  1148     011E                     	;# 
  1149     018C                     	;# 
  1150     018D                     	;# 
  1151     018E                     	;# 
  1152     0191                     	;# 
  1153     0191                     	;# 
  1154     0192                     	;# 
  1155     0193                     	;# 
  1156     0193                     	;# 
  1157     0193                     	;# 
  1158     0194                     	;# 
  1159     0195                     	;# 
  1160     0196                     	;# 
  1161     0199                     	;# 
  1162     019A                     	;# 
  1163     019B                     	;# 
  1164     019B                     	;# 
  1165     019B                     	;# 
  1166     019B                     	;# 
  1167     019C                     	;# 
  1168     019C                     	;# 
  1169     019D                     	;# 
  1170     019E                     	;# 
  1171     019F                     	;# 
  1172     020C                     	;# 
  1173     020D                     	;# 
  1174     020E                     	;# 
  1175     0211                     	;# 
  1176     0211                     	;# 
  1177     0212                     	;# 
  1178     0212                     	;# 
  1179     0213                     	;# 
  1180     0213                     	;# 
  1181     0214                     	;# 
  1182     0214                     	;# 
  1183     0215                     	;# 
  1184     0215                     	;# 
  1185     0215                     	;# 
  1186     0216                     	;# 
  1187     0216                     	;# 
  1188     0217                     	;# 
  1189     0217                     	;# 
  1190     0219                     	;# 
  1191     021A                     	;# 
  1192     021B                     	;# 
  1193     021C                     	;# 
  1194     021D                     	;# 
  1195     021E                     	;# 
  1196     021F                     	;# 
  1197     0291                     	;# 
  1198     0291                     	;# 
  1199     0292                     	;# 
  1200     0293                     	;# 
  1201     0294                     	;# 
  1202     0295                     	;# 
  1203     0295                     	;# 
  1204     0296                     	;# 
  1205     0298                     	;# 
  1206     0298                     	;# 
  1207     0299                     	;# 
  1208     029A                     	;# 
  1209     029B                     	;# 
  1210     029C                     	;# 
  1211     029D                     	;# 
  1212     029E                     	;# 
  1213     0311                     	;# 
  1214     0311                     	;# 
  1215     0312                     	;# 
  1216     0313                     	;# 
  1217     0318                     	;# 
  1218     0318                     	;# 
  1219     0319                     	;# 
  1220     031A                     	;# 
  1221     038C                     	;# 
  1222     038D                     	;# 
  1223     038E                     	;# 
  1224     0391                     	;# 
  1225     0392                     	;# 
  1226     0393                     	;# 
  1227     0394                     	;# 
  1228     0395                     	;# 
  1229     0396                     	;# 
  1230     039A                     	;# 
  1231     039C                     	;# 
  1232     039D                     	;# 
  1233     039E                     	;# 
  1234     039F                     	;# 
  1235     0415                     	;# 
  1236     0416                     	;# 
  1237     0417                     	;# 
  1238     041C                     	;# 
  1239     041D                     	;# 
  1240     041E                     	;# 
  1241     0FE4                     	;# 
  1242     0FE5                     	;# 
  1243     0FE6                     	;# 
  1244     0FE7                     	;# 
  1245     0FE8                     	;# 
  1246     0FE9                     	;# 
  1247     0FEA                     	;# 
  1248     0FEB                     	;# 
  1249     0FED                     	;# 
  1250     0FEE                     	;# 
  1251     0FEF                     	;# 
  1252     0000                     	;# 
  1253     0001                     	;# 
  1254     0002                     	;# 
  1255     0003                     	;# 
  1256     0004                     	;# 
  1257     0005                     	;# 
  1258     0006                     	;# 
  1259     0007                     	;# 
  1260     0008                     	;# 
  1261     0009                     	;# 
  1262     000A                     	;# 
  1263     000B                     	;# 
  1264     000C                     	;# 
  1265     000D                     	;# 
  1266     000E                     	;# 
  1267     0011                     	;# 
  1268     0012                     	;# 
  1269     0013                     	;# 
  1270     0014                     	;# 
  1271     0015                     	;# 
  1272     0016                     	;# 
  1273     0016                     	;# 
  1274     0017                     	;# 
  1275     0018                     	;# 
  1276     0019                     	;# 
  1277     001A                     	;# 
  1278     001B                     	;# 
  1279     001C                     	;# 
  1280     001E                     	;# 
  1281     001F                     	;# 
  1282     008C                     	;# 
  1283     008D                     	;# 
  1284     008E                     	;# 
  1285     0091                     	;# 
  1286     0092                     	;# 
  1287     0093                     	;# 
  1288     0094                     	;# 
  1289     0095                     	;# 
  1290     0096                     	;# 
  1291     0097                     	;# 
  1292     0098                     	;# 
  1293     0099                     	;# 
  1294     009A                     	;# 
  1295     009B                     	;# 
  1296     009B                     	;# 
  1297     009C                     	;# 
  1298     009D                     	;# 
  1299     009E                     	;# 
  1300     010C                     	;# 
  1301     010D                     	;# 
  1302     010E                     	;# 
  1303     0111                     	;# 
  1304     0112                     	;# 
  1305     0113                     	;# 
  1306     0114                     	;# 
  1307     0115                     	;# 
  1308     0116                     	;# 
  1309     0117                     	;# 
  1310     0118                     	;# 
  1311     0119                     	;# 
  1312     011A                     	;# 
  1313     011B                     	;# 
  1314     011D                     	;# 
  1315     011E                     	;# 
  1316     018C                     	;# 
  1317     018D                     	;# 
  1318     018E                     	;# 
  1319     0191                     	;# 
  1320     0191                     	;# 
  1321     0192                     	;# 
  1322     0193                     	;# 
  1323     0193                     	;# 
  1324     0193                     	;# 
  1325     0194                     	;# 
  1326     0195                     	;# 
  1327     0196                     	;# 
  1328     0199                     	;# 
  1329     019A                     	;# 
  1330     019B                     	;# 
  1331     019B                     	;# 
  1332     019B                     	;# 
  1333     019B                     	;# 
  1334     019C                     	;# 
  1335     019C                     	;# 
  1336     019D                     	;# 
  1337     019E                     	;# 
  1338     019F                     	;# 
  1339     020C                     	;# 
  1340     020D                     	;# 
  1341     020E                     	;# 
  1342     0211                     	;# 
  1343     0211                     	;# 
  1344     0212                     	;# 
  1345     0212                     	;# 
  1346     0213                     	;# 
  1347     0213                     	;# 
  1348     0214                     	;# 
  1349     0214                     	;# 
  1350     0215                     	;# 
  1351     0215                     	;# 
  1352     0215                     	;# 
  1353     0216                     	;# 
  1354     0216                     	;# 
  1355     0217                     	;# 
  1356     0217                     	;# 
  1357     0219                     	;# 
  1358     021A                     	;# 
  1359     021B                     	;# 
  1360     021C                     	;# 
  1361     021D                     	;# 
  1362     021E                     	;# 
  1363     021F                     	;# 
  1364     0291                     	;# 
  1365     0291                     	;# 
  1366     0292                     	;# 
  1367     0293                     	;# 
  1368     0294                     	;# 
  1369     0295                     	;# 
  1370     0295                     	;# 
  1371     0296                     	;# 
  1372     0298                     	;# 
  1373     0298                     	;# 
  1374     0299                     	;# 
  1375     029A                     	;# 
  1376     029B                     	;# 
  1377     029C                     	;# 
  1378     029D                     	;# 
  1379     029E                     	;# 
  1380     0311                     	;# 
  1381     0311                     	;# 
  1382     0312                     	;# 
  1383     0313                     	;# 
  1384     0318                     	;# 
  1385     0318                     	;# 
  1386     0319                     	;# 
  1387     031A                     	;# 
  1388     038C                     	;# 
  1389     038D                     	;# 
  1390     038E                     	;# 
  1391     0391                     	;# 
  1392     0392                     	;# 
  1393     0393                     	;# 
  1394     0394                     	;# 
  1395     0395                     	;# 
  1396     0396                     	;# 
  1397     039A                     	;# 
  1398     039C                     	;# 
  1399     039D                     	;# 
  1400     039E                     	;# 
  1401     039F                     	;# 
  1402     0415                     	;# 
  1403     0416                     	;# 
  1404     0417                     	;# 
  1405     041C                     	;# 
  1406     041D                     	;# 
  1407     041E                     	;# 
  1408     0FE4                     	;# 
  1409     0FE5                     	;# 
  1410     0FE6                     	;# 
  1411     0FE7                     	;# 
  1412     0FE8                     	;# 
  1413     0FE9                     	;# 
  1414     0FEA                     	;# 
  1415     0FEB                     	;# 
  1416     0FED                     	;# 
  1417     0FEE                     	;# 
  1418     0FEF                     	;# 
  1419     0000                     	;# 
  1420     0001                     	;# 
  1421     0002                     	;# 
  1422     0003                     	;# 
  1423     0004                     	;# 
  1424     0005                     	;# 
  1425     0006                     	;# 
  1426     0007                     	;# 
  1427     0008                     	;# 
  1428     0009                     	;# 
  1429     000A                     	;# 
  1430     000B                     	;# 
  1431     000C                     	;# 
  1432     000D                     	;# 
  1433     000E                     	;# 
  1434     0011                     	;# 
  1435     0012                     	;# 
  1436     0013                     	;# 
  1437     0014                     	;# 
  1438     0015                     	;# 
  1439     0016                     	;# 
  1440     0016                     	;# 
  1441     0017                     	;# 
  1442     0018                     	;# 
  1443     0019                     	;# 
  1444     001A                     	;# 
  1445     001B                     	;# 
  1446     001C                     	;# 
  1447     001E                     	;# 
  1448     001F                     	;# 
  1449     008C                     	;# 
  1450     008D                     	;# 
  1451     008E                     	;# 
  1452     0091                     	;# 
  1453     0092                     	;# 
  1454     0093                     	;# 
  1455     0094                     	;# 
  1456     0095                     	;# 
  1457     0096                     	;# 
  1458     0097                     	;# 
  1459     0098                     	;# 
  1460     0099                     	;# 
  1461     009A                     	;# 
  1462     009B                     	;# 
  1463     009B                     	;# 
  1464     009C                     	;# 
  1465     009D                     	;# 
  1466     009E                     	;# 
  1467     010C                     	;# 
  1468     010D                     	;# 
  1469     010E                     	;# 
  1470     0111                     	;# 
  1471     0112                     	;# 
  1472     0113                     	;# 
  1473     0114                     	;# 
  1474     0115                     	;# 
  1475     0116                     	;# 
  1476     0117                     	;# 
  1477     0118                     	;# 
  1478     0119                     	;# 
  1479     011A                     	;# 
  1480     011B                     	;# 
  1481     011D                     	;# 
  1482     011E                     	;# 
  1483     018C                     	;# 
  1484     018D                     	;# 
  1485     018E                     	;# 
  1486     0191                     	;# 
  1487     0191                     	;# 
  1488     0192                     	;# 
  1489     0193                     	;# 
  1490     0193                     	;# 
  1491     0193                     	;# 
  1492     0194                     	;# 
  1493     0195                     	;# 
  1494     0196                     	;# 
  1495     0199                     	;# 
  1496     019A                     	;# 
  1497     019B                     	;# 
  1498     019B                     	;# 
  1499     019B                     	;# 
  1500     019B                     	;# 
  1501     019C                     	;# 
  1502     019C                     	;# 
  1503     019D                     	;# 
  1504     019E                     	;# 
  1505     019F                     	;# 
  1506     020C                     	;# 
  1507     020D                     	;# 
  1508     020E                     	;# 
  1509     0211                     	;# 
  1510     0211                     	;# 
  1511     0212                     	;# 
  1512     0212                     	;# 
  1513     0213                     	;# 
  1514     0213                     	;# 
  1515     0214                     	;# 
  1516     0214                     	;# 
  1517     0215                     	;# 
  1518     0215                     	;# 
  1519     0215                     	;# 
  1520     0216                     	;# 
  1521     0216                     	;# 
  1522     0217                     	;# 
  1523     0217                     	;# 
  1524     0219                     	;# 
  1525     021A                     	;# 
  1526     021B                     	;# 
  1527     021C                     	;# 
  1528     021D                     	;# 
  1529     021E                     	;# 
  1530     021F                     	;# 
  1531     0291                     	;# 
  1532     0291                     	;# 
  1533     0292                     	;# 
  1534     0293                     	;# 
  1535     0294                     	;# 
  1536     0295                     	;# 
  1537     0295                     	;# 
  1538     0296                     	;# 
  1539     0298                     	;# 
  1540     0298                     	;# 
  1541     0299                     	;# 
  1542     029A                     	;# 
  1543     029B                     	;# 
  1544     029C                     	;# 
  1545     029D                     	;# 
  1546     029E                     	;# 
  1547     0311                     	;# 
  1548     0311                     	;# 
  1549     0312                     	;# 
  1550     0313                     	;# 
  1551     0318                     	;# 
  1552     0318                     	;# 
  1553     0319                     	;# 
  1554     031A                     	;# 
  1555     038C                     	;# 
  1556     038D                     	;# 
  1557     038E                     	;# 
  1558     0391                     	;# 
  1559     0392                     	;# 
  1560     0393                     	;# 
  1561     0394                     	;# 
  1562     0395                     	;# 
  1563     0396                     	;# 
  1564     039A                     	;# 
  1565     039C                     	;# 
  1566     039D                     	;# 
  1567     039E                     	;# 
  1568     039F                     	;# 
  1569     0415                     	;# 
  1570     0416                     	;# 
  1571     0417                     	;# 
  1572     041C                     	;# 
  1573     041D                     	;# 
  1574     041E                     	;# 
  1575     0FE4                     	;# 
  1576     0FE5                     	;# 
  1577     0FE6                     	;# 
  1578     0FE7                     	;# 
  1579     0FE8                     	;# 
  1580     0FE9                     	;# 
  1581     0FEA                     	;# 
  1582     0FEB                     	;# 
  1583     0FED                     	;# 
  1584     0FEE                     	;# 
  1585     0FEF                     	;# 
  1586                           
  1587 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1588     0000                     
  1589 ;; Function _Timer0_PeriodCountSet is unused but had its address taken
  1590     0000                     
  1591                           	psect	stringtext1
  1592     052B                     __pstringtext1:
  1593     052B                     _Timer0:
  1594     052B  34F3               	retlw	low _Timer0_Initialize
  1595     052C  3404               	retlw	high _Timer0_Initialize
  1596     052D  3400               	retlw	0
  1597     052E  3400               	retlw	0
  1598     052F  3400               	retlw	0
  1599     0530  3400               	retlw	0
  1600     0531  3400               	retlw	0
  1601     0532  3400               	retlw	0
  1602     0533  3466               	retlw	low _Timer0_OverflowCallbackRegister
  1603     0534  3405               	retlw	high _Timer0_OverflowCallbackRegister
  1604     0535  3400               	retlw	0
  1605     0536  3400               	retlw	0
  1606     0537                     __end_of_Timer0:
  1607                           
  1608                           	psect	nvBANK1
  1609     00D3                     __pnvBANK1:
  1610     00D3                     _Timer0_OverflowCallback:
  1611     00D3                     	ds	2
  1612     00D5                     _INT_InterruptHandler:
  1613     00D5                     	ds	2
  1614     000E                     _PORTC	set	14
  1615     0015                     _TMR0	set	21
  1616     000B                     _INTCONbits	set	11
  1617     0011                     _PIR1bits	set	17
  1618     006E                     _RB6	set	110
  1619     006D                     _RB5	set	109
  1620     006C                     _RB4	set	108
  1621     006F                     _RB7	set	111
  1622     0095                     _OPTION_REG	set	149
  1623     0098                     _OSCTUNE	set	152
  1624     0099                     _OSCCON	set	153
  1625     0095                     _OPTION_REGbits	set	149
  1626     008E                     _TRISC	set	142
  1627     008D                     _TRISB	set	141
  1628     008C                     _TRISA	set	140
  1629     0097                     _WDTCON	set	151
  1630     009D                     _ADCON0bits	set	157
  1631     009D                     _ADCON0	set	157
  1632     009C                     _ADRESH	set	156
  1633     009B                     _ADRESL	set	155
  1634     009E                     _ADCON1	set	158
  1635     046F                     _TRISB7	set	1135
  1636     046E                     _TRISB6	set	1134
  1637     046D                     _TRISB5	set	1133
  1638     046C                     _TRISB4	set	1132
  1639     0116                     _BORCON	set	278
  1640     010E                     _LATC	set	270
  1641     010D                     _LATB	set	269
  1642     010C                     _LATA	set	268
  1643     018E                     _ANSELC	set	398
  1644     018D                     _ANSELB	set	397
  1645     018C                     _ANSELA	set	396
  1646     020E                     _WPUC	set	526
  1647     020D                     _WPUB	set	525
  1648     020C                     _WPUA	set	524
  1649     0396                     _IOCBF	set	918
  1650     0395                     _IOCBN	set	917
  1651     0394                     _IOCBP	set	916
  1652     0393                     _IOCAF	set	915
  1653     0392                     _IOCAN	set	914
  1654     0391                     _IOCAP	set	913
  1655     038E                     _INLVLC	set	910
  1656     038D                     _INLVLB	set	909
  1657     038C                     _INLVLA	set	908
  1658                           
  1659                           	psect	stringtext2
  1660     0537                     __pstringtext2:
  1661     0537                     STR_1:
  1662     0537  3463               	retlw	99	;'c'
  1663     0538  346F               	retlw	111	;'o'
  1664     0539  3475               	retlw	117	;'u'
  1665     053A  346E               	retlw	110	;'n'
  1666     053B  3474               	retlw	116	;'t'
  1667     053C  3473               	retlw	115	;'s'
  1668     053D  343A               	retlw	58	;':'
  1669     053E  3425               	retlw	37	;'%'
  1670     053F  3430               	retlw	48	;'0'
  1671     0540  3436               	retlw	54	;'6'
  1672     0541  3464               	retlw	100	;'d'
  1673     0542  3400               	retlw	0
  1674                           
  1675                           	psect	stringtext3
  1676     0000                     __pstringtext3:
  1677                           
  1678                           	psect	cinit
  1679     0019                     start_initialization:	
  1680                           ; #config settings
  1681                           
  1682     0019                     __initialization:
  1683                           
  1684                           ; Clear objects allocated to BANK0
  1685     0019  0020               	movlb	0	; select bank0
  1686     001A  01ED               	clrf	__pbssBANK0& (0+127)
  1687     001B  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  1688     001C  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  1689                           
  1690                           ; Clear objects allocated to BANK1
  1691     001D  30A0               	movlw	low __pbssBANK1
  1692     001E  0084               	movwf	4
  1693     001F  3000               	movlw	high __pbssBANK1
  1694     0020  0085               	movwf	5
  1695     0021  3033               	movlw	51
  1696     0022  3185  2560  3180   	fcall	clear_ram0
  1697     0025                     end_of_initialization:	
  1698                           ;End of C runtime variable initialization code
  1699                           
  1700     0025                     __end_of__initialization:
  1701     0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1702     0026  0020               	movlb	0
  1703     0027  3183  2B81         	ljmp	_main	;jump to C main() function
  1704                           
  1705                           	psect	bssBANK0
  1706     006D                     __pbssBANK0:
  1707     006D                     _flags:
  1708     006D                     	ds	1
  1709     006E                     _flag:
  1710     006E                     	ds	1
  1711     006F                     _timer0ReloadVal:
  1712     006F                     	ds	1
  1713                           
  1714                           	psect	bssBANK1
  1715     00A0                     __pbssBANK1:
  1716     00A0                     main@F3024:
  1717     00A0                     	ds	13
  1718     00AD                     _width:
  1719     00AD                     	ds	2
  1720     00AF                     _prec:
  1721     00AF                     	ds	2
  1722     00B1                     _counts:
  1723     00B1                     	ds	2
  1724     00B3                     _dbuf:
  1725     00B3                     	ds	32
  1726                           
  1727                           	psect	clrtext
  1728     0560                     clear_ram0:	
  1729                           ;	Called with FSR0 containing the base address, and
  1730                           ;	WREG with the size to clear
  1731                           
  1732     0560  0064               	clrwdt	;clear the watchdog before getting into this loop
  1733     0561                     clrloop0:
  1734     0561  0180               	clrf	0	;clear RAM location pointed to by FSR
  1735     0562  3101               	addfsr 0,1
  1736     0563  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1737     0564  2D61               	goto	clrloop0	;have we reached the end yet?
  1738     0565  3400               	retlw	0	;all done for this memory range, return
  1739                           
  1740                           	psect	cstackCOMMON
  1741     0070                     __pcstackCOMMON:
  1742     0070                     ?_Timer0_Initialize:
  1743     0070                     ?_INTERRUPT_Initialize:	
  1744                           ; 1 bytes @ 0x0
  1745                           
  1746     0070                     ?_INT_SetInterruptHandler:	
  1747                           ; 1 bytes @ 0x0
  1748                           
  1749     0070                     ?_Timer0_OverflowISR:	
  1750                           ; 1 bytes @ 0x0
  1751                           
  1752     0070                     ??_Timer0_OverflowISR:	
  1753                           ; 1 bytes @ 0x0
  1754                           
  1755     0070                     ?_Timer0_OverflowCallbackRegister:	
  1756                           ; 1 bytes @ 0x0
  1757                           
  1758     0070                     ?_Timer0_DefaultOverflowCallback:	
  1759                           ; 1 bytes @ 0x0
  1760                           
  1761     0070                     ??_Timer0_DefaultOverflowCallback:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764     0070                     ?_lcd_init:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767     0070                     ?_lcd_cmd:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770     0070                     ??_lcd_cmd:	
  1771                           ; 1 bytes @ 0x0
  1772                           
  1773     0070                     ?_lcd_string:	
  1774                           ; 1 bytes @ 0x0
  1775                           
  1776     0070                     ?_putch:	
  1777                           ; 1 bytes @ 0x0
  1778                           
  1779     0070                     ??_putch:	
  1780                           ; 1 bytes @ 0x0
  1781                           
  1782     0070                     ?_ADC_Initialize:	
  1783                           ; 1 bytes @ 0x0
  1784                           
  1785     0070                     ??_ADC_Initialize:	
  1786                           ; 1 bytes @ 0x0
  1787                           
  1788     0070                     ?_WDT_Initialize:	
  1789                           ; 1 bytes @ 0x0
  1790                           
  1791     0070                     ??_WDT_Initialize:	
  1792                           ; 1 bytes @ 0x0
  1793                           
  1794     0070                     ?_PIN_MANAGER_Initialize:	
  1795                           ; 1 bytes @ 0x0
  1796                           
  1797     0070                     ??_PIN_MANAGER_Initialize:	
  1798                           ; 1 bytes @ 0x0
  1799                           
  1800     0070                     ?_CLOCK_Initialize:	
  1801                           ; 1 bytes @ 0x0
  1802                           
  1803     0070                     ??_CLOCK_Initialize:	
  1804                           ; 1 bytes @ 0x0
  1805                           
  1806     0070                     ?_SYSTEM_Initialize:	
  1807                           ; 1 bytes @ 0x0
  1808                           
  1809     0070                     ?_INTERRUPT_InterruptManager:	
  1810                           ; 1 bytes @ 0x0
  1811                           
  1812     0070                     ??_INTERRUPT_InterruptManager:	
  1813                           ; 1 bytes @ 0x0
  1814                           
  1815     0070                     ?_lcd_data:	
  1816                           ; 1 bytes @ 0x0
  1817                           
  1818     0070                     ??_lcd_data:	
  1819                           ; 1 bytes @ 0x0
  1820                           
  1821     0070                     ?_fputc:	
  1822                           ; 1 bytes @ 0x0
  1823                           
  1824     0070                     ?_main:	
  1825                           ; 2 bytes @ 0x0
  1826                           
  1827     0070                     ?___wmul:	
  1828                           ; 2 bytes @ 0x0
  1829                           
  1830     0070                     ?___awdiv:	
  1831                           ; 2 bytes @ 0x0
  1832                           
  1833     0070                     ?___awmod:	
  1834                           ; 2 bytes @ 0x0
  1835                           
  1836     0070                     putch@c:	
  1837                           ; 2 bytes @ 0x0
  1838                           
  1839     0070                     INT_SetInterruptHandler@InterruptHandler:	
  1840                           ; 1 bytes @ 0x0
  1841                           
  1842     0070                     Timer0_OverflowCallbackRegister@CallbackHandler:	
  1843                           ; 2 bytes @ 0x0
  1844                           
  1845     0070                     ___wmul@multiplier:	
  1846                           ; 2 bytes @ 0x0
  1847                           
  1848     0070                     ___awdiv@divisor:	
  1849                           ; 2 bytes @ 0x0
  1850                           
  1851     0070                     ___awmod@divisor:	
  1852                           ; 2 bytes @ 0x0
  1853                           
  1854     0070                     fputc@c:	
  1855                           ; 2 bytes @ 0x0
  1856                           
  1857                           
  1858                           ; 2 bytes @ 0x0
  1859     0070                     	ds	1
  1860     0071                     lcd_data@data:
  1861     0071                     lcd_cmd@cmd:	
  1862                           ; 1 bytes @ 0x1
  1863                           
  1864                           
  1865                           ; 1 bytes @ 0x1
  1866     0071                     	ds	1
  1867     0072                     ??_Timer0_Initialize:
  1868     0072                     ??_INTERRUPT_Initialize:	
  1869                           ; 1 bytes @ 0x2
  1870                           
  1871     0072                     ??_INT_SetInterruptHandler:	
  1872                           ; 1 bytes @ 0x2
  1873                           
  1874     0072                     ??_Timer0_OverflowCallbackRegister:	
  1875                           ; 1 bytes @ 0x2
  1876                           
  1877     0072                     ??_lcd_init:	
  1878                           ; 1 bytes @ 0x2
  1879                           
  1880     0072                     ??_lcd_string:	
  1881                           ; 1 bytes @ 0x2
  1882                           
  1883     0072                     ??_SYSTEM_Initialize:	
  1884                           ; 1 bytes @ 0x2
  1885                           
  1886     0072                     fputc@fp:	
  1887                           ; 1 bytes @ 0x2
  1888                           
  1889     0072                     ___wmul@multiplicand:	
  1890                           ; 1 bytes @ 0x2
  1891                           
  1892     0072                     ___awdiv@dividend:	
  1893                           ; 2 bytes @ 0x2
  1894                           
  1895     0072                     ___awmod@dividend:	
  1896                           ; 2 bytes @ 0x2
  1897                           
  1898                           
  1899                           ; 2 bytes @ 0x2
  1900     0072                     	ds	1
  1901     0073                     ??_fputc:
  1902     0073                     lcd_string@ptr:	
  1903                           ; 1 bytes @ 0x3
  1904                           
  1905                           
  1906                           ; 1 bytes @ 0x3
  1907     0073                     	ds	1
  1908     0074                     ??___wmul:
  1909     0074                     ??___awdiv:	
  1910                           ; 1 bytes @ 0x4
  1911                           
  1912     0074                     ??___awmod:	
  1913                           ; 1 bytes @ 0x4
  1914                           
  1915     0074                     ___wmul@product:	
  1916                           ; 1 bytes @ 0x4
  1917                           
  1918                           
  1919                           ; 2 bytes @ 0x4
  1920     0074                     	ds	1
  1921     0075                     ___awdiv@counter:
  1922     0075                     ___awmod@counter:	
  1923                           ; 1 bytes @ 0x5
  1924                           
  1925                           
  1926                           ; 1 bytes @ 0x5
  1927     0075                     	ds	1
  1928     0076                     ?_read_prec_or_width:
  1929     0076                     ___awdiv@sign:	
  1930                           ; 2 bytes @ 0x6
  1931                           
  1932     0076                     ___awmod@sign:	
  1933                           ; 1 bytes @ 0x6
  1934                           
  1935     0076                     read_prec_or_width@ap:	
  1936                           ; 1 bytes @ 0x6
  1937                           
  1938                           
  1939                           ; 1 bytes @ 0x6
  1940     0076                     	ds	1
  1941     0077                     ?_abs:
  1942     0077                     ___awdiv@quotient:	
  1943                           ; 2 bytes @ 0x7
  1944                           
  1945     0077                     abs@a:	
  1946                           ; 2 bytes @ 0x7
  1947                           
  1948                           
  1949                           ; 2 bytes @ 0x7
  1950     0077                     	ds	1
  1951     0078                     ??_read_prec_or_width:
  1952     0078                     ?_fputs:	
  1953                           ; 1 bytes @ 0x8
  1954                           
  1955     0078                     fputs@fp:	
  1956                           ; 2 bytes @ 0x8
  1957                           
  1958                           
  1959                           ; 1 bytes @ 0x8
  1960     0078                     	ds	1
  1961     0079                     ??_fputs:
  1962     0079                     ??_abs:	
  1963                           ; 1 bytes @ 0x9
  1964                           
  1965                           
  1966                           ; 1 bytes @ 0x9
  1967     0079                     	ds	2
  1968     007B                     ?_pad:
  1969     007B                     pad@buf:	
  1970                           ; 1 bytes @ 0xB
  1971                           
  1972                           
  1973                           ; 1 bytes @ 0xB
  1974     007B                     	ds	1
  1975     007C                     pad@p:
  1976                           
  1977                           ; 2 bytes @ 0xC
  1978     007C                     	ds	2
  1979                           
  1980                           	psect	cstackBANK0
  1981     0020                     __pcstackBANK0:
  1982     0020                     read_prec_or_width@c:
  1983     0020                     fputs@c:	
  1984                           ; 1 bytes @ 0x0
  1985                           
  1986                           
  1987                           ; 1 bytes @ 0x0
  1988     0020                     	ds	1
  1989     0021                     read_prec_or_width@n:
  1990     0021                     fputs@i:	
  1991                           ; 2 bytes @ 0x1
  1992                           
  1993                           
  1994                           ; 2 bytes @ 0x1
  1995     0021                     	ds	2
  1996     0023                     read_prec_or_width@fmt:
  1997     0023                     fputs@s:	
  1998                           ; 1 bytes @ 0x3
  1999                           
  2000                           
  2001                           ; 1 bytes @ 0x3
  2002     0023                     	ds	1
  2003     0024                     ??_pad:
  2004                           
  2005                           ; 1 bytes @ 0x4
  2006     0024                     	ds	1
  2007     0025                     pad@i:
  2008                           
  2009                           ; 2 bytes @ 0x5
  2010     0025                     	ds	2
  2011     0027                     pad@w:
  2012                           
  2013                           ; 2 bytes @ 0x7
  2014     0027                     	ds	2
  2015     0029                     pad@fp:
  2016                           
  2017                           ; 1 bytes @ 0x9
  2018     0029                     	ds	1
  2019     002A                     ?_dtoa:
  2020     002A                     dtoa@d:	
  2021                           ; 1 bytes @ 0xA
  2022                           
  2023                           
  2024                           ; 2 bytes @ 0xA
  2025     002A                     	ds	2
  2026     002C                     ??_dtoa:
  2027                           
  2028                           ; 1 bytes @ 0xC
  2029     002C                     	ds	1
  2030     002D                     _dtoa$989:
  2031                           
  2032                           ; 2 bytes @ 0xD
  2033     002D                     	ds	2
  2034     002F                     dtoa@fp:
  2035                           
  2036                           ; 1 bytes @ 0xF
  2037     002F                     	ds	1
  2038     0030                     dtoa@p:
  2039                           
  2040                           ; 2 bytes @ 0x10
  2041     0030                     	ds	2
  2042     0032                     dtoa@w:
  2043                           
  2044                           ; 2 bytes @ 0x12
  2045     0032                     	ds	2
  2046     0034                     dtoa@i:
  2047                           
  2048                           ; 2 bytes @ 0x14
  2049     0034                     	ds	2
  2050     0036                     dtoa@s:
  2051                           
  2052                           ; 1 bytes @ 0x16
  2053     0036                     	ds	1
  2054     0037                     ?_vfpfcnvrt:
  2055     0037                     vfpfcnvrt@fmt:	
  2056                           ; 1 bytes @ 0x17
  2057                           
  2058                           
  2059                           ; 1 bytes @ 0x17
  2060     0037                     	ds	1
  2061     0038                     vfpfcnvrt@ap:
  2062                           
  2063                           ; 1 bytes @ 0x18
  2064     0038                     	ds	1
  2065     0039                     ??_vfpfcnvrt:
  2066                           
  2067                           ; 1 bytes @ 0x19
  2068     0039                     	ds	4
  2069     003D                     vfpfcnvrt@convarg:
  2070                           
  2071                           ; 4 bytes @ 0x1D
  2072     003D                     	ds	4
  2073     0041                     vfpfcnvrt@done:
  2074                           
  2075                           ; 2 bytes @ 0x21
  2076     0041                     	ds	2
  2077     0043                     vfpfcnvrt@fp:
  2078                           
  2079                           ; 1 bytes @ 0x23
  2080     0043                     	ds	1
  2081     0044                     vfpfcnvrt@cp:
  2082                           
  2083                           ; 2 bytes @ 0x24
  2084     0044                     	ds	2
  2085     0046                     ?_vfprintf:
  2086     0046                     vfprintf@fmt:	
  2087                           ; 2 bytes @ 0x26
  2088                           
  2089                           
  2090                           ; 2 bytes @ 0x26
  2091     0046                     	ds	2
  2092     0048                     vfprintf@ap:
  2093                           
  2094                           ; 1 bytes @ 0x28
  2095     0048                     	ds	1
  2096     0049                     ??_vfprintf:
  2097                           
  2098                           ; 1 bytes @ 0x29
  2099     0049                     	ds	1
  2100     004A                     vfprintf@fp:
  2101                           
  2102                           ; 1 bytes @ 0x2A
  2103     004A                     	ds	1
  2104     004B                     vfprintf@cfmt:
  2105                           
  2106                           ; 2 bytes @ 0x2B
  2107     004B                     	ds	2
  2108     004D                     ?_sprintf:
  2109     004D                     sprintf@fmt:	
  2110                           ; 2 bytes @ 0x2D
  2111                           
  2112                           
  2113                           ; 2 bytes @ 0x2D
  2114     004D                     	ds	4
  2115     0051                     ??_sprintf:
  2116                           
  2117                           ; 1 bytes @ 0x31
  2118     0051                     	ds	1
  2119     0052                     sprintf@ap:
  2120                           
  2121                           ; 1 bytes @ 0x32
  2122     0052                     	ds	1
  2123     0053                     sprintf@s:
  2124                           
  2125                           ; 1 bytes @ 0x33
  2126     0053                     	ds	1
  2127     0054                     sprintf@f:
  2128                           
  2129                           ; 11 bytes @ 0x34
  2130     0054                     	ds	11
  2131     005F                     ??_main:
  2132                           
  2133                           ; 1 bytes @ 0x3F
  2134     005F                     	ds	1
  2135     0060                     main@arr:
  2136                           
  2137                           ; 13 bytes @ 0x40
  2138     0060                     	ds	13
  2139                           
  2140                           	psect	maintext
  2141     0381                     __pmaintext:	
  2142 ;;
  2143 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2144 ;;
  2145 ;; *************** function _main *****************
  2146 ;; Defined at:
  2147 ;;		line 46 in file "main.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  arr            13   64[BANK0 ] unsigned char [13]
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2  250[None  ] int 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : B1F/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2162 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2163 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;Total ram usage:       14 bytes
  2166 ;; Hardware stack levels required when called: 11
  2167 ;; This function calls:
  2168 ;;		_SYSTEM_Initialize
  2169 ;;		_Timer0_Initialize
  2170 ;;		_lcd_cmd
  2171 ;;		_lcd_init
  2172 ;;		_lcd_string
  2173 ;;		_sprintf
  2174 ;; This function is called by:
  2175 ;;		Startup code after reset
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     0381                     _main:	
  2180                           ;psect for function _main
  2181                           
  2182     0381                     l1952:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2185                           
  2186                           
  2187                           ;main.c: 48:     SYSTEM_Initialize();
  2188     0381  3185  2507  3183   	fcall	_SYSTEM_Initialize
  2189     0384                     l1954:
  2190                           
  2191                           ;main.c: 55:     (INTCONbits.GIE = 1);
  2192     0384  178B               	bsf	11,7	;volatile
  2193     0385                     l1956:
  2194                           
  2195                           ;main.c: 61:     (INTCONbits.PEIE = 1);
  2196     0385  170B               	bsf	11,6	;volatile
  2197     0386                     l1958:
  2198                           
  2199                           ;main.c: 66:     TRISC = 0x00;
  2200     0386  0021               	movlb	1	; select bank1
  2201     0387  018E               	clrf	14	;volatile
  2202     0388                     l1960:
  2203                           
  2204                           ;main.c: 67:     TRISB4=0;
  2205     0388  120D               	bcf	13,4	;volatile
  2206     0389                     l1962:
  2207                           
  2208                           ;main.c: 68:     TRISB5=0;
  2209     0389  128D               	bcf	13,5	;volatile
  2210     038A                     l1964:
  2211                           
  2212                           ;main.c: 69:     TRISB6=0;
  2213     038A  130D               	bcf	13,6	;volatile
  2214     038B                     l1966:
  2215                           
  2216                           ;main.c: 70:     TRISB7=0;
  2217     038B  138D               	bcf	13,7	;volatile
  2218     038C                     l1968:
  2219                           
  2220                           ;main.c: 72:     Timer0_Initialize();
  2221     038C  3184  24F3  3183   	fcall	_Timer0_Initialize
  2222     038F                     l1970:
  2223                           
  2224                           ;main.c: 73:     lcd_init();
  2225     038F  3184  24DE  3183   	fcall	_lcd_init
  2226     0392                     l1972:
  2227                           
  2228                           ;main.c: 74:     char arr[13] ={0};
  2229     0392  3060               	movlw	low main@arr
  2230     0393  0086               	movwf	6
  2231     0394  3000               	movlw	high main@arr
  2232     0395  0087               	movwf	7
  2233     0396  300D               	movlw	13
  2234     0397  0020               	movlb	0	; select bank0
  2235     0398  00DF               	movwf	??_main
  2236     0399  3000               	movlw	0
  2237     039A                     u1260:
  2238     039A  001E               	movwi fsr1++
  2239     039B  0BDF               	decfsz	??_main,f
  2240     039C  2B9A               	goto	u1260
  2241     039D                     l1974:
  2242                           
  2243                           ;main.c: 76:     {;main.c: 77:         if(flag)
  2244     039D  086E               	movf	_flag,w	;volatile
  2245     039E  1903               	btfsc	3,2
  2246     039F  2BA1               	goto	u1271
  2247     03A0  2BA2               	goto	u1270
  2248     03A1                     u1271:
  2249     03A1  2B9D               	goto	l1974
  2250     03A2                     u1270:
  2251     03A2                     l1976:
  2252                           
  2253                           ;main.c: 78:         {;main.c: 79:             sprintf(arr,"counts:%06d",counts);
  2254     03A2  3037               	movlw	low (STR_1| (0+32768))
  2255     03A3  00CD               	movwf	sprintf@fmt
  2256     03A4  3085               	movlw	high (STR_1| (0+32768))
  2257     03A5  00CE               	movwf	sprintf@fmt+1
  2258     03A6  0021               	movlb	1	; select bank1
  2259     03A7  0832               	movf	(_counts+1)^(0+128),w	;volatile
  2260     03A8  0020               	movlb	0	; select bank0
  2261     03A9  00D0               	movwf	?_sprintf+3
  2262     03AA  0021               	movlb	1	; select bank1
  2263     03AB  0831               	movf	_counts^(0+128),w	;volatile
  2264     03AC  0020               	movlb	0	; select bank0
  2265     03AD  00CF               	movwf	?_sprintf+2
  2266     03AE  3060               	movlw	(low (main@arr| 0))& (0+255)
  2267     03AF  3184  2429  3183   	fcall	_sprintf
  2268     03B2                     l1978:
  2269                           
  2270                           ;main.c: 80:             lcd_cmd(0x80);
  2271     03B2  3080               	movlw	128
  2272     03B3  3184  2496  3183   	fcall	_lcd_cmd
  2273     03B6                     l1980:
  2274                           
  2275                           ;main.c: 81:             lcd_string((uint8_t *)arr);
  2276     03B6  3060               	movlw	(low (main@arr| 0))& (0+255)
  2277     03B7  3184  24C8  3183   	fcall	_lcd_string
  2278     03BA                     l1982:
  2279                           
  2280                           ;main.c: 82:             flag = 0;
  2281     03BA  0020               	movlb	0	; select bank0
  2282     03BB  01EE               	clrf	_flag	;volatile
  2283     03BC  2B9D               	goto	l1974
  2284     03BD  3180  2817         	ljmp	start
  2285     03BF                     __end_of_main:
  2286                           
  2287                           	psect	text1
  2288     0429                     __ptext1:	
  2289 ;; *************** function _sprintf *****************
  2290 ;; Defined at:
  2291 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  s               1    wreg     PTR unsigned char 
  2294 ;;		 -> main@arr(13), 
  2295 ;;  fmt             2   45[BANK0 ] PTR const unsigned char 
  2296 ;;		 -> STR_1(12), 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  s               1   51[BANK0 ] PTR unsigned char 
  2299 ;;		 -> main@arr(13), 
  2300 ;;  f              11   52[BANK0 ] struct _IO_FILE
  2301 ;;  ret             2    0        int 
  2302 ;;  ap              1   50[BANK0 ] PTR void [1]
  2303 ;;		 -> ?_sprintf(2), 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2   45[BANK0 ] int 
  2306 ;; Registers used:
  2307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2317 ;;Total ram usage:       18 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; Hardware stack levels required when called: 10
  2320 ;; This function calls:
  2321 ;;		_vfprintf
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327     0429                     _sprintf:	
  2328                           ;psect for function _sprintf
  2329                           
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2333                           ;sprintf@s stored from wreg
  2334     0429  0020               	movlb	0	; select bank0
  2335     042A  00D3               	movwf	sprintf@s
  2336     042B                     l1912:
  2337     042B  304F               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2338     042C  00D2               	movwf	sprintf@ap
  2339     042D  0853               	movf	sprintf@s,w
  2340     042E  00D4               	movwf	sprintf@f
  2341     042F                     l1914:
  2342     042F  01D6               	clrf	sprintf@f+2
  2343     0430  01D7               	clrf	sprintf@f+3
  2344     0431                     l1916:
  2345     0431  01DD               	clrf	sprintf@f+9
  2346     0432  01DE               	clrf	sprintf@f+10
  2347     0433                     l1918:
  2348     0433  084E               	movf	sprintf@fmt+1,w
  2349     0434  00C7               	movwf	vfprintf@fmt+1
  2350     0435  084D               	movf	sprintf@fmt,w
  2351     0436  00C6               	movwf	vfprintf@fmt
  2352     0437  3052               	movlw	(low (sprintf@ap| 0))& (0+255)
  2353     0438  00C8               	movwf	vfprintf@ap
  2354     0439  3054               	movlw	(low (sprintf@f| 0))& (0+255)
  2355     043A  3184  2446  3184   	fcall	_vfprintf
  2356     043D                     l1920:
  2357     043D  0020               	movlb	0	; select bank0
  2358     043E  0856               	movf	sprintf@f+2,w
  2359     043F  0753               	addwf	sprintf@s,w
  2360     0440  00D1               	movwf	??_sprintf
  2361     0441  0851               	movf	??_sprintf,w
  2362     0442  0086               	movwf	6
  2363     0443  0187               	clrf	7
  2364     0444  0181               	clrf	1
  2365     0445                     l885:
  2366     0445  0008               	return
  2367     0446                     __end_of_sprintf:
  2368                           
  2369                           	psect	text2
  2370     0446                     __ptext2:	
  2371 ;; *************** function _vfprintf *****************
  2372 ;; Defined at:
  2373 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  fp              1    wreg     PTR struct _IO_FILE
  2376 ;;		 -> sprintf@f(11), 
  2377 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  2378 ;;		 -> STR_1(12), 
  2379 ;;  ap              1   40[BANK0 ] PTR PTR void 
  2380 ;;		 -> sprintf@ap(1), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  fp              1   42[BANK0 ] PTR struct _IO_FILE
  2383 ;;		 -> sprintf@f(11), 
  2384 ;;  cfmt            2   43[BANK0 ] PTR unsigned char 
  2385 ;;		 -> STR_1(12), 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2   38[BANK0 ] int 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2395 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;Total ram usage:        7 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 9
  2402 ;; This function calls:
  2403 ;;		_vfpfcnvrt
  2404 ;; This function is called by:
  2405 ;;		_sprintf
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409     0446                     _vfprintf:	
  2410                           ;psect for function _vfprintf
  2411                           
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2415                           ;vfprintf@fp stored from wreg
  2416     0446  0020               	movlb	0	; select bank0
  2417     0447  00CA               	movwf	vfprintf@fp
  2418     0448                     l1890:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2421     0448  0847               	movf	vfprintf@fmt+1,w
  2422     0449  00CC               	movwf	vfprintf@cfmt+1
  2423     044A  0846               	movf	vfprintf@fmt,w
  2424     044B  00CB               	movwf	vfprintf@cfmt
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2427     044C  2C55               	goto	l1894
  2428     044D                     l1892:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2431     044D  304B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2432     044E  00B7               	movwf	vfpfcnvrt@fmt
  2433     044F  0848               	movf	vfprintf@ap,w
  2434     0450  00B8               	movwf	vfpfcnvrt@ap
  2435     0451  084A               	movf	vfprintf@fp,w
  2436     0452  3181  2108  3184   	fcall	_vfpfcnvrt
  2437     0455                     l1894:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2440     0455  0020               	movlb	0	; select bank0
  2441     0456  084B               	movf	vfprintf@cfmt,w
  2442     0457  0084               	movwf	4
  2443     0458  084C               	movf	vfprintf@cfmt+1,w
  2444     0459  0085               	movwf	5
  2445     045A  0012               	moviw fsr0++
  2446     045B  1D03               	btfss	3,2
  2447     045C  2C5E               	goto	u1191
  2448     045D  2C5F               	goto	u1190
  2449     045E                     u1191:
  2450     045E  2C4D               	goto	l1892
  2451     045F                     u1190:
  2452     045F                     l1896:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2455     045F  01C6               	clrf	?_vfprintf
  2456     0460  01C7               	clrf	?_vfprintf+1
  2457     0461                     l964:
  2458     0461  0008               	return
  2459     0462                     __end_of_vfprintf:
  2460                           
  2461                           	psect	text3
  2462     0108                     __ptext3:	
  2463 ;; *************** function _vfpfcnvrt *****************
  2464 ;; Defined at:
  2465 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  fp              1    wreg     PTR struct _IO_FILE
  2468 ;;		 -> sprintf@f(11), 
  2469 ;;  fmt             1   23[BANK0 ] PTR PTR unsigned char 
  2470 ;;		 -> vfprintf@cfmt(2), 
  2471 ;;  ap              1   24[BANK0 ] PTR PTR void 
  2472 ;;		 -> sprintf@ap(1), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  2475 ;;		 -> sprintf@f(11), 
  2476 ;;  convarg         4   29[BANK0 ] struct .
  2477 ;;  cp              2   36[BANK0 ] PTR unsigned char 
  2478 ;;		 -> STR_1(12), 
  2479 ;;  done            2   33[BANK0 ] int 
  2480 ;;  i               2    0        int 
  2481 ;;  c               1    0        unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;Total ram usage:       15 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 8
  2498 ;; This function calls:
  2499 ;;		_dtoa
  2500 ;;		_fputc
  2501 ;;		_read_prec_or_width
  2502 ;; This function is called by:
  2503 ;;		_vfprintf
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507     0108                     _vfpfcnvrt:	
  2508                           ;psect for function _vfpfcnvrt
  2509                           
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2513                           ;vfpfcnvrt@fp stored from wreg
  2514     0108  0020               	movlb	0	; select bank0
  2515     0109  00C3               	movwf	vfpfcnvrt@fp
  2516     010A                     l1738:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2519     010A  0837               	movf	vfpfcnvrt@fmt,w
  2520     010B  0086               	movwf	6
  2521     010C  0187               	clrf	7
  2522     010D  3F40               	moviw [0]fsr1
  2523     010E  00B9               	movwf	??_vfpfcnvrt
  2524     010F  3F41               	moviw [1]fsr1
  2525     0110  00BA               	movwf	??_vfpfcnvrt+1
  2526     0111  0839               	movf	??_vfpfcnvrt,w
  2527     0112  0084               	movwf	4
  2528     0113  083A               	movf	??_vfpfcnvrt+1,w
  2529     0114  0085               	movwf	5
  2530     0115  0012               	moviw fsr0++
  2531     0116  3A25               	xorlw	37
  2532     0117  1D03               	btfss	3,2
  2533     0118  291A               	goto	u1131
  2534     0119  291B               	goto	u1130
  2535     011A                     u1131:
  2536     011A  29C1               	goto	l1784
  2537     011B                     u1130:
  2538     011B                     l1740:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2541     011B  0837               	movf	vfpfcnvrt@fmt,w
  2542     011C  0086               	movwf	6
  2543     011D  0187               	clrf	7
  2544     011E  3001               	movlw	1
  2545     011F  0781               	addwf	1,f
  2546     0120  3141               	addfsr 1,1
  2547     0121  1803               	skipnc
  2548     0122  0A81               	incf	1,f
  2549     0123                     l1742:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2552     0123  0021               	movlb	1	; select bank1
  2553     0124  01AD               	clrf	_width^(0+128)
  2554     0125  01AE               	clrf	(_width+1)^(0+128)
  2555     0126  1003               	clrc
  2556     0127  3000               	movlw	0
  2557     0128  1803               	btfsc	3,0
  2558     0129  3001               	movlw	1
  2559     012A  0020               	movlb	0	; select bank0
  2560     012B  00ED               	movwf	_flags
  2561     012C                     l1744:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2564     012C  30FF               	movlw	255
  2565     012D  0021               	movlb	1	; select bank1
  2566     012E  00AF               	movwf	_prec^(0+128)
  2567     012F  30FF               	movlw	255
  2568     0130  00B0               	movwf	(_prec^(0+128)+1)
  2569     0131                     l1746:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  2572     0131  0020               	movlb	0	; select bank0
  2573     0132  01C1               	clrf	vfpfcnvrt@done
  2574     0133  01C2               	clrf	vfpfcnvrt@done+1
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  2577     0134  295C               	goto	l1756
  2578     0135                     l950:	
  2579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1080:            
      +                               case '0' :
  2580                           
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  2583     0135  14ED               	bsf	_flags,1
  2584     0136                     l1748:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  2587     0136  0837               	movf	vfpfcnvrt@fmt,w
  2588     0137  0086               	movwf	6
  2589     0138  0187               	clrf	7
  2590     0139  3001               	movlw	1
  2591     013A  0781               	addwf	1,f
  2592     013B  3141               	addfsr 1,1
  2593     013C  1803               	skipnc
  2594     013D  0A81               	incf	1,f
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  2597     013E  295C               	goto	l1756
  2598     013F                     l1750:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  2601     013F  3001               	movlw	1
  2602     0140  00C1               	movwf	vfpfcnvrt@done
  2603     0141  3000               	movlw	0
  2604     0142  00C2               	movwf	vfpfcnvrt@done+1
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  2607     0143  295C               	goto	l1756
  2608     0144                     l1754:
  2609     0144  0837               	movf	vfpfcnvrt@fmt,w
  2610     0145  0086               	movwf	6
  2611     0146  0187               	clrf	7
  2612     0147  3F40               	moviw [0]fsr1
  2613     0148  00B9               	movwf	??_vfpfcnvrt
  2614     0149  3F41               	moviw [1]fsr1
  2615     014A  00BA               	movwf	??_vfpfcnvrt+1
  2616     014B  0839               	movf	??_vfpfcnvrt,w
  2617     014C  0084               	movwf	4
  2618     014D  083A               	movf	??_vfpfcnvrt+1,w
  2619     014E  0085               	movwf	5
  2620     014F  0800               	movf	0,w	;code access
  2621     0150  00BB               	movwf	??_vfpfcnvrt+2
  2622     0151  01BC               	clrf	??_vfpfcnvrt+3
  2623                           
  2624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2625                           ; Switch size 1, requested type "simple"
  2626                           ; Number of cases is 1, Range of values is 0 to 0
  2627                           ; switch strategies available:
  2628                           ; Name         Instructions Cycles
  2629                           ; simple_byte            4     3 (average)
  2630                           ; direct_byte            8     6 (fixed)
  2631                           ; jumptable            260     6 (fixed)
  2632                           ;	Chosen strategy is simple_byte
  2633     0152  083C               	movf	??_vfpfcnvrt+3,w
  2634     0153  3A00               	xorlw	0	; case 0
  2635     0154  1903               	skipnz
  2636     0155  2957               	goto	l2004
  2637     0156  293F               	goto	l1750
  2638     0157                     l2004:
  2639                           
  2640                           ; Switch size 1, requested type "simple"
  2641                           ; Number of cases is 1, Range of values is 48 to 48
  2642                           ; switch strategies available:
  2643                           ; Name         Instructions Cycles
  2644                           ; simple_byte            4     3 (average)
  2645                           ; direct_byte           11     9 (fixed)
  2646                           ; jumptable            263     9 (fixed)
  2647                           ;	Chosen strategy is simple_byte
  2648     0157  083B               	movf	??_vfpfcnvrt+2,w
  2649     0158  3A30               	xorlw	48	; case 48
  2650     0159  1903               	skipnz
  2651     015A  2935               	goto	l950
  2652     015B  293F               	goto	l1750
  2653     015C                     l1756:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  2656     015C  0841               	movf	vfpfcnvrt@done,w
  2657     015D  0442               	iorwf	vfpfcnvrt@done+1,w
  2658     015E  1903               	btfsc	3,2
  2659     015F  2961               	goto	u1141
  2660     0160  2962               	goto	u1140
  2661     0161                     u1141:
  2662     0161  2944               	goto	l1754
  2663     0162                     u1140:
  2664     0162                     l1758:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1117:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2667     0162  0838               	movf	vfpfcnvrt@ap,w
  2668     0163  00F6               	movwf	read_prec_or_width@ap
  2669     0164  0837               	movf	vfpfcnvrt@fmt,w
  2670     0165  3181  21DA  3181   	fcall	_read_prec_or_width
  2671     0168  0877               	movf	?_read_prec_or_width+1,w
  2672     0169  0021               	movlb	1	; select bank1
  2673     016A  00AE               	movwf	(_width+1)^(0+128)
  2674     016B  0876               	movf	?_read_prec_or_width,w
  2675     016C  00AD               	movwf	_width^(0+128)
  2676     016D                     l1760:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1118:   if (width
      +                           < 0) {
  2679     016D  1FAE               	btfss	(_width+1)^(0+128),7
  2680     016E  2970               	goto	u1151
  2681     016F  2971               	goto	u1150
  2682     0170                     u1151:
  2683     0170  2979               	goto	l1766
  2684     0171                     u1150:
  2685     0171                     l1762:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1119:    flags |=
      +                           (1 << 0);
  2688     0171  0020               	movlb	0	; select bank0
  2689     0172  146D               	bsf	_flags,0
  2690     0173                     l1764:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1120:    width = 
      +                          -width;
  2693     0173  0021               	movlb	1	; select bank1
  2694     0174  09AD               	comf	_width^(0+128),f
  2695     0175  09AE               	comf	(_width+1)^(0+128),f
  2696     0176  0AAD               	incf	_width^(0+128),f
  2697     0177  1903               	skipnz
  2698     0178  0AAE               	incf	(_width+1)^(0+128),f
  2699     0179                     l1766:
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2702     0179  0020               	movlb	0	; select bank0
  2703     017A  0837               	movf	vfpfcnvrt@fmt,w
  2704     017B  0086               	movwf	6
  2705     017C  0187               	clrf	7
  2706     017D  3F40               	moviw [0]fsr1
  2707     017E  00C4               	movwf	vfpfcnvrt@cp
  2708     017F  3F41               	moviw [1]fsr1
  2709     0180  00C5               	movwf	vfpfcnvrt@cp+1
  2710     0181                     l1768:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2713     0181  0844               	movf	vfpfcnvrt@cp,w
  2714     0182  0084               	movwf	4
  2715     0183  0845               	movf	vfpfcnvrt@cp+1,w
  2716     0184  0085               	movwf	5
  2717     0185  0012               	moviw fsr0++
  2718     0186  3A64               	xorlw	100
  2719     0187  1903               	btfsc	3,2
  2720     0188  298A               	goto	u1161
  2721     0189  298B               	goto	u1160
  2722     018A                     u1161:
  2723     018A  2995               	goto	l1772
  2724     018B                     u1160:
  2725     018B                     l1770:
  2726     018B  0844               	movf	vfpfcnvrt@cp,w
  2727     018C  0084               	movwf	4
  2728     018D  0845               	movf	vfpfcnvrt@cp+1,w
  2729     018E  0085               	movwf	5
  2730     018F  0012               	moviw fsr0++
  2731     0190  3A69               	xorlw	105
  2732     0191  1D03               	btfss	3,2
  2733     0192  2994               	goto	u1171
  2734     0193  2995               	goto	u1170
  2735     0194                     u1171:
  2736     0194  29B7               	goto	l1780
  2737     0195                     u1170:
  2738     0195                     l1772:
  2739                           
  2740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2741     0195  0838               	movf	vfpfcnvrt@ap,w
  2742     0196  0086               	movwf	6
  2743     0197  0187               	clrf	7
  2744     0198  0801               	movf	1,w
  2745     0199  0084               	movwf	4
  2746     019A  0185               	clrf	5
  2747     019B  3002               	movlw	2
  2748     019C  0781               	addwf	1,f
  2749     019D  3F00               	moviw [0]fsr0
  2750     019E  00BD               	movwf	vfpfcnvrt@convarg
  2751     019F  3F01               	moviw [1]fsr0
  2752     01A0  00BE               	movwf	vfpfcnvrt@convarg+1
  2753     01A1                     l1774:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2756     01A1  0844               	movf	vfpfcnvrt@cp,w
  2757     01A2  3E01               	addlw	1
  2758     01A3  00B9               	movwf	??_vfpfcnvrt
  2759     01A4  3000               	movlw	0
  2760     01A5  3D45               	addwfc	vfpfcnvrt@cp+1,w
  2761     01A6  00BA               	movwf	??_vfpfcnvrt+1
  2762     01A7  0837               	movf	vfpfcnvrt@fmt,w
  2763     01A8  0086               	movwf	6
  2764     01A9  0187               	clrf	7
  2765     01AA  0839               	movf	??_vfpfcnvrt,w
  2766     01AB  3FC0               	movwi [0]fsr1
  2767     01AC  083A               	movf	??_vfpfcnvrt+1,w
  2768     01AD  3FC1               	movwi [1]fsr1
  2769     01AE                     l1776:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2772     01AE  083E               	movf	vfpfcnvrt@convarg+1,w
  2773     01AF  00AB               	movwf	dtoa@d+1
  2774     01B0  083D               	movf	vfpfcnvrt@convarg,w
  2775     01B1  00AA               	movwf	dtoa@d
  2776     01B2  0843               	movf	vfpfcnvrt@fp,w
  2777     01B3  3180  2029  3181   	fcall	_dtoa
  2778     01B6  29D9               	goto	l958
  2779     01B7                     l1780:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2782     01B7  0020               	movlb	0	; select bank0
  2783     01B8  0837               	movf	vfpfcnvrt@fmt,w
  2784     01B9  0086               	movwf	6
  2785     01BA  0187               	clrf	7
  2786     01BB  3001               	movlw	1
  2787     01BC  0781               	addwf	1,f
  2788     01BD  3141               	addfsr 1,1
  2789     01BE  1803               	skipnc
  2790     01BF  0A81               	incf	1,f
  2791     01C0  29D9               	goto	l958
  2792     01C1                     l1784:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2795     01C1  0837               	movf	vfpfcnvrt@fmt,w
  2796     01C2  0086               	movwf	6
  2797     01C3  0187               	clrf	7
  2798     01C4  3F40               	moviw [0]fsr1
  2799     01C5  00B9               	movwf	??_vfpfcnvrt
  2800     01C6  3F41               	moviw [1]fsr1
  2801     01C7  00BA               	movwf	??_vfpfcnvrt+1
  2802     01C8  0839               	movf	??_vfpfcnvrt,w
  2803     01C9  0084               	movwf	4
  2804     01CA  083A               	movf	??_vfpfcnvrt+1,w
  2805     01CB  0085               	movwf	5
  2806     01CC  0800               	movf	0,w	;code access
  2807     01CD  00BB               	movwf	??_vfpfcnvrt+2
  2808     01CE  01BC               	clrf	??_vfpfcnvrt+3
  2809     01CF  083B               	movf	??_vfpfcnvrt+2,w
  2810     01D0  00F0               	movwf	fputc@c
  2811     01D1  083C               	movf	??_vfpfcnvrt+3,w
  2812     01D2  00F1               	movwf	fputc@c+1
  2813     01D3  0843               	movf	vfpfcnvrt@fp,w
  2814     01D4  00F2               	movwf	fputc@fp
  2815     01D5  3182  22EC  3181   	fcall	_fputc
  2816     01D8  29B7               	goto	l1780
  2817     01D9                     l958:
  2818     01D9  0008               	return
  2819     01DA                     __end_of_vfpfcnvrt:
  2820                           
  2821                           	psect	text4
  2822     01DA                     __ptext4:	
  2823 ;; *************** function _read_prec_or_width *****************
  2824 ;; Defined at:
  2825 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  fmt             1    wreg     PTR PTR const unsigned c
  2828 ;;		 -> vfprintf@cfmt(2), 
  2829 ;;  ap              1    6[COMMON] PTR PTR void [1]
  2830 ;;		 -> sprintf@ap(1), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  fmt             1    3[BANK0 ] PTR PTR const unsigned c
  2833 ;;		 -> vfprintf@cfmt(2), 
  2834 ;;  c               1    0[BANK0 ] unsigned char 
  2835 ;;  n               2    1[BANK0 ] int 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2    6[COMMON] int 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;Total ram usage:        9 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 4
  2852 ;; This function calls:
  2853 ;;		___wmul
  2854 ;; This function is called by:
  2855 ;;		_vfpfcnvrt
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     01DA                     _read_prec_or_width:	
  2860                           ;psect for function _read_prec_or_width
  2861                           
  2862                           
  2863                           ;incstack = 0
  2864                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2865                           ;read_prec_or_width@fmt stored from wreg
  2866     01DA  0020               	movlb	0	; select bank0
  2867     01DB  00A3               	movwf	read_prec_or_width@fmt
  2868     01DC                     l1716:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2871     01DC  01A1               	clrf	read_prec_or_width@n
  2872     01DD  01A2               	clrf	read_prec_or_width@n+1
  2873     01DE                     l1718:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2876     01DE  0823               	movf	read_prec_or_width@fmt,w
  2877     01DF  0086               	movwf	6
  2878     01E0  0187               	clrf	7
  2879     01E1  3F40               	moviw [0]fsr1
  2880     01E2  00F8               	movwf	??_read_prec_or_width
  2881     01E3  3F41               	moviw [1]fsr1
  2882     01E4  00F9               	movwf	??_read_prec_or_width+1
  2883     01E5  0878               	movf	??_read_prec_or_width,w
  2884     01E6  0084               	movwf	4
  2885     01E7  0879               	movf	??_read_prec_or_width+1,w
  2886     01E8  0085               	movwf	5
  2887     01E9  0012               	moviw fsr0++
  2888     01EA  3A2A               	xorlw	42
  2889     01EB  1D03               	btfss	3,2
  2890     01EC  29EE               	goto	u1111
  2891     01ED  29EF               	goto	u1110
  2892     01EE                     u1111:
  2893     01EE  2A21               	goto	l1728
  2894     01EF                     u1110:
  2895     01EF                     l1720:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2898     01EF  0823               	movf	read_prec_or_width@fmt,w
  2899     01F0  0086               	movwf	6
  2900     01F1  0187               	clrf	7
  2901     01F2  3001               	movlw	1
  2902     01F3  0781               	addwf	1,f
  2903     01F4  3141               	addfsr 1,1
  2904     01F5  1803               	skipnc
  2905     01F6  0A81               	incf	1,f
  2906     01F7                     l1722:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2909     01F7  0876               	movf	read_prec_or_width@ap,w
  2910     01F8  0086               	movwf	6
  2911     01F9  0187               	clrf	7
  2912     01FA  0801               	movf	1,w
  2913     01FB  0084               	movwf	4
  2914     01FC  0185               	clrf	5
  2915     01FD  3002               	movlw	2
  2916     01FE  0781               	addwf	1,f
  2917     01FF  3F00               	moviw [0]fsr0
  2918     0200  00A1               	movwf	read_prec_or_width@n
  2919     0201  3F01               	moviw [1]fsr0
  2920     0202  00A2               	movwf	read_prec_or_width@n+1
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2923     0203  2A35               	goto	l1730
  2924     0204                     l1724:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2927     0204  0820               	movf	read_prec_or_width@c,w
  2928     0205  00F8               	movwf	??_read_prec_or_width
  2929     0206  01F9               	clrf	??_read_prec_or_width+1
  2930     0207  0822               	movf	read_prec_or_width@n+1,w
  2931     0208  00F1               	movwf	___wmul@multiplier+1
  2932     0209  0821               	movf	read_prec_or_width@n,w
  2933     020A  00F0               	movwf	___wmul@multiplier
  2934     020B  300A               	movlw	10
  2935     020C  00F2               	movwf	___wmul@multiplicand
  2936     020D  3000               	movlw	0
  2937     020E  00F3               	movwf	___wmul@multiplicand+1
  2938     020F  3184  240A  3181   	fcall	___wmul
  2939     0212  0878               	movf	??_read_prec_or_width,w
  2940     0213  0770               	addwf	?___wmul,w
  2941     0214  0020               	movlb	0	; select bank0
  2942     0215  00A1               	movwf	read_prec_or_width@n
  2943     0216  0879               	movf	??_read_prec_or_width+1,w
  2944     0217  3D71               	addwfc	?___wmul+1,w
  2945     0218  00A2               	movwf	read_prec_or_width@n+1
  2946     0219                     l1726:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2949     0219  0823               	movf	read_prec_or_width@fmt,w
  2950     021A  0086               	movwf	6
  2951     021B  0187               	clrf	7
  2952     021C  3001               	movlw	1
  2953     021D  0781               	addwf	1,f
  2954     021E  3141               	addfsr 1,1
  2955     021F  1803               	skipnc
  2956     0220  0A81               	incf	1,f
  2957     0221                     l1728:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2960     0221  0823               	movf	read_prec_or_width@fmt,w
  2961     0222  0086               	movwf	6
  2962     0223  0187               	clrf	7
  2963     0224  3F40               	moviw [0]fsr1
  2964     0225  00F8               	movwf	??_read_prec_or_width
  2965     0226  3F41               	moviw [1]fsr1
  2966     0227  00F9               	movwf	??_read_prec_or_width+1
  2967     0228  0878               	movf	??_read_prec_or_width,w
  2968     0229  0084               	movwf	4
  2969     022A  0879               	movf	??_read_prec_or_width+1,w
  2970     022B  0085               	movwf	5
  2971     022C  0800               	movf	0,w	;code access
  2972     022D  3ED0               	addlw	208
  2973     022E  00A0               	movwf	read_prec_or_width@c
  2974     022F  300A               	movlw	10
  2975     0230  0220               	subwf	read_prec_or_width@c,w
  2976     0231  1C03               	skipc
  2977     0232  2A34               	goto	u1121
  2978     0233  2A35               	goto	u1120
  2979     0234                     u1121:
  2980     0234  2A04               	goto	l1724
  2981     0235                     u1120:
  2982     0235                     l1730:
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2985     0235  0822               	movf	read_prec_or_width@n+1,w
  2986     0236  00F7               	movwf	?_read_prec_or_width+1
  2987     0237  0821               	movf	read_prec_or_width@n,w
  2988     0238  00F6               	movwf	?_read_prec_or_width
  2989     0239                     l943:
  2990     0239  0008               	return
  2991     023A                     __end_of_read_prec_or_width:
  2992                           
  2993                           	psect	text5
  2994     040A                     __ptext5:	
  2995 ;; *************** function ___wmul *****************
  2996 ;; Defined at:
  2997 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  multiplier      2    0[COMMON] unsigned int 
  3000 ;;  multiplicand    2    2[COMMON] unsigned int 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  product         2    4[COMMON] unsigned int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    0[COMMON] unsigned int 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;Total ram usage:        6 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 3
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_read_prec_or_width
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026     040A                     ___wmul:	
  3027                           ;psect for function ___wmul
  3028                           
  3029     040A                     l1540:	
  3030                           ;incstack = 0
  3031                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3032                           
  3033     040A  01F4               	clrf	___wmul@product
  3034     040B  01F5               	clrf	___wmul@product+1
  3035     040C                     l1542:
  3036     040C  1C70               	btfss	___wmul@multiplier,0
  3037     040D  2C0F               	goto	u701
  3038     040E  2C10               	goto	u700
  3039     040F                     u701:
  3040     040F  2C14               	goto	l422
  3041     0410                     u700:
  3042     0410                     l1544:
  3043     0410  0872               	movf	___wmul@multiplicand,w
  3044     0411  07F4               	addwf	___wmul@product,f
  3045     0412  0873               	movf	___wmul@multiplicand+1,w
  3046     0413  3DF5               	addwfc	___wmul@product+1,f
  3047     0414                     l422:
  3048     0414  3001               	movlw	1
  3049     0415                     u715:
  3050     0415  35F2               	lslf	___wmul@multiplicand,f
  3051     0416  0DF3               	rlf	___wmul@multiplicand+1,f
  3052     0417  0B89               	decfsz	9,f
  3053     0418  2C15               	goto	u715
  3054     0419                     l1546:
  3055     0419  3001               	movlw	1
  3056     041A                     u725:
  3057     041A  36F1               	lsrf	___wmul@multiplier+1,f
  3058     041B  0CF0               	rrf	___wmul@multiplier,f
  3059     041C  0B89               	decfsz	9,f
  3060     041D  2C1A               	goto	u725
  3061     041E                     l1548:
  3062     041E  0870               	movf	___wmul@multiplier,w
  3063     041F  0471               	iorwf	___wmul@multiplier+1,w
  3064     0420  1D03               	btfss	3,2
  3065     0421  2C23               	goto	u731
  3066     0422  2C24               	goto	u730
  3067     0423                     u731:
  3068     0423  2C0C               	goto	l1542
  3069     0424                     u730:
  3070     0424                     l1550:
  3071     0424  0875               	movf	___wmul@product+1,w
  3072     0425  00F1               	movwf	?___wmul+1
  3073     0426  0874               	movf	___wmul@product,w
  3074     0427  00F0               	movwf	?___wmul
  3075     0428                     l424:
  3076     0428  0008               	return
  3077     0429                     __end_of___wmul:
  3078                           
  3079                           	psect	text6
  3080     0029                     __ptext6:	
  3081 ;; *************** function _dtoa *****************
  3082 ;; Defined at:
  3083 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  fp              1    wreg     PTR struct _IO_FILE
  3086 ;;		 -> sprintf@f(11), 
  3087 ;;  d               2   10[BANK0 ] int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  fp              1   15[BANK0 ] PTR struct _IO_FILE
  3090 ;;		 -> sprintf@f(11), 
  3091 ;;  i               2   20[BANK0 ] int 
  3092 ;;  w               2   18[BANK0 ] int 
  3093 ;;  p               2   16[BANK0 ] int 
  3094 ;;  s               1   22[BANK0 ] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;Total ram usage:       13 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 7
  3111 ;; This function calls:
  3112 ;;		___awdiv
  3113 ;;		___awmod
  3114 ;;		_abs
  3115 ;;		_pad
  3116 ;; This function is called by:
  3117 ;;		_vfpfcnvrt
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121     0029                     _dtoa:	
  3122                           ;psect for function _dtoa
  3123                           
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3127                           ;dtoa@fp stored from wreg
  3128     0029  0020               	movlb	0	; select bank0
  3129     002A  00AF               	movwf	dtoa@fp
  3130     002B                     l1658:
  3131                           
  3132                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  3133     002B  1BAB               	btfsc	dtoa@d+1,7
  3134     002C  282E               	goto	u981
  3135     002D  2830               	goto	u980
  3136     002E                     u981:
  3137     002E  3001               	movlw	1
  3138     002F  2831               	goto	u990
  3139     0030                     u980:
  3140     0030  3000               	movlw	0
  3141     0031                     u990:
  3142     0031  00B6               	movwf	dtoa@s
  3143     0032                     l1660:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  3146     0032  0836               	movf	dtoa@s,w
  3147     0033  1903               	btfsc	3,2
  3148     0034  2836               	goto	u1001
  3149     0035  2837               	goto	u1000
  3150     0036                     u1001:
  3151     0036  283C               	goto	l1664
  3152     0037                     u1000:
  3153     0037                     l1662:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  3156     0037  09AA               	comf	dtoa@d,f
  3157     0038  09AB               	comf	dtoa@d+1,f
  3158     0039  0AAA               	incf	dtoa@d,f
  3159     003A  1903               	skipnz
  3160     003B  0AAB               	incf	dtoa@d+1,f
  3161     003C                     l1664:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 483:     if (!(pr
      +                          ec < 0)) {
  3164     003C  0021               	movlb	1	; select bank1
  3165     003D  1BB0               	btfsc	(_prec+1)^(0+128),7
  3166     003E  2840               	goto	u1011
  3167     003F  2841               	goto	u1010
  3168     0040                     u1011:
  3169     0040  2846               	goto	l1668
  3170     0041                     u1010:
  3171     0041                     l1666:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 484:         flag
      +                          s &= ~(1 << 1);
  3174     0041  30FD               	movlw	253
  3175     0042  0020               	movlb	0	; select bank0
  3176     0043  00AC               	movwf	??_dtoa
  3177     0044  082C               	movf	??_dtoa,w
  3178     0045  05ED               	andwf	_flags,f
  3179     0046                     l1668:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  3182     0046  0021               	movlb	1	; select bank1
  3183     0047  1FB0               	btfss	(_prec+1)^(0+128),7
  3184     0048  284A               	goto	u1021
  3185     0049  284B               	goto	u1020
  3186     004A                     u1021:
  3187     004A  2851               	goto	l1672
  3188     004B                     u1020:
  3189     004B                     l1670:
  3190     004B  3001               	movlw	1
  3191     004C  0020               	movlb	0	; select bank0
  3192     004D  00B0               	movwf	dtoa@p
  3193     004E  3000               	movlw	0
  3194     004F  00B1               	movwf	dtoa@p+1
  3195     0050  2858               	goto	l921
  3196     0051                     l1672:
  3197     0051  0830               	movf	(_prec+1)^(0+128),w
  3198     0052  0020               	movlb	0	; select bank0
  3199     0053  00B1               	movwf	dtoa@p+1
  3200     0054  0021               	movlb	1	; select bank1
  3201     0055  082F               	movf	_prec^(0+128),w
  3202     0056  0020               	movlb	0	; select bank0
  3203     0057  00B0               	movwf	dtoa@p
  3204     0058                     l921:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  3207     0058  0021               	movlb	1	; select bank1
  3208     0059  082E               	movf	(_width+1)^(0+128),w
  3209     005A  0020               	movlb	0	; select bank0
  3210     005B  00B3               	movwf	dtoa@w+1
  3211     005C  0021               	movlb	1	; select bank1
  3212     005D  082D               	movf	_width^(0+128),w
  3213     005E  0020               	movlb	0	; select bank0
  3214     005F  00B2               	movwf	dtoa@w
  3215     0060                     l1674:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  3218     0060  0836               	movf	dtoa@s,w
  3219     0061  1903               	btfsc	3,2
  3220     0062  2864               	goto	u1031
  3221     0063  2865               	goto	u1030
  3222     0064                     u1031:
  3223     0064  2879               	goto	l922
  3224     0065                     u1030:
  3225     0065                     l1676:
  3226                           
  3227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  3228     0065  30FF               	movlw	255
  3229     0066  07B2               	addwf	dtoa@w,f
  3230     0067  30FF               	movlw	255
  3231     0068  3DB3               	addwfc	dtoa@w+1,f
  3232     0069                     l1678:
  3233                           
  3234                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  3235     0069  0836               	movf	dtoa@s,w
  3236     006A  1D03               	btfss	3,2
  3237     006B  286D               	goto	u1041
  3238     006C  286E               	goto	u1040
  3239     006D                     u1041:
  3240     006D  2873               	goto	l1682
  3241     006E                     u1040:
  3242     006E                     l1680:
  3243     006E  302B               	movlw	43
  3244     006F  00AD               	movwf	_dtoa$989
  3245     0070  3000               	movlw	0
  3246     0071  00AE               	movwf	_dtoa$989+1
  3247     0072  2877               	goto	l926
  3248     0073                     l1682:
  3249     0073  302D               	movlw	45
  3250     0074  00AD               	movwf	_dtoa$989
  3251     0075  3000               	movlw	0
  3252     0076  00AE               	movwf	_dtoa$989+1
  3253     0077                     l926:
  3254     0077  082D               	movf	_dtoa$989,w
  3255     0078  00B6               	movwf	dtoa@s
  3256     0079                     l922:	
  3257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 496:     }
  3258                           
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  3261     0079  301F               	movlw	31
  3262     007A  00B4               	movwf	dtoa@i
  3263     007B  3000               	movlw	0
  3264     007C  00B5               	movwf	dtoa@i+1
  3265     007D                     l1684:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  3268     007D  0021               	movlb	1	; select bank1
  3269     007E  01D2               	clrf	(_dbuf^(0+128)+31)
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3272     007F  28B7               	goto	l1696
  3273     0080                     l1686:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  3276     0080  30FF               	movlw	255
  3277     0081  0020               	movlb	0	; select bank0
  3278     0082  07B4               	addwf	dtoa@i,f
  3279     0083  30FF               	movlw	255
  3280     0084  3DB5               	addwfc	dtoa@i+1,f
  3281     0085                     l1688:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3284     0085  0834               	movf	dtoa@i,w
  3285     0086  3EB3               	addlw	(low (_dbuf| 0))& (0+255)
  3286     0087  0086               	movwf	6
  3287     0088  0187               	clrf	7
  3288     0089  300A               	movlw	10
  3289     008A  00F0               	movwf	___awmod@divisor
  3290     008B  3000               	movlw	0
  3291     008C  00F1               	movwf	___awmod@divisor+1
  3292     008D  082B               	movf	dtoa@d+1,w
  3293     008E  00F3               	movwf	___awmod@dividend+1
  3294     008F  082A               	movf	dtoa@d,w
  3295     0090  00F2               	movwf	___awmod@dividend
  3296     0091  3182  2299  3180   	fcall	___awmod
  3297     0094  0871               	movf	?___awmod+1,w
  3298     0095  00F8               	movwf	abs@a+1
  3299     0096  0870               	movf	?___awmod,w
  3300     0097  00F7               	movwf	abs@a
  3301     0098  3184  2462  3180   	fcall	_abs
  3302     009B  0877               	movf	?_abs,w
  3303     009C  3E30               	addlw	48
  3304     009D  0081               	movwf	1
  3305     009E                     l1690:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  3308     009E  30FF               	movlw	255
  3309     009F  0020               	movlb	0	; select bank0
  3310     00A0  07B0               	addwf	dtoa@p,f
  3311     00A1  30FF               	movlw	255
  3312     00A2  3DB1               	addwfc	dtoa@p+1,f
  3313     00A3                     l1692:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  3316     00A3  30FF               	movlw	255
  3317     00A4  07B2               	addwf	dtoa@w,f
  3318     00A5  30FF               	movlw	255
  3319     00A6  3DB3               	addwfc	dtoa@w+1,f
  3320     00A7                     l1694:
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  3323     00A7  300A               	movlw	10
  3324     00A8  00F0               	movwf	___awdiv@divisor
  3325     00A9  3000               	movlw	0
  3326     00AA  00F1               	movwf	___awdiv@divisor+1
  3327     00AB  082B               	movf	dtoa@d+1,w
  3328     00AC  00F3               	movwf	___awdiv@dividend+1
  3329     00AD  082A               	movf	dtoa@d,w
  3330     00AE  00F2               	movwf	___awdiv@dividend
  3331     00AF  3182  223A  3180   	fcall	___awdiv
  3332     00B2  0871               	movf	?___awdiv+1,w
  3333     00B3  0020               	movlb	0	; select bank0
  3334     00B4  00AB               	movwf	dtoa@d+1
  3335     00B5  0870               	movf	?___awdiv,w
  3336     00B6  00AA               	movwf	dtoa@d
  3337     00B7                     l1696:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  3340     00B7  0020               	movlb	0	; select bank0
  3341     00B8  0835               	movf	dtoa@i+1,w
  3342     00B9  3A80               	xorlw	128
  3343     00BA  00AC               	movwf	??_dtoa
  3344     00BB  3080               	movlw	128
  3345     00BC  022C               	subwf	??_dtoa,w
  3346     00BD  1D03               	skipz
  3347     00BE  28C1               	goto	u1055
  3348     00BF  3001               	movlw	1
  3349     00C0  0234               	subwf	dtoa@i,w
  3350     00C1                     u1055:
  3351     00C1  1C03               	skipc
  3352     00C2  28C4               	goto	u1051
  3353     00C3  28C5               	goto	u1050
  3354     00C4                     u1051:
  3355     00C4  28EC               	goto	l1706
  3356     00C5                     u1050:
  3357     00C5                     l1698:
  3358     00C5  0020               	movlb	0	; select bank0
  3359     00C6  082A               	movf	dtoa@d,w
  3360     00C7  042B               	iorwf	dtoa@d+1,w
  3361     00C8  1D03               	btfss	3,2
  3362     00C9  28CB               	goto	u1061
  3363     00CA  28CC               	goto	u1060
  3364     00CB                     u1061:
  3365     00CB  2880               	goto	l1686
  3366     00CC                     u1060:
  3367     00CC                     l1700:
  3368     00CC  0831               	movf	dtoa@p+1,w
  3369     00CD  3A80               	xorlw	128
  3370     00CE  00AC               	movwf	??_dtoa
  3371     00CF  3080               	movlw	128
  3372     00D0  022C               	subwf	??_dtoa,w
  3373     00D1  1D03               	skipz
  3374     00D2  28D5               	goto	u1075
  3375     00D3  3001               	movlw	1
  3376     00D4  0230               	subwf	dtoa@p,w
  3377     00D5                     u1075:
  3378     00D5  1803               	skipnc
  3379     00D6  28D8               	goto	u1071
  3380     00D7  28D9               	goto	u1070
  3381     00D8                     u1071:
  3382     00D8  2880               	goto	l1686
  3383     00D9                     u1070:
  3384     00D9                     l1702:
  3385     00D9  0020               	movlb	0	; select bank0
  3386     00DA  0833               	movf	dtoa@w+1,w
  3387     00DB  3A80               	xorlw	128
  3388     00DC  00AC               	movwf	??_dtoa
  3389     00DD  3080               	movlw	128
  3390     00DE  022C               	subwf	??_dtoa,w
  3391     00DF  1D03               	skipz
  3392     00E0  28E3               	goto	u1085
  3393     00E1  3001               	movlw	1
  3394     00E2  0232               	subwf	dtoa@w,w
  3395     00E3                     u1085:
  3396     00E3  1C03               	skipc
  3397     00E4  28E6               	goto	u1081
  3398     00E5  28E7               	goto	u1080
  3399     00E6                     u1081:
  3400     00E6  28EC               	goto	l1706
  3401     00E7                     u1080:
  3402     00E7                     l1704:
  3403     00E7  0020               	movlb	0	; select bank0
  3404     00E8  18ED               	btfsc	_flags,1
  3405     00E9  28EB               	goto	u1091
  3406     00EA  28EC               	goto	u1090
  3407     00EB                     u1091:
  3408     00EB  2880               	goto	l1686
  3409     00EC                     u1090:
  3410     00EC                     l1706:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  3413     00EC  0020               	movlb	0	; select bank0
  3414     00ED  0836               	movf	dtoa@s,w
  3415     00EE  1903               	btfsc	3,2
  3416     00EF  28F1               	goto	u1101
  3417     00F0  28F2               	goto	u1100
  3418     00F1                     u1101:
  3419     00F1  28FC               	goto	l1712
  3420     00F2                     u1100:
  3421     00F2                     l1708:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  3424     00F2  30FF               	movlw	255
  3425     00F3  07B4               	addwf	dtoa@i,f
  3426     00F4  30FF               	movlw	255
  3427     00F5  3DB5               	addwfc	dtoa@i+1,f
  3428     00F6                     l1710:
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  3431     00F6  0834               	movf	dtoa@i,w
  3432     00F7  3EB3               	addlw	(low (_dbuf| 0))& (0+255)
  3433     00F8  0086               	movwf	6
  3434     00F9  0187               	clrf	7
  3435     00FA  0836               	movf	dtoa@s,w
  3436     00FB  0081               	movwf	1
  3437     00FC                     l1712:
  3438                           
  3439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3440     00FC  0834               	movf	dtoa@i,w
  3441     00FD  3EB3               	addlw	(low (_dbuf| 0))& (0+255)
  3442     00FE  00FB               	movwf	pad@buf
  3443     00FF  0833               	movf	dtoa@w+1,w
  3444     0100  00FD               	movwf	pad@p+1
  3445     0101  0832               	movf	dtoa@w,w
  3446     0102  00FC               	movwf	pad@p
  3447     0103  082F               	movf	dtoa@fp,w
  3448     0104  3183  233C  3180   	fcall	_pad
  3449     0107                     l935:
  3450     0107  0008               	return
  3451     0108                     __end_of_dtoa:
  3452                           
  3453                           	psect	text7
  3454     033C                     __ptext7:	
  3455 ;; *************** function _pad *****************
  3456 ;; Defined at:
  3457 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  fp              1    wreg     PTR struct _IO_FILE
  3460 ;;		 -> sprintf@f(11), 
  3461 ;;  buf             1   11[COMMON] PTR unsigned char 
  3462 ;;		 -> dbuf(32), 
  3463 ;;  p               2   12[COMMON] int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  fp              1    9[BANK0 ] PTR struct _IO_FILE
  3466 ;;		 -> sprintf@f(11), 
  3467 ;;  w               2    7[BANK0 ] int 
  3468 ;;  i               2    5[BANK0 ] int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3478 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;Total ram usage:        9 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 6
  3485 ;; This function calls:
  3486 ;;		_fputc
  3487 ;;		_fputs
  3488 ;; This function is called by:
  3489 ;;		_dtoa
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493     033C                     _pad:	
  3494                           ;psect for function _pad
  3495                           
  3496                           
  3497                           ;incstack = 0
  3498                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3499                           ;pad@fp stored from wreg
  3500     033C  0020               	movlb	0	; select bank0
  3501     033D  00A9               	movwf	pad@fp
  3502     033E                     l1636:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 158:     if (flags & (1 << 0)) {
  3505     033E  1C6D               	btfss	_flags,0
  3506     033F  2B41               	goto	u931
  3507     0340  2B42               	goto	u930
  3508     0341                     u931:
  3509     0341  2B48               	goto	l1640
  3510     0342                     u930:
  3511     0342                     l1638:
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 159:         fput
      +                          s((const char *)buf, fp);
  3514     0342  0829               	movf	pad@fp,w
  3515     0343  00F8               	movwf	fputs@fp
  3516     0344  087B               	movf	pad@buf,w
  3517     0345  3183  23E6  3183   	fcall	_fputs
  3518     0348                     l1640:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 164:     w = (p <
      +                           0) ? 0 : p;
  3521     0348  1BFD               	btfsc	pad@p+1,7
  3522     0349  2B4B               	goto	u941
  3523     034A  2B4C               	goto	u940
  3524     034B                     u941:
  3525     034B  2B52               	goto	l1644
  3526     034C                     u940:
  3527     034C                     l1642:
  3528     034C  087D               	movf	pad@p+1,w
  3529     034D  0020               	movlb	0	; select bank0
  3530     034E  00A8               	movwf	pad@w+1
  3531     034F  087C               	movf	pad@p,w
  3532     0350  00A7               	movwf	pad@w
  3533     0351  2B55               	goto	l908
  3534     0352                     l1644:
  3535     0352  0020               	movlb	0	; select bank0
  3536     0353  01A7               	clrf	pad@w
  3537     0354  01A8               	clrf	pad@w+1
  3538     0355                     l908:
  3539                           
  3540                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3541     0355  01A5               	clrf	pad@i
  3542     0356  01A6               	clrf	pad@i+1
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3545     0357  2B67               	goto	l1650
  3546     0358                     l1646:
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3549     0358  3020               	movlw	32
  3550     0359  00F0               	movwf	fputc@c
  3551     035A  3000               	movlw	0
  3552     035B  00F1               	movwf	fputc@c+1
  3553     035C  0020               	movlb	0	; select bank0
  3554     035D  0829               	movf	pad@fp,w
  3555     035E  00F2               	movwf	fputc@fp
  3556     035F  3182  22EC  3183   	fcall	_fputc
  3557     0362                     l1648:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3560     0362  3001               	movlw	1
  3561     0363  0020               	movlb	0	; select bank0
  3562     0364  07A5               	addwf	pad@i,f
  3563     0365  3000               	movlw	0
  3564     0366  3DA6               	addwfc	pad@i+1,f
  3565     0367                     l1650:
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3568     0367  0826               	movf	pad@i+1,w
  3569     0368  3A80               	xorlw	128
  3570     0369  00A4               	movwf	??_pad
  3571     036A  0828               	movf	pad@w+1,w
  3572     036B  3A80               	xorlw	128
  3573     036C  0224               	subwf	??_pad,w
  3574     036D  1D03               	skipz
  3575     036E  2B71               	goto	u955
  3576     036F  0827               	movf	pad@w,w
  3577     0370  0225               	subwf	pad@i,w
  3578     0371                     u955:
  3579     0371  1C03               	skipc
  3580     0372  2B74               	goto	u951
  3581     0373  2B75               	goto	u950
  3582     0374                     u951:
  3583     0374  2B58               	goto	l1646
  3584     0375                     u950:
  3585     0375                     l911:
  3586                           
  3587                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 173:     if (!(fl
      +                          ags & (1 << 0))) {
  3588     0375  0020               	movlb	0	; select bank0
  3589     0376  186D               	btfsc	_flags,0
  3590     0377  2B79               	goto	u961
  3591     0378  2B7A               	goto	u960
  3592     0379                     u961:
  3593     0379  2B80               	goto	l913
  3594     037A                     u960:
  3595     037A                     l1652:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3598     037A  0829               	movf	pad@fp,w
  3599     037B  00F8               	movwf	fputs@fp
  3600     037C  087B               	movf	pad@buf,w
  3601     037D  3183  23E6  3183   	fcall	_fputs
  3602     0380                     l913:
  3603     0380  0008               	return
  3604     0381                     __end_of_pad:
  3605                           
  3606                           	psect	text8
  3607     03E6                     __ptext8:	
  3608 ;; *************** function _fputs *****************
  3609 ;; Defined at:
  3610 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  s               1    wreg     PTR const unsigned char 
  3613 ;;		 -> dbuf(32), 
  3614 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3615 ;;		 -> sprintf@f(11), 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3618 ;;		 -> dbuf(32), 
  3619 ;;  i               2    1[BANK0 ] int 
  3620 ;;  c               1    0[BANK0 ] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  2    8[COMMON] int 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3630 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;Total ram usage:        7 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 5
  3637 ;; This function calls:
  3638 ;;		_fputc
  3639 ;; This function is called by:
  3640 ;;		_pad
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644     03E6                     _fputs:	
  3645                           ;psect for function _fputs
  3646                           
  3647                           
  3648                           ;incstack = 0
  3649                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3650                           ;fputs@s stored from wreg
  3651     03E6  0020               	movlb	0	; select bank0
  3652     03E7  00A3               	movwf	fputs@s
  3653     03E8                     l1532:
  3654     03E8  01A1               	clrf	fputs@i
  3655     03E9  01A2               	clrf	fputs@i+1
  3656     03EA  2BFC               	goto	l1538
  3657     03EB                     l1534:
  3658     03EB  0820               	movf	fputs@c,w
  3659     03EC  00F9               	movwf	??_fputs
  3660     03ED  01FA               	clrf	??_fputs+1
  3661     03EE  0879               	movf	??_fputs,w
  3662     03EF  00F0               	movwf	fputc@c
  3663     03F0  087A               	movf	??_fputs+1,w
  3664     03F1  00F1               	movwf	fputc@c+1
  3665     03F2  0878               	movf	fputs@fp,w
  3666     03F3  00F2               	movwf	fputc@fp
  3667     03F4  3182  22EC  3183   	fcall	_fputc
  3668     03F7                     l1536:
  3669     03F7  3001               	movlw	1
  3670     03F8  0020               	movlb	0	; select bank0
  3671     03F9  07A1               	addwf	fputs@i,f
  3672     03FA  3000               	movlw	0
  3673     03FB  3DA2               	addwfc	fputs@i+1,f
  3674     03FC                     l1538:
  3675     03FC  0821               	movf	fputs@i,w
  3676     03FD  0723               	addwf	fputs@s,w
  3677     03FE  00F9               	movwf	??_fputs
  3678     03FF  0879               	movf	??_fputs,w
  3679     0400  0086               	movwf	6
  3680     0401  0187               	clrf	7
  3681     0402  0801               	movf	1,w
  3682     0403  00A0               	movwf	fputs@c
  3683     0404  0820               	movf	fputs@c,w
  3684     0405  1D03               	btfss	3,2
  3685     0406  2C08               	goto	u691
  3686     0407  2C09               	goto	u690
  3687     0408                     u691:
  3688     0408  2BEB               	goto	l1534
  3689     0409                     u690:
  3690     0409                     l991:
  3691     0409  0008               	return
  3692     040A                     __end_of_fputs:
  3693                           
  3694                           	psect	text9
  3695     02EC                     __ptext9:	
  3696 ;; *************** function _fputc *****************
  3697 ;; Defined at:
  3698 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  c               2    0[COMMON] int 
  3701 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3702 ;;		 -> sprintf@f(11), 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;		None
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2    0[COMMON] int 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3714 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;Total ram usage:        8 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 4
  3721 ;; This function calls:
  3722 ;;		_putch
  3723 ;; This function is called by:
  3724 ;;		_pad
  3725 ;;		_vfpfcnvrt
  3726 ;;		_fputs
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730     02EC                     _fputc:	
  3731                           ;psect for function _fputc
  3732                           
  3733     02EC                     l1516:	
  3734                           ;incstack = 0
  3735                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3736                           
  3737     02EC  0872               	movf	fputc@fp,w
  3738     02ED  1903               	btfsc	3,2
  3739     02EE  2AF0               	goto	u651
  3740     02EF  2AF1               	goto	u650
  3741     02F0                     u651:
  3742     02F0  2AF6               	goto	l1520
  3743     02F1                     u650:
  3744     02F1                     l1518:
  3745     02F1  0872               	movf	fputc@fp,w
  3746     02F2  1D03               	btfss	3,2
  3747     02F3  2AF5               	goto	u661
  3748     02F4  2AF6               	goto	u660
  3749     02F5                     u661:
  3750     02F5  2AFB               	goto	l1522
  3751     02F6                     u660:
  3752     02F6                     l1520:
  3753     02F6  0870               	movf	fputc@c,w
  3754     02F7  3185  2576  3182   	fcall	_putch
  3755     02FA  2B3B               	goto	l983
  3756     02FB                     l1522:
  3757     02FB  0872               	movf	fputc@fp,w
  3758     02FC  3E09               	addlw	9
  3759     02FD  0086               	movwf	6
  3760     02FE  0187               	clrf	7
  3761     02FF  0016               	moviw fsr1++
  3762     0300  0401               	iorwf	1,w
  3763     0301  1903               	btfsc	3,2
  3764     0302  2B04               	goto	u671
  3765     0303  2B05               	goto	u670
  3766     0304                     u671:
  3767     0304  2B23               	goto	l1526
  3768     0305                     u670:
  3769     0305                     l1524:
  3770     0305  0872               	movf	fputc@fp,w
  3771     0306  3E09               	addlw	9
  3772     0307  0086               	movwf	6
  3773     0308  0187               	clrf	7
  3774     0309  3F40               	moviw [0]fsr1
  3775     030A  00F3               	movwf	??_fputc
  3776     030B  3F41               	moviw [1]fsr1
  3777     030C  00F4               	movwf	??_fputc+1
  3778     030D  0872               	movf	fputc@fp,w
  3779     030E  3E02               	addlw	2
  3780     030F  0086               	movwf	6
  3781     0310  0187               	clrf	7
  3782     0311  3F40               	moviw [0]fsr1
  3783     0312  00F5               	movwf	??_fputc+2
  3784     0313  3F41               	moviw [1]fsr1
  3785     0314  00F6               	movwf	??_fputc+3
  3786     0315  0876               	movf	??_fputc+3,w
  3787     0316  3A80               	xorlw	128
  3788     0317  00F7               	movwf	??_fputc+4
  3789     0318  0874               	movf	??_fputc+1,w
  3790     0319  3A80               	xorlw	128
  3791     031A  0277               	subwf	??_fputc+4,w
  3792     031B  1D03               	skipz
  3793     031C  2B1F               	goto	u685
  3794     031D  0873               	movf	??_fputc,w
  3795     031E  0275               	subwf	??_fputc+2,w
  3796     031F                     u685:
  3797     031F  1803               	skipnc
  3798     0320  2B22               	goto	u681
  3799     0321  2B23               	goto	u680
  3800     0322                     u681:
  3801     0322  2B3B               	goto	l983
  3802     0323                     u680:
  3803     0323                     l1526:
  3804     0323  0872               	movf	fputc@fp,w
  3805     0324  0086               	movwf	6
  3806     0325  0187               	clrf	7
  3807     0326  0872               	movf	fputc@fp,w
  3808     0327  3E02               	addlw	2
  3809     0328  0084               	movwf	4
  3810     0329  0185               	clrf	5
  3811     032A  0800               	movf	0,w
  3812     032B  0701               	addwf	1,w
  3813     032C  00F3               	movwf	??_fputc
  3814     032D  0873               	movf	??_fputc,w
  3815     032E  0086               	movwf	6
  3816     032F  0187               	clrf	7
  3817     0330  0870               	movf	fputc@c,w
  3818     0331  0081               	movwf	1
  3819     0332                     l1528:
  3820     0332  0872               	movf	fputc@fp,w
  3821     0333  3E02               	addlw	2
  3822     0334  0086               	movwf	6
  3823     0335  0187               	clrf	7
  3824     0336  3001               	movlw	1
  3825     0337  0781               	addwf	1,f
  3826     0338  3141               	addfsr 1,1
  3827     0339  1803               	skipnc
  3828     033A  0A81               	incf	1,f
  3829     033B                     l983:
  3830     033B  0008               	return
  3831     033C                     __end_of_fputc:
  3832                           
  3833                           	psect	text10
  3834     0576                     __ptext10:	
  3835 ;; *************** function _putch *****************
  3836 ;; Defined at:
  3837 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  c               1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  c               1    0[COMMON] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 3
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_fputc
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865     0576                     _putch:	
  3866                           ;psect for function _putch
  3867                           
  3868     0576                     l994:	
  3869                           ;incstack = 0
  3870                           ; Regs used in _putch: [wreg]
  3871                           
  3872     0576  0008               	return
  3873     0577                     __end_of_putch:
  3874                           
  3875                           	psect	text11
  3876     0462                     __ptext11:	
  3877 ;; *************** function _abs *****************
  3878 ;; Defined at:
  3879 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  a               2    7[COMMON] int 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  2    7[COMMON] int 
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;Total ram usage:        4 bytes
  3898 ;; Hardware stack levels used: 1
  3899 ;; Hardware stack levels required when called: 3
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_dtoa
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907     0462                     _abs:	
  3908                           ;psect for function _abs
  3909                           
  3910     0462                     l1654:	
  3911                           ;incstack = 0
  3912                           ; Regs used in _abs: [wreg+status,2+status,0]
  3913                           
  3914     0462  0878               	movf	abs@a+1,w
  3915     0463  3A80               	xorlw	128
  3916     0464  00F9               	movwf	??_abs
  3917     0465  3080               	movlw	128
  3918     0466  0279               	subwf	??_abs,w
  3919     0467  1D03               	skipz
  3920     0468  2C6B               	goto	u975
  3921     0469  3001               	movlw	1
  3922     046A  0277               	subwf	abs@a,w
  3923     046B                     u975:
  3924     046B  1803               	skipnc
  3925     046C  2C6E               	goto	u971
  3926     046D  2C6F               	goto	u970
  3927     046E                     u971:
  3928     046E  2C7B               	goto	l968
  3929     046F                     u970:
  3930     046F                     l1656:
  3931     046F  0977               	comf	abs@a,w
  3932     0470  00F9               	movwf	??_abs
  3933     0471  0978               	comf	abs@a+1,w
  3934     0472  00FA               	movwf	??_abs+1
  3935     0473  0AF9               	incf	??_abs,f
  3936     0474  1903               	skipnz
  3937     0475  0AFA               	incf	??_abs+1,f
  3938     0476  0879               	movf	??_abs,w
  3939     0477  00F7               	movwf	?_abs
  3940     0478  087A               	movf	??_abs+1,w
  3941     0479  00F8               	movwf	?_abs+1
  3942     047A  2C7B               	goto	l971
  3943     047B                     l968:
  3944     047B                     l971:
  3945     047B  0008               	return
  3946     047C                     __end_of_abs:
  3947                           
  3948                           	psect	text12
  3949     0299                     __ptext12:	
  3950 ;; *************** function ___awmod *****************
  3951 ;; Defined at:
  3952 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  divisor         2    0[COMMON] int 
  3955 ;;  dividend        2    2[COMMON] int 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  sign            1    6[COMMON] unsigned char 
  3958 ;;  counter         1    5[COMMON] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  2    0[COMMON] int 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3972 ;;Total ram usage:        7 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 3
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_dtoa
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982     0299                     ___awmod:	
  3983                           ;psect for function ___awmod
  3984                           
  3985     0299                     l1598:	
  3986                           ;incstack = 0
  3987                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3988                           
  3989     0299  01F6               	clrf	___awmod@sign
  3990     029A                     l1600:
  3991     029A  1FF3               	btfss	___awmod@dividend+1,7
  3992     029B  2A9D               	goto	u841
  3993     029C  2A9E               	goto	u840
  3994     029D                     u841:
  3995     029D  2AA5               	goto	l1606
  3996     029E                     u840:
  3997     029E                     l1602:
  3998     029E  09F2               	comf	___awmod@dividend,f
  3999     029F  09F3               	comf	___awmod@dividend+1,f
  4000     02A0  0AF2               	incf	___awmod@dividend,f
  4001     02A1  1903               	skipnz
  4002     02A2  0AF3               	incf	___awmod@dividend+1,f
  4003     02A3                     l1604:
  4004     02A3  01F6               	clrf	___awmod@sign
  4005     02A4  0AF6               	incf	___awmod@sign,f
  4006     02A5                     l1606:
  4007     02A5  1FF1               	btfss	___awmod@divisor+1,7
  4008     02A6  2AA8               	goto	u851
  4009     02A7  2AA9               	goto	u850
  4010     02A8                     u851:
  4011     02A8  2AAE               	goto	l1610
  4012     02A9                     u850:
  4013     02A9                     l1608:
  4014     02A9  09F0               	comf	___awmod@divisor,f
  4015     02AA  09F1               	comf	___awmod@divisor+1,f
  4016     02AB  0AF0               	incf	___awmod@divisor,f
  4017     02AC  1903               	skipnz
  4018     02AD  0AF1               	incf	___awmod@divisor+1,f
  4019     02AE                     l1610:
  4020     02AE  0870               	movf	___awmod@divisor,w
  4021     02AF  0471               	iorwf	___awmod@divisor+1,w
  4022     02B0  1903               	btfsc	3,2
  4023     02B1  2AB3               	goto	u861
  4024     02B2  2AB4               	goto	u860
  4025     02B3                     u861:
  4026     02B3  2ADD               	goto	l1628
  4027     02B4                     u860:
  4028     02B4                     l1612:
  4029     02B4  01F5               	clrf	___awmod@counter
  4030     02B5  0AF5               	incf	___awmod@counter,f
  4031     02B6  2AC0               	goto	l1618
  4032     02B7                     l1614:
  4033     02B7  3001               	movlw	1
  4034     02B8                     u875:
  4035     02B8  35F0               	lslf	___awmod@divisor,f
  4036     02B9  0DF1               	rlf	___awmod@divisor+1,f
  4037     02BA  0B89               	decfsz	9,f
  4038     02BB  2AB8               	goto	u875
  4039     02BC                     l1616:
  4040     02BC  3001               	movlw	1
  4041     02BD  00F4               	movwf	??___awmod
  4042     02BE  0874               	movf	??___awmod,w
  4043     02BF  07F5               	addwf	___awmod@counter,f
  4044     02C0                     l1618:
  4045     02C0  1FF1               	btfss	___awmod@divisor+1,7
  4046     02C1  2AC3               	goto	u881
  4047     02C2  2AC4               	goto	u880
  4048     02C3                     u881:
  4049     02C3  2AB7               	goto	l1614
  4050     02C4                     u880:
  4051     02C4                     l1620:
  4052     02C4  0871               	movf	___awmod@divisor+1,w
  4053     02C5  0273               	subwf	___awmod@dividend+1,w
  4054     02C6  1D03               	skipz
  4055     02C7  2ACA               	goto	u895
  4056     02C8  0870               	movf	___awmod@divisor,w
  4057     02C9  0272               	subwf	___awmod@dividend,w
  4058     02CA                     u895:
  4059     02CA  1C03               	skipc
  4060     02CB  2ACD               	goto	u891
  4061     02CC  2ACE               	goto	u890
  4062     02CD                     u891:
  4063     02CD  2AD2               	goto	l1624
  4064     02CE                     u890:
  4065     02CE                     l1622:
  4066     02CE  0870               	movf	___awmod@divisor,w
  4067     02CF  02F2               	subwf	___awmod@dividend,f
  4068     02D0  0871               	movf	___awmod@divisor+1,w
  4069     02D1  3BF3               	subwfb	___awmod@dividend+1,f
  4070     02D2                     l1624:
  4071     02D2  3001               	movlw	1
  4072     02D3                     u905:
  4073     02D3  36F1               	lsrf	___awmod@divisor+1,f
  4074     02D4  0CF0               	rrf	___awmod@divisor,f
  4075     02D5  0B89               	decfsz	9,f
  4076     02D6  2AD3               	goto	u905
  4077     02D7                     l1626:
  4078     02D7  3001               	movlw	1
  4079     02D8  02F5               	subwf	___awmod@counter,f
  4080     02D9  1D03               	btfss	3,2
  4081     02DA  2ADC               	goto	u911
  4082     02DB  2ADD               	goto	u910
  4083     02DC                     u911:
  4084     02DC  2AC4               	goto	l1620
  4085     02DD                     u910:
  4086     02DD                     l1628:
  4087     02DD  0876               	movf	___awmod@sign,w
  4088     02DE  1903               	btfsc	3,2
  4089     02DF  2AE1               	goto	u921
  4090     02E0  2AE2               	goto	u920
  4091     02E1                     u921:
  4092     02E1  2AE7               	goto	l1632
  4093     02E2                     u920:
  4094     02E2                     l1630:
  4095     02E2  09F2               	comf	___awmod@dividend,f
  4096     02E3  09F3               	comf	___awmod@dividend+1,f
  4097     02E4  0AF2               	incf	___awmod@dividend,f
  4098     02E5  1903               	skipnz
  4099     02E6  0AF3               	incf	___awmod@dividend+1,f
  4100     02E7                     l1632:
  4101     02E7  0873               	movf	___awmod@dividend+1,w
  4102     02E8  00F1               	movwf	?___awmod+1
  4103     02E9  0872               	movf	___awmod@dividend,w
  4104     02EA  00F0               	movwf	?___awmod
  4105     02EB                     l588:
  4106     02EB  0008               	return
  4107     02EC                     __end_of___awmod:
  4108                           
  4109                           	psect	text13
  4110     023A                     __ptext13:	
  4111 ;; *************** function ___awdiv *****************
  4112 ;; Defined at:
  4113 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  divisor         2    0[COMMON] int 
  4116 ;;  dividend        2    2[COMMON] int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  quotient        2    7[COMMON] int 
  4119 ;;  sign            1    6[COMMON] unsigned char 
  4120 ;;  counter         1    5[COMMON] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  2    0[COMMON] int 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4131 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;Total ram usage:        9 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 3
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_dtoa
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144     023A                     ___awdiv:	
  4145                           ;psect for function ___awdiv
  4146                           
  4147     023A                     l1554:	
  4148                           ;incstack = 0
  4149                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4150                           
  4151     023A  01F6               	clrf	___awdiv@sign
  4152     023B                     l1556:
  4153     023B  1FF1               	btfss	___awdiv@divisor+1,7
  4154     023C  2A3E               	goto	u741
  4155     023D  2A3F               	goto	u740
  4156     023E                     u741:
  4157     023E  2A46               	goto	l1562
  4158     023F                     u740:
  4159     023F                     l1558:
  4160     023F  09F0               	comf	___awdiv@divisor,f
  4161     0240  09F1               	comf	___awdiv@divisor+1,f
  4162     0241  0AF0               	incf	___awdiv@divisor,f
  4163     0242  1903               	skipnz
  4164     0243  0AF1               	incf	___awdiv@divisor+1,f
  4165     0244                     l1560:
  4166     0244  01F6               	clrf	___awdiv@sign
  4167     0245  0AF6               	incf	___awdiv@sign,f
  4168     0246                     l1562:
  4169     0246  1FF3               	btfss	___awdiv@dividend+1,7
  4170     0247  2A49               	goto	u751
  4171     0248  2A4A               	goto	u750
  4172     0249                     u751:
  4173     0249  2A53               	goto	l1568
  4174     024A                     u750:
  4175     024A                     l1564:
  4176     024A  09F2               	comf	___awdiv@dividend,f
  4177     024B  09F3               	comf	___awdiv@dividend+1,f
  4178     024C  0AF2               	incf	___awdiv@dividend,f
  4179     024D  1903               	skipnz
  4180     024E  0AF3               	incf	___awdiv@dividend+1,f
  4181     024F                     l1566:
  4182     024F  3001               	movlw	1
  4183     0250  00F4               	movwf	??___awdiv
  4184     0251  0874               	movf	??___awdiv,w
  4185     0252  06F6               	xorwf	___awdiv@sign,f
  4186     0253                     l1568:
  4187     0253  01F7               	clrf	___awdiv@quotient
  4188     0254  01F8               	clrf	___awdiv@quotient+1
  4189     0255                     l1570:
  4190     0255  0870               	movf	___awdiv@divisor,w
  4191     0256  0471               	iorwf	___awdiv@divisor+1,w
  4192     0257  1903               	btfsc	3,2
  4193     0258  2A5A               	goto	u761
  4194     0259  2A5B               	goto	u760
  4195     025A                     u761:
  4196     025A  2A8A               	goto	l1590
  4197     025B                     u760:
  4198     025B                     l1572:
  4199     025B  01F5               	clrf	___awdiv@counter
  4200     025C  0AF5               	incf	___awdiv@counter,f
  4201     025D  2A67               	goto	l1578
  4202     025E                     l1574:
  4203     025E  3001               	movlw	1
  4204     025F                     u775:
  4205     025F  35F0               	lslf	___awdiv@divisor,f
  4206     0260  0DF1               	rlf	___awdiv@divisor+1,f
  4207     0261  0B89               	decfsz	9,f
  4208     0262  2A5F               	goto	u775
  4209     0263                     l1576:
  4210     0263  3001               	movlw	1
  4211     0264  00F4               	movwf	??___awdiv
  4212     0265  0874               	movf	??___awdiv,w
  4213     0266  07F5               	addwf	___awdiv@counter,f
  4214     0267                     l1578:
  4215     0267  1FF1               	btfss	___awdiv@divisor+1,7
  4216     0268  2A6A               	goto	u781
  4217     0269  2A6B               	goto	u780
  4218     026A                     u781:
  4219     026A  2A5E               	goto	l1574
  4220     026B                     u780:
  4221     026B                     l1580:
  4222     026B  3001               	movlw	1
  4223     026C                     u795:
  4224     026C  35F7               	lslf	___awdiv@quotient,f
  4225     026D  0DF8               	rlf	___awdiv@quotient+1,f
  4226     026E  0B89               	decfsz	9,f
  4227     026F  2A6C               	goto	u795
  4228     0270  0871               	movf	___awdiv@divisor+1,w
  4229     0271  0273               	subwf	___awdiv@dividend+1,w
  4230     0272  1D03               	skipz
  4231     0273  2A76               	goto	u805
  4232     0274  0870               	movf	___awdiv@divisor,w
  4233     0275  0272               	subwf	___awdiv@dividend,w
  4234     0276                     u805:
  4235     0276  1C03               	skipc
  4236     0277  2A79               	goto	u801
  4237     0278  2A7A               	goto	u800
  4238     0279                     u801:
  4239     0279  2A7F               	goto	l1586
  4240     027A                     u800:
  4241     027A                     l1582:
  4242     027A  0870               	movf	___awdiv@divisor,w
  4243     027B  02F2               	subwf	___awdiv@dividend,f
  4244     027C  0871               	movf	___awdiv@divisor+1,w
  4245     027D  3BF3               	subwfb	___awdiv@dividend+1,f
  4246     027E                     l1584:
  4247     027E  1477               	bsf	___awdiv@quotient,0
  4248     027F                     l1586:
  4249     027F  3001               	movlw	1
  4250     0280                     u815:
  4251     0280  36F1               	lsrf	___awdiv@divisor+1,f
  4252     0281  0CF0               	rrf	___awdiv@divisor,f
  4253     0282  0B89               	decfsz	9,f
  4254     0283  2A80               	goto	u815
  4255     0284                     l1588:
  4256     0284  3001               	movlw	1
  4257     0285  02F5               	subwf	___awdiv@counter,f
  4258     0286  1D03               	btfss	3,2
  4259     0287  2A89               	goto	u821
  4260     0288  2A8A               	goto	u820
  4261     0289                     u821:
  4262     0289  2A6B               	goto	l1580
  4263     028A                     u820:
  4264     028A                     l1590:
  4265     028A  0876               	movf	___awdiv@sign,w
  4266     028B  1903               	btfsc	3,2
  4267     028C  2A8E               	goto	u831
  4268     028D  2A8F               	goto	u830
  4269     028E                     u831:
  4270     028E  2A94               	goto	l1594
  4271     028F                     u830:
  4272     028F                     l1592:
  4273     028F  09F7               	comf	___awdiv@quotient,f
  4274     0290  09F8               	comf	___awdiv@quotient+1,f
  4275     0291  0AF7               	incf	___awdiv@quotient,f
  4276     0292  1903               	skipnz
  4277     0293  0AF8               	incf	___awdiv@quotient+1,f
  4278     0294                     l1594:
  4279     0294  0878               	movf	___awdiv@quotient+1,w
  4280     0295  00F1               	movwf	?___awdiv+1
  4281     0296  0877               	movf	___awdiv@quotient,w
  4282     0297  00F0               	movwf	?___awdiv
  4283     0298                     l575:
  4284     0298  0008               	return
  4285     0299                     __end_of___awdiv:
  4286                           
  4287                           	psect	text14
  4288     04C8                     __ptext14:	
  4289 ;; *************** function _lcd_string *****************
  4290 ;; Defined at:
  4291 ;;		line 130 in file "main.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  ptr             1    wreg     PTR unsigned char 
  4294 ;;		 -> main@arr(13), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;  ptr             1    3[COMMON] PTR unsigned char 
  4297 ;;		 -> main@arr(13), 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;Total ram usage:        2 bytes
  4312 ;; Hardware stack levels used: 1
  4313 ;; Hardware stack levels required when called: 4
  4314 ;; This function calls:
  4315 ;;		_lcd_data
  4316 ;; This function is called by:
  4317 ;;		_main
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321     04C8                     _lcd_string:	
  4322                           ;psect for function _lcd_string
  4323                           
  4324                           
  4325                           ;incstack = 0
  4326                           ; Regs used in _lcd_string: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4327                           ;lcd_string@ptr stored from wreg
  4328     04C8  00F3               	movwf	lcd_string@ptr
  4329     04C9                     l1924:
  4330                           
  4331                           ;main.c: 130: void lcd_string(uint8_t *ptr);main.c: 131: {;main.c: 132:     while(*ptr !
      +                          = '\0')
  4332     04C9  2CD5               	goto	l1930
  4333     04CA                     l1926:
  4334                           
  4335                           ;main.c: 133:     {;main.c: 134:         lcd_data(*ptr++);
  4336     04CA  0873               	movf	lcd_string@ptr,w
  4337     04CB  0086               	movwf	6
  4338     04CC  0187               	clrf	7
  4339     04CD  0801               	movf	1,w
  4340     04CE  3184  247C  3184   	fcall	_lcd_data
  4341     04D1                     l1928:
  4342     04D1  3001               	movlw	1
  4343     04D2  00F2               	movwf	??_lcd_string
  4344     04D3  0872               	movf	??_lcd_string,w
  4345     04D4  07F3               	addwf	lcd_string@ptr,f
  4346     04D5                     l1930:
  4347                           
  4348                           ;main.c: 132:     while(*ptr != '\0')
  4349     04D5  0873               	movf	lcd_string@ptr,w
  4350     04D6  0086               	movwf	6
  4351     04D7  0187               	clrf	7
  4352     04D8  0801               	movf	1,w
  4353     04D9  1D03               	btfss	3,2
  4354     04DA  2CDC               	goto	u1211
  4355     04DB  2CDD               	goto	u1210
  4356     04DC                     u1211:
  4357     04DC  2CCA               	goto	l1926
  4358     04DD                     u1210:
  4359     04DD                     l272:
  4360     04DD  0008               	return
  4361     04DE                     __end_of_lcd_string:
  4362                           
  4363                           	psect	text15
  4364     047C                     __ptext15:	
  4365 ;; *************** function _lcd_data *****************
  4366 ;; Defined at:
  4367 ;;		line 110 in file "main.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  data            1    wreg     unsigned char 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  data            1    1[COMMON] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;Total ram usage:        2 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 3
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_lcd_string
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395     047C                     _lcd_data:	
  4396                           ;psect for function _lcd_data
  4397                           
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _lcd_data: [wreg]
  4401                           ;lcd_data@data stored from wreg
  4402     047C  00F1               	movwf	lcd_data@data
  4403     047D                     l1880:
  4404                           
  4405                           ;main.c: 110: void lcd_data(uint8_t data);main.c: 111: {;main.c: 112:     PORTC = data;
  4406     047D  0871               	movf	lcd_data@data,w
  4407     047E  0020               	movlb	0	; select bank0
  4408     047F  008E               	movwf	14	;volatile
  4409     0480                     l1882:
  4410                           
  4411                           ;main.c: 113:     RB4 = 1;
  4412     0480  160D               	bsf	13,4	;volatile
  4413     0481                     l1884:
  4414                           
  4415                           ;main.c: 114:     RB5 = 0;
  4416     0481  128D               	bcf	13,5	;volatile
  4417     0482                     l1886:
  4418                           
  4419                           ;main.c: 115:     RB6 = 1;
  4420     0482  170D               	bsf	13,6	;volatile
  4421                           
  4422                           ;main.c: 116:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4423     0483  3006               	movlw	6
  4424     0484  00F0               	movwf	??_lcd_data
  4425     0485  3030               	movlw	48
  4426     0486                     u1287:
  4427     0486  0B89               	decfsz	9,f
  4428     0487  2C86               	goto	u1287
  4429     0488  0BF0               	decfsz	??_lcd_data,f
  4430     0489  2C86               	goto	u1287
  4431     048A  3200               	nop2
  4432     048B                     l1888:
  4433                           
  4434                           ;main.c: 117:     RB6 = 0;
  4435     048B  0020               	movlb	0	; select bank0
  4436     048C  130D               	bcf	13,6	;volatile
  4437                           
  4438                           ;main.c: 118:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4439     048D  3006               	movlw	6
  4440     048E  00F0               	movwf	??_lcd_data
  4441     048F  3030               	movlw	48
  4442     0490                     u1297:
  4443     0490  0B89               	decfsz	9,f
  4444     0491  2C90               	goto	u1297
  4445     0492  0BF0               	decfsz	??_lcd_data,f
  4446     0493  2C90               	goto	u1297
  4447     0494  3200               	nop2
  4448     0495                     l263:
  4449     0495  0008               	return
  4450     0496                     __end_of_lcd_data:
  4451                           
  4452                           	psect	text16
  4453     04DE                     __ptext16:	
  4454 ;; *************** function _lcd_init *****************
  4455 ;; Defined at:
  4456 ;;		line 102 in file "main.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, pclath, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 4
  4477 ;; This function calls:
  4478 ;;		_lcd_cmd
  4479 ;; This function is called by:
  4480 ;;		_main
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484     04DE                     _lcd_init:	
  4485                           ;psect for function _lcd_init
  4486                           
  4487     04DE                     l1910:	
  4488                           ;incstack = 0
  4489                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4490                           
  4491                           
  4492                           ;main.c: 104:     lcd_cmd(0x01);
  4493     04DE  3001               	movlw	1
  4494     04DF  3184  2496  3184   	fcall	_lcd_cmd
  4495                           
  4496                           ;main.c: 105:     lcd_cmd(0x02);
  4497     04E2  3002               	movlw	2
  4498     04E3  3184  2496  3184   	fcall	_lcd_cmd
  4499                           
  4500                           ;main.c: 106:     lcd_cmd(0x06);
  4501     04E6  3006               	movlw	6
  4502     04E7  3184  2496  3184   	fcall	_lcd_cmd
  4503                           
  4504                           ;main.c: 107:     lcd_cmd(0x38);
  4505     04EA  3038               	movlw	56
  4506     04EB  3184  2496  3184   	fcall	_lcd_cmd
  4507                           
  4508                           ;main.c: 108:     lcd_cmd(0x0C);
  4509     04EE  300C               	movlw	12
  4510     04EF  3184  2496  3184   	fcall	_lcd_cmd
  4511     04F2                     l260:
  4512     04F2  0008               	return
  4513     04F3                     __end_of_lcd_init:
  4514                           
  4515                           	psect	text17
  4516     0496                     __ptext17:	
  4517 ;; *************** function _lcd_cmd *****************
  4518 ;; Defined at:
  4519 ;;		line 120 in file "main.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  cmd             1    wreg     unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  cmd             1    1[COMMON] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		wreg
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4537 ;;Total ram usage:        2 bytes
  4538 ;; Hardware stack levels used: 1
  4539 ;; Hardware stack levels required when called: 3
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;;		_lcd_init
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548     0496                     _lcd_cmd:	
  4549                           ;psect for function _lcd_cmd
  4550                           
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _lcd_cmd: [wreg]
  4554                           ;lcd_cmd@cmd stored from wreg
  4555     0496  00F1               	movwf	lcd_cmd@cmd
  4556     0497                     l1870:
  4557                           
  4558                           ;main.c: 120: void lcd_cmd(uint8_t cmd);main.c: 121: {;main.c: 122:     PORTC = cmd;
  4559     0497  0871               	movf	lcd_cmd@cmd,w
  4560     0498  0020               	movlb	0	; select bank0
  4561     0499  008E               	movwf	14	;volatile
  4562     049A                     l1872:
  4563                           
  4564                           ;main.c: 123:     RB4 = 0;
  4565     049A  120D               	bcf	13,4	;volatile
  4566     049B                     l1874:
  4567                           
  4568                           ;main.c: 124:     RB5 = 0;
  4569     049B  128D               	bcf	13,5	;volatile
  4570     049C                     l1876:
  4571                           
  4572                           ;main.c: 125:     RB6 = 1;
  4573     049C  170D               	bsf	13,6	;volatile
  4574                           
  4575                           ;main.c: 126:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4576     049D  3006               	movlw	6
  4577     049E  00F0               	movwf	??_lcd_cmd
  4578     049F  3030               	movlw	48
  4579     04A0                     u1307:
  4580     04A0  0B89               	decfsz	9,f
  4581     04A1  2CA0               	goto	u1307
  4582     04A2  0BF0               	decfsz	??_lcd_cmd,f
  4583     04A3  2CA0               	goto	u1307
  4584     04A4  3200               	nop2
  4585     04A5                     l1878:
  4586                           
  4587                           ;main.c: 127:     RB6 = 0;
  4588     04A5  0020               	movlb	0	; select bank0
  4589     04A6  130D               	bcf	13,6	;volatile
  4590                           
  4591                           ;main.c: 128:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4592     04A7  3006               	movlw	6
  4593     04A8  00F0               	movwf	??_lcd_cmd
  4594     04A9  3030               	movlw	48
  4595     04AA                     u1317:
  4596     04AA  0B89               	decfsz	9,f
  4597     04AB  2CAA               	goto	u1317
  4598     04AC  0BF0               	decfsz	??_lcd_cmd,f
  4599     04AD  2CAA               	goto	u1317
  4600     04AE  3200               	nop2
  4601     04AF                     l266:
  4602     04AF  0008               	return
  4603     04B0                     __end_of_lcd_cmd:
  4604                           
  4605                           	psect	text18
  4606     0507                     __ptext18:	
  4607 ;; *************** function _SYSTEM_Initialize *****************
  4608 ;; Defined at:
  4609 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0, pclath, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 5
  4630 ;; This function calls:
  4631 ;;		_ADC_Initialize
  4632 ;;		_CLOCK_Initialize
  4633 ;;		_INTERRUPT_Initialize
  4634 ;;		_PIN_MANAGER_Initialize
  4635 ;;		_Timer0_Initialize
  4636 ;;		_WDT_Initialize
  4637 ;; This function is called by:
  4638 ;;		_main
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642     0507                     _SYSTEM_Initialize:	
  4643                           ;psect for function _SYSTEM_Initialize
  4644                           
  4645     0507                     l1900:	
  4646                           ;incstack = 0
  4647                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4648                           
  4649                           
  4650                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  4651     0507  3185  2558  3185   	fcall	_CLOCK_Initialize
  4652                           
  4653                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  4654     050A  3183  23BF  3185   	fcall	_PIN_MANAGER_Initialize
  4655                           
  4656                           ;mcc_generated_files/system/src/system.c: 43:     ADC_Initialize();
  4657     050D  3185  254E  3185   	fcall	_ADC_Initialize
  4658                           
  4659                           ;mcc_generated_files/system/src/system.c: 44:     Timer0_Initialize();
  4660     0510  3184  24F3  3185   	fcall	_Timer0_Initialize
  4661                           
  4662                           ;mcc_generated_files/system/src/system.c: 45:     WDT_Initialize();
  4663     0513  3185  2572  3185   	fcall	_WDT_Initialize
  4664                           
  4665                           ;mcc_generated_files/system/src/system.c: 46:     INTERRUPT_Initialize();
  4666     0516  3185  2543  3185   	fcall	_INTERRUPT_Initialize
  4667     0519                     l117:
  4668     0519  0008               	return
  4669     051A                     __end_of_SYSTEM_Initialize:
  4670                           
  4671                           	psect	text19
  4672     0572                     __ptext19:	
  4673 ;; *************** function _WDT_Initialize *****************
  4674 ;; Defined at:
  4675 ;;		line 36 in file "mcc_generated_files/system/src/watchdog.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 3
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_SYSTEM_Initialize
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703     0572                     _WDT_Initialize:	
  4704                           ;psect for function _WDT_Initialize
  4705                           
  4706     0572                     l1802:	
  4707                           ;incstack = 0
  4708                           ; Regs used in _WDT_Initialize: [wreg]
  4709                           
  4710                           
  4711                           ;mcc_generated_files/system/src/watchdog.c: 39:     WDTCON = 0x16;
  4712     0572  3016               	movlw	22
  4713     0573  0021               	movlb	1	; select bank1
  4714     0574  0097               	movwf	23	;volatile
  4715     0575                     l43:
  4716     0575  0008               	return
  4717     0576                     __end_of_WDT_Initialize:
  4718                           
  4719                           	psect	text20
  4720     04F3                     __ptext20:	
  4721 ;; *************** function _Timer0_Initialize *****************
  4722 ;; Defined at:
  4723 ;;		line 51 in file "mcc_generated_files/timer/src/tmr0.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0, pclath, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 4
  4744 ;; This function calls:
  4745 ;;		_Timer0_OverflowCallbackRegister
  4746 ;; This function is called by:
  4747 ;;		_SYSTEM_Initialize
  4748 ;;		_main
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752     04F3                     _Timer0_Initialize:	
  4753                           ;psect for function _Timer0_Initialize
  4754                           
  4755     04F3                     l1846:	
  4756                           ;incstack = 0
  4757                           ; Regs used in _Timer0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4758                           
  4759                           
  4760                           ;mcc_generated_files/timer/src/tmr0.c: 54:   OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) 
      +                          | (0xD4 & 0x3F));
  4761     04F3  0021               	movlb	1	; select bank1
  4762     04F4  0815               	movf	21,w	;volatile
  4763     04F5  39C0               	andlw	192
  4764     04F6  3814               	iorlw	20
  4765     04F7  0095               	movwf	21	;volatile
  4766     04F8                     l1848:
  4767                           
  4768                           ;mcc_generated_files/timer/src/tmr0.c: 57:   TMR0 = 0xC1;
  4769     04F8  30C1               	movlw	193
  4770     04F9  0020               	movlb	0	; select bank0
  4771     04FA  0095               	movwf	21	;volatile
  4772     04FB                     l1850:
  4773                           
  4774                           ;mcc_generated_files/timer/src/tmr0.c: 60:   timer0ReloadVal = 193;
  4775     04FB  30C1               	movlw	193
  4776     04FC  00EF               	movwf	_timer0ReloadVal	;volatile
  4777     04FD                     l1852:
  4778                           
  4779                           ;mcc_generated_files/timer/src/tmr0.c: 63:   Timer0_OverflowCallbackRegister(Timer0_Defa
      +                          ultOverflowCallback);
  4780     04FD  30B0               	movlw	low _Timer0_DefaultOverflowCallback
  4781     04FE  00F0               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler
  4782     04FF  3004               	movlw	high _Timer0_DefaultOverflowCallback
  4783     0500  00F1               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler+1
  4784     0501  3185  2566  3184   	fcall	_Timer0_OverflowCallbackRegister
  4785     0504                     l1854:
  4786                           
  4787                           ;mcc_generated_files/timer/src/tmr0.c: 66:   INTCONbits.TMR0IF = 0;
  4788     0504  110B               	bcf	11,2	;volatile
  4789     0505                     l1856:
  4790                           
  4791                           ;mcc_generated_files/timer/src/tmr0.c: 69:   INTCONbits.TMR0IE = 1;
  4792     0505  168B               	bsf	11,5	;volatile
  4793     0506                     l185:
  4794     0506  0008               	return
  4795     0507                     __end_of_Timer0_Initialize:
  4796                           
  4797                           	psect	text21
  4798     0566                     __ptext21:	
  4799 ;; *************** function _Timer0_OverflowCallbackRegister *****************
  4800 ;; Defined at:
  4801 ;;		line 112 in file "mcc_generated_files/timer/src/tmr0.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  CallbackHand    2    0[COMMON] PTR FTN()void 
  4804 ;;		 -> Timer0_DefaultOverflowCallback(1), 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;Total ram usage:        2 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; Hardware stack levels required when called: 3
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_Timer0_Initialize
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830     0566                     _Timer0_OverflowCallbackRegister:	
  4831                           ;psect for function _Timer0_OverflowCallbackRegister
  4832                           
  4833     0566                     l1736:	
  4834                           ;incstack = 0
  4835                           ; Regs used in _Timer0_OverflowCallbackRegister: [wreg]
  4836                           
  4837                           
  4838                           ;mcc_generated_files/timer/src/tmr0.c: 112: void Timer0_OverflowCallbackRegister(void (*
      +                           CallbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 113: {;mcc_generated_file
      +                          s/timer/src/tmr0.c: 114:   Timer0_OverflowCallback = CallbackHandler;
  4839     0566  0871               	movf	Timer0_OverflowCallbackRegister@CallbackHandler+1,w
  4840     0567  0021               	movlb	1	; select bank1
  4841     0568  00D4               	movwf	(_Timer0_OverflowCallback+1)^(0+128)
  4842     0569  0870               	movf	Timer0_OverflowCallbackRegister@CallbackHandler,w
  4843     056A  00D3               	movwf	_Timer0_OverflowCallback^(0+128)
  4844     056B                     l204:
  4845     056B  0008               	return
  4846     056C                     __end_of_Timer0_OverflowCallbackRegister:
  4847                           
  4848                           	psect	text22
  4849     03BF                     __ptext22:	
  4850 ;; *************** function _PIN_MANAGER_Initialize *****************
  4851 ;; Defined at:
  4852 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;		None
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1    wreg      void 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; Hardware stack levels required when called: 3
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_SYSTEM_Initialize
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880     03BF                     _PIN_MANAGER_Initialize:	
  4881                           ;psect for function _PIN_MANAGER_Initialize
  4882                           
  4883     03BF                     l1804:	
  4884                           ;incstack = 0
  4885                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4886                           
  4887                           
  4888                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  4889     03BF  0022               	movlb	2	; select bank2
  4890     03C0  018C               	clrf	12	;volatile
  4891                           
  4892                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  4893     03C1  018D               	clrf	13	;volatile
  4894                           
  4895                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  4896     03C2  018E               	clrf	14	;volatile
  4897     03C3                     l1806:
  4898                           
  4899                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
  4900     03C3  303F               	movlw	63
  4901     03C4  0021               	movlb	1	; select bank1
  4902     03C5  008C               	movwf	12	;volatile
  4903     03C6                     l1808:
  4904                           
  4905                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xC0;
  4906     03C6  30C0               	movlw	192
  4907     03C7  008D               	movwf	13	;volatile
  4908     03C8                     l1810:
  4909                           
  4910                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFF;
  4911     03C8  30FF               	movlw	255
  4912     03C9  008E               	movwf	14	;volatile
  4913     03CA                     l1812:
  4914                           
  4915                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x17;
  4916     03CA  3017               	movlw	23
  4917     03CB  0023               	movlb	3	; select bank3
  4918     03CC  008C               	movwf	12	;volatile
  4919                           
  4920                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
  4921     03CD  018D               	clrf	13	;volatile
  4922     03CE                     l1814:
  4923                           
  4924                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xCF;
  4925     03CE  30CF               	movlw	207
  4926     03CF  008E               	movwf	14	;volatile
  4927     03D0                     l1816:
  4928                           
  4929                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x3F;
  4930     03D0  303F               	movlw	63
  4931     03D1  0024               	movlb	4	; select bank4
  4932     03D2  008C               	movwf	12	;volatile
  4933     03D3                     l1818:
  4934                           
  4935                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0xF0;
  4936     03D3  30F0               	movlw	240
  4937     03D4  008D               	movwf	13	;volatile
  4938     03D5                     l1820:
  4939                           
  4940                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0xFF;
  4941     03D5  30FF               	movlw	255
  4942     03D6  008E               	movwf	14	;volatile
  4943     03D7                     l1822:
  4944                           
  4945                           ;mcc_generated_files/system/src/pins.c: 67:     OPTION_REGbits.nWPUEN = 0x0;
  4946     03D7  0021               	movlb	1	; select bank1
  4947     03D8  1395               	bcf	21,7	;volatile
  4948     03D9                     l1824:
  4949                           
  4950                           ;mcc_generated_files/system/src/pins.c: 79:     INLVLA = 0x4;
  4951     03D9  3004               	movlw	4
  4952     03DA  0027               	movlb	7	; select bank7
  4953     03DB  008C               	movwf	12	;volatile
  4954     03DC                     l1826:
  4955                           
  4956                           ;mcc_generated_files/system/src/pins.c: 80:     INLVLB = 0x0;
  4957     03DC  018D               	clrf	13	;volatile
  4958                           
  4959                           ;mcc_generated_files/system/src/pins.c: 81:     INLVLC = 0xFF;
  4960     03DD  30FF               	movlw	255
  4961     03DE  008E               	movwf	14	;volatile
  4962     03DF                     l1828:
  4963                           
  4964                           ;mcc_generated_files/system/src/pins.c: 94:     IOCAP = 0x0;
  4965     03DF  0191               	clrf	17	;volatile
  4966     03E0                     l1830:
  4967                           
  4968                           ;mcc_generated_files/system/src/pins.c: 95:     IOCAN = 0x0;
  4969     03E0  0192               	clrf	18	;volatile
  4970     03E1                     l1832:
  4971                           
  4972                           ;mcc_generated_files/system/src/pins.c: 96:     IOCAF = 0x0;
  4973     03E1  0193               	clrf	19	;volatile
  4974     03E2                     l1834:
  4975                           
  4976                           ;mcc_generated_files/system/src/pins.c: 97:     IOCBP = 0x0;
  4977     03E2  0194               	clrf	20	;volatile
  4978     03E3                     l1836:
  4979                           
  4980                           ;mcc_generated_files/system/src/pins.c: 98:     IOCBN = 0x0;
  4981     03E3  0195               	clrf	21	;volatile
  4982     03E4                     l1838:
  4983                           
  4984                           ;mcc_generated_files/system/src/pins.c: 99:     IOCBF = 0x0;
  4985     03E4  0196               	clrf	22	;volatile
  4986     03E5                     l90:
  4987     03E5  0008               	return
  4988     03E6                     __end_of_PIN_MANAGER_Initialize:
  4989                           
  4990                           	psect	text23
  4991     0543                     __ptext23:	
  4992 ;; *************** function _INTERRUPT_Initialize *****************
  4993 ;; Defined at:
  4994 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0, pclath, cstack
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;Total ram usage:        0 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 4
  5015 ;; This function calls:
  5016 ;;		_INT_SetInterruptHandler
  5017 ;; This function is called by:
  5018 ;;		_SYSTEM_Initialize
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022     0543                     _INTERRUPT_Initialize:	
  5023                           ;psect for function _INTERRUPT_Initialize
  5024                           
  5025     0543                     l1858:	
  5026                           ;incstack = 0
  5027                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5028                           
  5029                           
  5030                           ;mcc_generated_files/system/src/interrupt.c: 44:     (INTCONbits.INTF = 0);
  5031     0543  108B               	bcf	11,1	;volatile
  5032                           
  5033                           ;mcc_generated_files/system/src/interrupt.c: 45:     (OPTION_REGbits.INTEDG = 1);
  5034     0544  0021               	movlb	1	; select bank1
  5035     0545  1715               	bsf	21,6	;volatile
  5036     0546                     l1860:
  5037                           
  5038                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  5039     0546  3000               	movlw	0
  5040     0547  00F0               	movwf	INT_SetInterruptHandler@InterruptHandler
  5041     0548  3000               	movlw	0
  5042     0549  00F1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5043     054A  3185  256C  3185   	fcall	_INT_SetInterruptHandler
  5044     054D                     l134:
  5045     054D  0008               	return
  5046     054E                     __end_of_INTERRUPT_Initialize:
  5047                           
  5048                           	psect	text24
  5049     056C                     __ptext24:	
  5050 ;; *************** function _INT_SetInterruptHandler *****************
  5051 ;; Defined at:
  5052 ;;		line 97 in file "mcc_generated_files/system/src/interrupt.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  5055 ;;		 -> INT_DefaultInterruptHandler(1), 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;		None
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;Total ram usage:        2 bytes
  5072 ;; Hardware stack levels used: 1
  5073 ;; Hardware stack levels required when called: 3
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_INTERRUPT_Initialize
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081     056C                     _INT_SetInterruptHandler:	
  5082                           ;psect for function _INT_SetInterruptHandler
  5083                           
  5084     056C                     l1734:	
  5085                           ;incstack = 0
  5086                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5087                           
  5088                           
  5089                           ;mcc_generated_files/system/src/interrupt.c: 98:     INT_InterruptHandler = InterruptHan
      +                          dler;
  5090     056C  0871               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5091     056D  0021               	movlb	1	; select bank1
  5092     056E  00D6               	movwf	(_INT_InterruptHandler+1)^(0+128)
  5093     056F  0870               	movf	INT_SetInterruptHandler@InterruptHandler,w
  5094     0570  00D5               	movwf	_INT_InterruptHandler^(0+128)
  5095     0571                     l153:
  5096     0571  0008               	return
  5097     0572                     __end_of_INT_SetInterruptHandler:
  5098                           
  5099                           	psect	text25
  5100     0558                     __ptext25:	
  5101 ;; *************** function _CLOCK_Initialize *****************
  5102 ;; Defined at:
  5103 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; Hardware stack levels required when called: 3
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_SYSTEM_Initialize
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131     0558                     _CLOCK_Initialize:	
  5132                           ;psect for function _CLOCK_Initialize
  5133                           
  5134     0558                     l1840:	
  5135                           ;incstack = 0
  5136                           ; Regs used in _CLOCK_Initialize: [wreg+status,2]
  5137                           
  5138                           
  5139                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON = (14 << 0x3)
  5140     0558  3070               	movlw	112
  5141     0559  0021               	movlb	1	; select bank1
  5142     055A  0099               	movwf	25	;volatile
  5143     055B                     l1842:
  5144                           
  5145                           ;mcc_generated_files/system/src/clock.c: 44:     BORCON = (0 << 0x7);
  5146     055B  0022               	movlb	2	; select bank2
  5147     055C  0196               	clrf	22	;volatile
  5148     055D                     l1844:
  5149                           
  5150                           ;mcc_generated_files/system/src/clock.c: 45:     OSCTUNE = (0 << 0x0);
  5151     055D  0021               	movlb	1	; select bank1
  5152     055E  0198               	clrf	24	;volatile
  5153     055F                     l102:
  5154     055F  0008               	return
  5155     0560                     __end_of_CLOCK_Initialize:
  5156                           
  5157                           	psect	text26
  5158     054E                     __ptext26:	
  5159 ;; *************** function _ADC_Initialize *****************
  5160 ;; Defined at:
  5161 ;;		line 53 in file "mcc_generated_files/adc/src/adc.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, status,2
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;Total ram usage:        0 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 3
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_SYSTEM_Initialize
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189     054E                     _ADC_Initialize:	
  5190                           ;psect for function _ADC_Initialize
  5191                           
  5192     054E                     l1794:	
  5193                           ;incstack = 0
  5194                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5195                           
  5196                           
  5197                           ;mcc_generated_files/adc/src/adc.c: 56:     ADCON1 = 0x10;
  5198     054E  3010               	movlw	16
  5199     054F  0021               	movlb	1	; select bank1
  5200     0550  009E               	movwf	30	;volatile
  5201     0551                     l1796:
  5202                           
  5203                           ;mcc_generated_files/adc/src/adc.c: 59:     ADRESL = 0x0;
  5204     0551  019B               	clrf	27	;volatile
  5205     0552                     l1798:
  5206                           
  5207                           ;mcc_generated_files/adc/src/adc.c: 62:     ADRESH = 0x0;
  5208     0552  019C               	clrf	28	;volatile
  5209                           
  5210                           ;mcc_generated_files/adc/src/adc.c: 65:     ADCON0 = 0x1;
  5211     0553  3001               	movlw	1
  5212     0554  009D               	movwf	29	;volatile
  5213     0555                     l1800:
  5214                           
  5215                           ;mcc_generated_files/adc/src/adc.c: 68:     PIR1bits.ADIF = 0;
  5216     0555  0020               	movlb	0	; select bank0
  5217     0556  1311               	bcf	17,6	;volatile
  5218     0557                     l17:
  5219     0557  0008               	return
  5220     0558                     __end_of_ADC_Initialize:
  5221                           
  5222                           	psect	intentry
  5223     0004                     __pintentry:	
  5224 ;; *************** function _INTERRUPT_InterruptManager *****************
  5225 ;; Defined at:
  5226 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0, pclath, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; Hardware stack levels required when called: 2
  5247 ;; This function calls:
  5248 ;;		_Timer0_OverflowISR
  5249 ;; This function is called by:
  5250 ;;		Interrupt level 1
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254     0004                     _INTERRUPT_InterruptManager:
  5255                           
  5256                           ;incstack = 0
  5257     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5258                           
  5259                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5260     0005  3180               	pagesel	$
  5261     0006                     i1l1932:
  5262                           
  5263                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
  5264     0006  1F0B               	btfss	11,6	;volatile
  5265     0007  2809               	goto	u122_21
  5266     0008  280A               	goto	u122_20
  5267     0009                     u122_21:
  5268     0009  2815               	goto	i1l143
  5269     000A                     u122_20:
  5270     000A                     i1l1934:
  5271                           
  5272                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  5273     000A  1E8B               	btfss	11,5	;volatile
  5274     000B  280D               	goto	u123_21
  5275     000C  280E               	goto	u123_20
  5276     000D                     u123_21:
  5277     000D  2815               	goto	i1l143
  5278     000E                     u123_20:
  5279     000E                     i1l1936:
  5280     000E  1D0B               	btfss	11,2	;volatile
  5281     000F  2811               	goto	u124_21
  5282     0010  2812               	goto	u124_20
  5283     0011                     u124_21:
  5284     0011  2815               	goto	i1l143
  5285     0012                     u124_20:
  5286     0012                     i1l1938:
  5287                           
  5288                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             Timer0_OverflowISR();
  5289     0012  3185  251A  3180   	fcall	_Timer0_OverflowISR
  5290     0015                     i1l143:	
  5291                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  5292                           
  5293     0015  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5294     0016  0009               	retfie
  5295     0017                     __end_of_INTERRUPT_InterruptManager:
  5296                           
  5297                           	psect	text28
  5298     051A                     __ptext28:	
  5299 ;; *************** function _Timer0_OverflowISR *****************
  5300 ;; Defined at:
  5301 ;;		line 99 in file "mcc_generated_files/timer/src/tmr0.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0, pclath, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 1
  5322 ;; This function calls:
  5323 ;;		NULL
  5324 ;;		_Timer0_DefaultOverflowCallback
  5325 ;; This function is called by:
  5326 ;;		_INTERRUPT_InterruptManager
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330     051A                     _Timer0_OverflowISR:	
  5331                           ;psect for function _Timer0_OverflowISR
  5332                           
  5333     051A                     i1l1902:	
  5334                           ;incstack = 0
  5335                           ; Regs used in _Timer0_OverflowISR: [wreg+status,2+status,0+pclath+cstack]
  5336                           
  5337                           
  5338                           ;mcc_generated_files/timer/src/tmr0.c: 103:   INTCONbits.TMR0IF = 0;
  5339     051A  110B               	bcf	11,2	;volatile
  5340     051B                     i1l1904:
  5341                           
  5342                           ;mcc_generated_files/timer/src/tmr0.c: 105:   TMR0 = timer0ReloadVal;
  5343     051B  0020               	movlb	0	; select bank0
  5344     051C  086F               	movf	_timer0ReloadVal,w	;volatile
  5345     051D  0095               	movwf	21	;volatile
  5346     051E                     i1l1906:
  5347                           
  5348                           ;mcc_generated_files/timer/src/tmr0.c: 106:     if(Timer0_OverflowCallback)
  5349     051E  0021               	movlb	1	; select bank1
  5350     051F  0853               	movf	_Timer0_OverflowCallback^(0+128),w
  5351     0520  0454               	iorwf	(_Timer0_OverflowCallback+1)^(0+128),w
  5352     0521  1903               	btfsc	3,2
  5353     0522  2D24               	goto	u120_21
  5354     0523  2D25               	goto	u120_20
  5355     0524                     u120_21:
  5356     0524  2D2A               	goto	i1l201
  5357     0525                     u120_20:
  5358     0525                     i1l1908:
  5359                           
  5360                           ;mcc_generated_files/timer/src/tmr0.c: 107:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          108:       Timer0_OverflowCallback();
  5361     0525  0854               	movf	(_Timer0_OverflowCallback+1)^(0+128),w
  5362     0526  008A               	movwf	10
  5363     0527  0853               	movf	_Timer0_OverflowCallback^(0+128),w
  5364     0528  000A               	callw
  5365     0529  3185               	pagesel	$
  5366     052A                     i1l201:
  5367     052A  0008               	return
  5368     052B                     __end_of_Timer0_OverflowISR:
  5369                           
  5370                           	psect	text29
  5371     04B0                     __ptext29:	
  5372 ;; *************** function _Timer0_DefaultOverflowCallback *****************
  5373 ;; Defined at:
  5374 ;;		line 117 in file "mcc_generated_files/timer/src/tmr0.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;Total ram usage:        0 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_Timer0_Initialize
  5398 ;;		_Timer0_OverflowISR
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402     04B0                     _Timer0_DefaultOverflowCallback:	
  5403                           ;psect for function _Timer0_DefaultOverflowCallback
  5404                           
  5405     04B0                     i1l1862:	
  5406                           ;incstack = 0
  5407                           ; Regs used in _Timer0_DefaultOverflowCallback: [wreg+status,2+status,0]
  5408                           
  5409                           
  5410                           ;mcc_generated_files/timer/src/tmr0.c: 119:     flag = 1;
  5411     04B0  3001               	movlw	1
  5412     04B1  0020               	movlb	0	; select bank0
  5413     04B2  00EE               	movwf	_flag	;volatile
  5414                           
  5415                           ;mcc_generated_files/timer/src/tmr0.c: 120:     counts++;
  5416     04B3  3001               	movlw	1
  5417     04B4  0021               	movlb	1	; select bank1
  5418     04B5  07B1               	addwf	_counts^(0+128),f	;volatile
  5419     04B6  3000               	movlw	0
  5420     04B7  3DB2               	addwfc	(_counts+1)^(0+128),f	;volatile
  5421     04B8                     i1l1864:
  5422                           
  5423                           ;mcc_generated_files/timer/src/tmr0.c: 121:     if(counts == 1000)
  5424     04B8  30E8               	movlw	232
  5425     04B9  0631               	xorwf	_counts^(0+128),w	;volatile
  5426     04BA  3003               	movlw	3
  5427     04BB  1903               	skipnz
  5428     04BC  0632               	xorwf	(_counts+1)^(0+128),w	;volatile
  5429     04BD  1D03               	btfss	3,2
  5430     04BE  2CC0               	goto	u118_21
  5431     04BF  2CC1               	goto	u118_20
  5432     04C0                     u118_21:
  5433     04C0  2CC7               	goto	i1l208
  5434     04C1                     u118_20:
  5435     04C1                     i1l1866:
  5436                           
  5437                           ;mcc_generated_files/timer/src/tmr0.c: 122:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          123:         RB7 ^= 1;
  5438     04C1  0020               	movlb	0	; select bank0
  5439     04C2  3080               	movlw	128
  5440     04C3  068D               	xorwf	13,f
  5441     04C4                     i1l1868:
  5442                           
  5443                           ;mcc_generated_files/timer/src/tmr0.c: 124:         counts = 0;
  5444     04C4  0021               	movlb	1	; select bank1
  5445     04C5  01B1               	clrf	_counts^(0+128)	;volatile
  5446     04C6  01B2               	clrf	(_counts+1)^(0+128)	;volatile
  5447     04C7                     i1l208:
  5448     04C7  0008               	return
  5449     04C8                     __end_of_Timer0_DefaultOverflowCallback:
  5450     007E                     btemp	set	126	;btemp
  5451     007E                     int$flags	set	126
  5452     007E                     wtemp0	set	126
  5453                           
  5454                           	psect	idloc
  5455                           
  5456                           ;Config register IDLOC0 @ 0x8000
  5457                           ;	unspecified, using default values
  5458     8000                     	org	32768
  5459     8000  3FFF               	dw	16383
  5460                           
  5461                           ;Config register IDLOC1 @ 0x8001
  5462                           ;	unspecified, using default values
  5463     8001                     	org	32769
  5464     8001  3FFF               	dw	16383
  5465                           
  5466                           ;Config register IDLOC2 @ 0x8002
  5467                           ;	unspecified, using default values
  5468     8002                     	org	32770
  5469     8002  3FFF               	dw	16383
  5470                           
  5471                           ;Config register IDLOC3 @ 0x8003
  5472                           ;	unspecified, using default values
  5473     8003                     	org	32771
  5474     8003  3FFF               	dw	16383
  5475                           
  5476                           	psect	config
  5477                           
  5478                           ;Config register CONFIG1 @ 0x8007
  5479                           ;	Oscillator Selection
  5480                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5481                           ;	Watchdog Timer Enable
  5482                           ;	WDTE = OFF, WDT disabled
  5483                           ;	Power-up Timer Enable
  5484                           ;	PWRTE = OFF, PWRT disabled
  5485                           ;	MCLR Pin Function Select
  5486                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5487                           ;	Flash Program Memory Code Protection
  5488                           ;	CP = ON, Program memory code protection is enabled
  5489                           ;	Data Memory Code Protection
  5490                           ;	CPD = ON, Data memory code protection is enabled
  5491                           ;	Brown-out Reset Enable
  5492                           ;	BOREN = ON, Brown-out Reset enabled
  5493                           ;	Clock Out Enable
  5494                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5495                           ;	Internal/External Switchover
  5496                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5497                           ;	Fail-Safe Clock Monitor Enable
  5498                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5499     8007                     	org	32775
  5500     8007  3E64               	dw	15972
  5501                           
  5502                           ;Config register CONFIG2 @ 0x8008
  5503                           ;	Flash Memory Self-Write Protection
  5504                           ;	WRT = OFF, Write protection off
  5505                           ;	PLL Enable
  5506                           ;	PLLEN = OFF, 4x PLL disabled
  5507                           ;	Stack Overflow/Underflow Reset Enable
  5508                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5509                           ;	Brown-out Reset Voltage Selection
  5510                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5511                           ;	Low-Voltage Programming Enable
  5512                           ;	LVP = ON, Low-voltage programming enabled
  5513     8008                     	org	32776
  5514     8008  3EFF               	dw	16127

Data Sizes:
    Strings     12
    Constant    12
    Data        0
    BSS         54
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80      0      55
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S310$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S967$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 13
		 -> main@arr(BANK0[13]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S908$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S908$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_string@ptr	PTR unsigned char  size(1) Largest target is 13
		 -> main@arr(BANK0[13]), 

    Timer0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), 

    Timer0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), NULL(), 

    S310TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S310TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), 

    Timer0.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Timer0_OverflowCallbackRegister(), 

    S310TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), 

    Timer0.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_PeriodCountSet(), 

    S310TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S310TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0.Start	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S310TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), 

    Timer0.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Initialize(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _lcd_string->_lcd_data
    _lcd_init->_lcd_cmd
    _Timer0_Initialize->_Timer0_OverflowCallbackRegister
    _INTERRUPT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    6609
                                             63 BANK0     14    14      0
                  _SYSTEM_Initialize
                  _Timer0_Initialize
                            _lcd_cmd
                           _lcd_init
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    16      4    6120
                                             45 BANK0     18    14      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    5810
                                             38 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    16      2    5494
                                             23 BANK0     15    13      2
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     7      2     533
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13    11      2    3672
                                             10 BANK0     13    11      2
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2066
                                             11 COMMON     3     0      3
                                              4 BANK0      6     6      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     997
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           2     2      0     100
                                              2 COMMON     2     2      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                     _ADC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                  _Timer0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Initialize                                    0     0      0      98
    _Timer0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _Timer0_OverflowCallbackRegister                      2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      98
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0       0
                 _Timer0_OverflowISR
 ---------------------------------------------------------------------------------
 (10) _Timer0_OverflowISR                                  0     0      0       0
                                NULL *
     _Timer0_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (11) _Timer0_DefaultOverflowCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _Timer0_Initialize
       _Timer0_OverflowCallbackRegister
     _WDT_Initialize
   _Timer0_Initialize
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_data
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
           ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _Timer0_OverflowISR
     NULL(Fake) *
     _Timer0_DefaultOverflowCallback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      37       7       68.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      95      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      95      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jul 13 04:35:51 2024

                                  lcd_data@data 0071                                              l17 0557  
                                            l43 0575                                              l90 03E5  
                                  ___awdiv@sign 0076                            ??_Timer0_OverflowISR 0070  
                           ___wmul@multiplicand 0072                                 _timer0ReloadVal 006F  
                                           l102 055F                                             l204 056B  
                                           l117 0519                                             l134 054D  
                                           l153 0571                                             l260 04F2  
                                           l422 0414                                             l263 0495  
                                           l272 04DD                                             l424 0428  
                                           l185 0506                                             l266 04AF  
                                           l575 0298                                             l911 0375  
                                           l913 0380                                             l921 0058  
                                           l922 0079                                             l588 02EB  
                                           l908 0355                                             l926 0077  
                                           l950 0135                                             l935 0107  
                                           l943 0239                                             l971 047B  
                                           l964 0461                                             l885 0445  
                                           l958 01D9                                             l983 033B  
                                           l991 0409                                             l968 047B  
                                           l994 0576                                             _RB4 006C  
                                           _RB5 006D                                             _RB6 006E  
                                           _RB7 006F                                             u700 0410  
                                           u701 040F                                             u800 027A  
                                           u801 0279                                             u650 02F1  
                                           u730 0424                                             u651 02F0  
                                           u731 0423                                             u715 0415  
                                           u820 028A                                             u740 023F  
                                           u660 02F6                                             u821 0289  
                                           u805 0276                                             u741 023E  
                                           u661 02F5                                             u725 041A  
                                           u830 028F                                             u750 024A  
                                           u910 02DD                                             u670 0305  
                                           u831 028E                                             u815 0280  
                                           u751 0249                                             u911 02DC  
                                           u671 0304                                             u760 025B  
                                           u920 02E2                                             u840 029E  
                                           u680 0323                                             u761 025A  
                                           u921 02E1                                             u905 02D3  
                                           u841 029D                                             u681 0322  
                                           u850 02A9                                             u690 0409  
                                           u930 0342                                             u851 02A8  
                                           u691 0408                                             u931 0341  
                                           u780 026B                                             u860 02B4  
                                           u940 034C                                             u781 026A  
                                           u861 02B3                                             u685 031F  
                                           u941 034B                                             u950 0375  
                                           u775 025F                                             u951 0374  
                                           u880 02C4                                             u960 037A  
                                           u881 02C3                                             u961 0379  
                                           u890 02CE                                             u970 046F  
                                           u795 026C                                             u891 02CD  
                                           u875 02B8                                             u971 046E  
                                           u955 0371                                             u980 0030  
                                           u981 002E                                             u990 0031  
                                           u895 02CA                                             u975 046B  
                                           _abs 0462                                             _pad 033C  
                                  ___awmod@sign 0076                                             wreg 0009  
                                          ?_abs 0077                                            l2004 0157  
                                          l1600 029A                                            l1520 02F6  
                                          l1610 02AE                                            l1602 029E  
                                          l1522 02FB                                            l1620 02C4  
                                          l1612 02B4                                            l1604 02A3  
                                          l1524 0305                                            l1516 02EC  
                                          l1532 03E8                                            l1700 00CC  
                                          l1540 040A                                            l1630 02E2  
                                          l1622 02CE                                            l1614 02B7  
                                          l1606 02A5                                            l1526 0323  
                                          l1518 02F1                                            l1534 03EB  
                                          l1710 00F6                                            l1702 00D9  
                                          l1550 0424                                            l1542 040C  
                                          l1800 0555                                            l1560 0244  
                                          l1632 02E7                                            l1624 02D2  
                                          l1616 02BC                                            l1608 02A9  
                                          l1528 0332                                            l1536 03F7  
                                          l1640 0348                                            l1712 00FC  
                                          l1704 00E7                                            l1544 0410  
                                          l1720 01EF                                            l1810 03C8  
                                          l1802 0572                                            l1570 0255  
                                          l1562 0246                                            l1554 023A  
                                          l1626 02D7                                            l1618 02C0  
                                          l1538 03FC                                            l1650 0367  
                                          l1642 034C                                            l1706 00EC  
                                          l1546 0419                                            l1730 0235  
                                          l1722 01F7                                            l1820 03D5  
                                          l1812 03CA                                            l1804 03BF  
                                          l1900 0507                                            l1580 026B  
                                          l1572 025B                                            l1564 024A  
                                          l1556 023B                                            l1628 02DD  
                                          l1652 037A                                            l1644 0352  
                                          l1636 033E                                            l1708 00F2  
                                          l1660 0032                                            l1548 041E  
                                          l1724 0204                                            l1716 01DC  
                                          l1740 011B                                            l1734 056C  
                                          l1830 03E0                                            l1822 03D7  
                                          l1814 03CE                                            l1806 03C3  
                                          l1910 04DE                                            l1582 027A  
                                          l1574 025E                                            l1590 028A  
                                          l1566 024F                                            l1558 023F  
                                          l1654 0462                                            l1646 0358  
                                          l1638 0342                                            l1670 004B  
                                          l1662 0037                                            l1726 0219  
                                          l1718 01DE                                            l1750 013F  
                                          l1742 0123                                            l1840 0558  
                                          l1832 03E1                                            l1824 03D9  
                                          l1816 03D0                                            l1808 03C6  
                                          l1736 0566                                            l1592 028F  
                                          l1584 027E                                            l1576 0263  
                                          l1568 0253                                            l1656 046F  
                                          l1648 0362                                            l1680 006E  
                                          l1672 0051                                            l1664 003C  
                                          l1728 0221                                            l1760 016D  
                                          l1744 012C                                            l1920 043D  
                                          l1912 042B                                            l1842 055B  
                                          l1834 03E2                                            l1826 03DC  
                                          l1818 03D3                                            l1850 04FB  
                                          l1930 04D5                                            l1594 0294  
                                          l1586 027F                                            l1578 0267  
                                          l1690 009E                                            l1682 0073  
                                          l1674 0060                                            l1666 0041  
                                          l1658 002B                                            l1770 018B  
                                          l1762 0171                                            l1754 0144  
                                          l1746 0131                                            l1738 010A  
                                          l1914 042F                                            l1844 055D  
                                          l1860 0546                                            l1836 03E3  
                                          l1828 03DF                                            l1852 04FD  
                                          l1924 04C9                                            l1588 0284  
                                          l1692 00A3                                            l1684 007D  
                                          l1676 0065                                            l1668 0046  
                                          l1780 01B7                                            l1772 0195  
                                          l1764 0173                                            l1748 0136  
                                          l1756 015C                                            l1916 0431  
                                          l1838 03E4                                            l1854 0504  
                                          l1846 04F3                                            l1870 0497  
                                          l1926 04CA                                            l1598 0299  
                                          l1694 00A7                                            l1686 0080  
                                          l1678 0069                                            l1774 01A1  
                                          l1766 0179                                            l1758 0162  
                                          l1918 0433                                            l1856 0505  
                                          l1848 04F8                                            l1872 049A  
                                          l1880 047D                                            l1928 04D1  
                                          l1688 0085                                            l1696 00B7  
                                          l1776 01AE                                            l1768 0181  
                                          l1784 01C1                                            l1960 0388  
                                          l1952 0381                                            l1794 054E  
                                          l1858 0543                                            l1874 049B  
                                          l1882 0480                                            l1698 00C5  
                                          l1890 0448                                            l1970 038F  
                                          l1962 0389                                            l1954 0384  
                                          l1796 0551                                            l1876 049C  
                                          l1884 0481                                            l1892 044D  
                                          l1980 03B6                                            l1972 0392  
                                          l1964 038A                                            l1956 0385  
                                          l1798 0552                                            l1878 04A5  
                                          l1886 0482                                            l1894 0455  
                                          l1982 03BA                                            l1974 039D  
                                          l1966 038B                                            l1958 0386  
                                          ?_pad 007B                                            l1888 048B  
                                          l1896 045F                                            l1976 03A2  
                                          l1968 038C                                            l1978 03B2  
                                          STR_1 0537                                            u1000 0037  
                                          u1001 0036                                            u1010 0041  
                                          u1011 0040                                            u1100 00F2  
                                          u1020 004B                                            u1101 00F1  
                                          u1021 004A                                            u1030 0065  
                                          u1110 01EF                                            u1031 0064  
                                          u1111 01EE                                            u1040 006E  
                                          u1120 0235                                            u1041 006D  
                                          u1121 0234                                            u1210 04DD  
                                          u1050 00C5                                            u1130 011B  
                                          u1211 04DC                                            u1051 00C4  
                                          u1131 011A                                            u1060 00CC  
                                          u1140 0162                                            u1061 00CB  
                                          u1141 0161                                            u1070 00D9  
                                          u1150 0171                                            u1071 00D8  
                                          u1055 00C1                                            u1151 0170  
                                          u1080 00E7                                            u1160 018B  
                                          u1081 00E6                                            u1161 018A  
                                          u1090 00EC                                            u1170 0195  
                                          u1307 04A0                                            u1091 00EB  
                                          u1075 00D5                                            u1171 0194  
                                          u1260 039A                                            u1317 04AA  
                                          u1085 00E3                                            _LATA 010C  
                                          u1190 045F                                            u1270 03A2  
                                          _LATB 010D                                            u1191 045E  
                                          u1271 03A1                                            _LATC 010E  
                                          u1287 0486                                            u1297 0490  
                                          _TMR0 0015                                            _WPUA 020C  
                                          _WPUB 020D                                            _WPUC 020E  
                                          abs@a 0077                                            _dbuf 00B3  
                                          _flag 006E                                            _main 0381  
                                          _dtoa 0029                                            _prec 00AF  
                                          pad@i 0025                                            pad@p 007C  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          pad@w 0027                                            btemp 007E  
                   _INT_DefaultInterruptHandler 0000                                            start 0017  
               __end_of_INT_SetInterruptHandler 0572                                           ??_abs 0079  
                                         ??_pad 0024                                           ?_main 0070  
                                         ?_dtoa 002A                                 __end_of___awdiv 0299  
                               __end_of___awmod 02EC                                 ___awdiv@divisor 0070  
                                         _IOCAF 0393                                           _IOCBF 0396  
                                         _IOCAN 0392                                           _IOCAP 0391  
                                         _IOCBN 0395                                           _IOCBP 0394  
                                         i1l201 052A                                           i1l143 0015  
                                         i1l208 04C7                                 ___awdiv@counter 0075  
                                  vfpfcnvrt@fmt 0037                                           _PORTC 000E  
                                         _TRISA 008C                                           _TRISB 008D  
                                         _TRISC 008E                                 __end_of_lcd_cmd 04B0  
                                         _flags 006D                                  _WDT_Initialize 0572  
                           read_prec_or_width@c 0020                             read_prec_or_width@n 0021  
                                         _fputc 02EC                                           _fputs 03E6  
                                         pad@fp 0029                                           _width 00AD  
                                         _putch 0576                                           dtoa@d 002A  
                                         dtoa@i 0034                                           dtoa@p 0030  
                                         dtoa@s 0036                                           dtoa@w 0032  
                                         pclath 000A                                           status 0003  
                                         wtemp0 007E                                 __end_of_sprintf 0446  
                               __initialization 0019                                    __end_of_main 03BF  
                                  __end_of_dtoa 0108                     ?_INTERRUPT_InterruptManager 0070  
                                        ??_main 005F                                          ??_dtoa 002C  
                    __end_of_read_prec_or_width 023A                          __end_of_WDT_Initialize 0576  
                                        _ADCON0 009D                                          _ADCON1 009E  
                                        ?_fputc 0070                                          ?_fputs 0078  
                                        _ADRESH 009C                                          _ADRESL 009B  
                              ___awdiv@dividend 0072                                          _ANSELA 018C  
                                        ?_putch 0070                                          _ANSELB 018D  
                                        _ANSELC 018E                                          _BORCON 0116  
                                        u120_20 0525                                          u120_21 0524  
                                        i1l1902 051A                                          i1l1904 051B  
                                        u122_20 000A                                          u122_21 0009  
                                        i1l1906 051E                                          i1l1908 0525  
                                        i1l1932 0006                                          i1l1862 04B0  
                                        i1l1934 000A                                          i1l1864 04B8  
                                        i1l1936 000E                                          u123_20 000E  
                                        u123_21 000D                                          i1l1866 04C1  
                                        i1l1938 0012                                          i1l1868 04C4  
                                        u124_20 0012                                          u124_21 0011  
                                        u118_20 04C1                                          u118_21 04C0  
                                        _INLVLA 038C                                          _INLVLB 038D  
                                        _INLVLC 038E                                          _OSCCON 0099  
                                 vfpfcnvrt@done 0041                                          _WDTCON 0097  
                                        _TRISB4 046C                                          _TRISB5 046D  
                                        _TRISB6 046E                                          _TRISB7 046F  
                                        _Timer0 052B                                __end_of_lcd_data 0496  
                                  vfprintf@cfmt 004B                                __end_of_lcd_init 04F3  
                                        ___wmul 040A                                       ??___awdiv 0074  
                                     ??___awmod 0074                                          _counts 00B1  
                          read_prec_or_width@ap 0076                                ___awdiv@quotient 0077  
                               ___awmod@divisor 0070                                 ___awmod@counter 0075  
                                        pad@buf 007B                                       ??_lcd_cmd 0070  
                                        dtoa@fp 002F                               ?_CLOCK_Initialize 0070  
                                        fputc@c 0070                                          fputs@c 0020  
                                        fputs@i 0021                                          fputs@s 0023  
                            ??_CLOCK_Initialize 0070                                 ?_WDT_Initialize 0070  
                                        putch@c 0070                                __end_of_vfprintf 0462  
       INT_SetInterruptHandler@InterruptHandler 0070                                       ??_sprintf 0051  
                                 lcd_string@ptr 0073                               _SYSTEM_Initialize 0507  
       __end_of_Timer0_OverflowCallbackRegister 056C               ??_Timer0_OverflowCallbackRegister 0072  
              ?_Timer0_OverflowCallbackRegister 0070                 _Timer0_OverflowCallbackRegister 0566  
                       __end_of__initialization 0025                              ?_SYSTEM_Initialize 0070  
                                __pcstackCOMMON 0070                             ??_SYSTEM_Initialize 0072  
                                 __end_of_fputc 033C                                   __end_of_fputs 040A  
                                 __end_of_putch 0577                                  _OPTION_REGbits 0095  
                                       ??_fputc 0073                       __end_of_SYSTEM_Initialize 051A  
                                       ??_fputs 0079                                         ??_putch 0070  
                                    __pbssBANK0 006D                                      __pbssBANK1 00A0  
                                    __pmaintext 0381                                         ?___wmul 0070  
                                    __pintentry 0004                                         _OSCTUNE 0098  
                                     ?_lcd_data 0070                                      _lcd_string 04C8  
                                     ?_lcd_init 0070                ??_Timer0_DefaultOverflowCallback 0070  
               ?_Timer0_DefaultOverflowCallback 0070                                         ___awdiv 023A  
                                       ___awmod 0299                               _Timer0_Initialize 04F3  
                                     ?_vfprintf 0046                              ?_Timer0_Initialize 0070  
                                       __ptext1 0429                                         __ptext2 0446  
                                       __ptext3 0108                                         __ptext4 01DA  
                                       __ptext5 040A                                         __ptext6 0029  
                                       __ptext7 033C                                         __ptext8 03E6  
                                       __ptext9 02EC                                         _lcd_cmd 0496  
                         read_prec_or_width@fmt 0023                                ___awmod@dividend 0072  
                      ??_PIN_MANAGER_Initialize 0070                         _INT_SetInterruptHandler 056C  
                           ??_Timer0_Initialize 0072                                      ??_lcd_data 0070  
                                       main@arr 0060                                         _sprintf 0429  
                                       clrloop0 0561                                      ??_lcd_init 0072  
                          end_of_initialization 0025                                         fputc@fp 0072  
                                       fputs@fp 0078                              _read_prec_or_width 01DA  
                     __end_of_Timer0_Initialize 0507                               __end_of_vfpfcnvrt 01DA  
                           ?_read_prec_or_width 0076                                vfpfcnvrt@convarg 003D  
                                    ??_vfprintf 0049                                ??_WDT_Initialize 0070  
Timer0_OverflowCallbackRegister@CallbackHandler 0070                                      lcd_cmd@cmd 0071  
                          ??_read_prec_or_width 0078                                     ?_lcd_string 0070  
                                __end_of_Timer0 0537                    __end_of_INTERRUPT_Initialize 054E  
                                   vfpfcnvrt@ap 0038                                     vfpfcnvrt@cp 0044  
                                   vfpfcnvrt@fp 0043                                  __end_of___wmul 0429  
                                _ADC_Initialize 054E                       ??_INT_SetInterruptHandler 0072  
                           start_initialization 0019                                     __end_of_abs 047C  
                                   __end_of_pad 0381                                     vfprintf@fmt 0046  
                                      ??___wmul 0074                          __end_of_ADC_Initialize 0558  
                                     ___latbits 0002                                   __pcstackBANK0 0020  
                                     __pnvBANK1 00D3                          _PIN_MANAGER_Initialize 03BF  
                    __end_of_Timer0_OverflowISR 052B                                        ?___awdiv 0070  
                                      ?___awmod 0070                                 ?_ADC_Initialize 0070  
                  ??_INTERRUPT_InterruptManager 0070                                        ?_lcd_cmd 0070  
        __end_of_Timer0_DefaultOverflowCallback 04C8                  _Timer0_DefaultOverflowCallback 04B0  
                                      ?_sprintf 004D                            _INTERRUPT_Initialize 0543  
                              _CLOCK_Initialize 0558                                  ___wmul@product 0074  
                                     clear_ram0 0560                                        _PIR1bits 0011  
                                     main@F3024 00A0                                       _vfpfcnvrt 0108  
                                    _ADCON0bits 009D                               ___wmul@multiplier 0070  
                                  ??_lcd_string 0072                           ?_INTERRUPT_Initialize 0070  
                                    vfprintf@ap 0048                                      vfprintf@fp 004A  
                                    ?_vfpfcnvrt 0037                              __end_of_lcd_string 04DE  
                                    sprintf@fmt 004D                                        _dtoa$989 002D  
                                      __ptext10 0576                                        __ptext11 0462  
                                      __ptext20 04F3                                        __ptext12 0299  
                                      __ptext21 0566                                        __ptext13 023A  
                                      __ptext22 03BF                                        __ptext14 04C8  
                                      __ptext23 0543                                        __ptext15 047C  
                                      __ptext24 056C                                        __ptext16 04DE  
                                      __ptext25 0558                                        __ptext17 0496  
                                      __ptext26 054E                                        __ptext18 0507  
                                      __ptext19 0572                                        __ptext28 051A  
                                      __ptext29 04B0                                        _lcd_data 047C  
                                      _lcd_init 04DE                                        int$flags 007E  
                                      _vfprintf 0446              __end_of_INTERRUPT_InterruptManager 0017  
                    _INTERRUPT_InterruptManager 0004                                      _INTCONbits 000B  
                          _INT_InterruptHandler 00D5                          ??_INTERRUPT_Initialize 0072  
                       _Timer0_OverflowCallback 00D3                                        intlevel1 0000  
                                     sprintf@ap 0052                         ?_PIN_MANAGER_Initialize 0070  
                              ??_ADC_Initialize 0070                        ?_INT_SetInterruptHandler 0070  
                                   ??_vfpfcnvrt 0039                        __end_of_CLOCK_Initialize 0560  
                                 __pstringtext1 052B                                   __pstringtext2 0537  
                                 __pstringtext3 0000                                      _OPTION_REG 0095  
                                      sprintf@f 0054                                        sprintf@s 0053  
                            _Timer0_OverflowISR 051A                           _Timer0_PeriodCountSet 0000  
                __end_of_PIN_MANAGER_Initialize 03E6                             ?_Timer0_OverflowISR 0070  
