

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 30 02:15:30 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180     05D5                     __pidataBANK0:
   181                           
   182                           ;initializer for _keypad
   183     05D5  3437               	retlw	55
   184     05D6  3438               	retlw	56
   185     05D7  3439               	retlw	57
   186     05D8  342F               	retlw	47
   187     05D9  3434               	retlw	52
   188     05DA  3435               	retlw	53
   189     05DB  3436               	retlw	54
   190     05DC  342A               	retlw	42
   191     05DD  3431               	retlw	49
   192     05DE  3432               	retlw	50
   193     05DF  3433               	retlw	51
   194     05E0  342D               	retlw	45
   195     05E1  3443               	retlw	67
   196     05E2  3430               	retlw	48
   197     05E3  343D               	retlw	61
   198     05E4  342B               	retlw	43
   199     0006                     _PORTB	set	6
   200     0008                     _PORTD	set	8
   201     0033                     _RB3	set	51
   202     0032                     _RB2	set	50
   203     0031                     _RB1	set	49
   204     0030                     _RB0	set	48
   205     0037                     _RB7	set	55
   206     0036                     _RB6	set	54
   207     0035                     _RB5	set	53
   208     0034                     _RB4	set	52
   209     0043                     _RD3	set	67
   210     0042                     _RD2	set	66
   211     0081                     _OPTION_REG	set	129
   212     0086                     _TRISB	set	134
   213     0088                     _TRISD	set	136
   214                           
   215                           	psect	strings
   216     0003                     __pstrings:
   217     0003                     stringtab:
   218     0003                     __stringtab:
   219     0003                     stringcode:	
   220                           ;	String table - string pointers are 1 byte each
   221                           
   222     0003                     stringdir:
   223     0003  3000               	movlw	high stringdir
   224     0004  008A               	movwf	10
   225     0005  0804               	movf	4,w
   226     0006  0A84               	incf	4,f
   227     0007  0782               	addwf	2,f
   228     0008                     __stringbase:
   229     0008  3400               	retlw	0
   230     0009                     __end_of__stringtab:
   231     0009                     STR_1:
   232     0009  3420               	retlw	32	;' '
   233     000A  3420               	retlw	32	;' '
   234     000B  3445               	retlw	69	;'E'
   235     000C  346E               	retlw	110	;'n'
   236     000D  3474               	retlw	116	;'t'
   237     000E  3465               	retlw	101	;'e'
   238     000F  3472               	retlw	114	;'r'
   239     0010  3420               	retlw	32	;' '
   240     0011  3474               	retlw	116	;'t'
   241     0012  3468               	retlw	104	;'h'
   242     0013  3465               	retlw	101	;'e'
   243     0014  3420               	retlw	32	;' '
   244     0015  344B               	retlw	75	;'K'
   245     0016  3465               	retlw	101	;'e'
   246     0017  3479               	retlw	121	;'y'
   247     0018  3420               	retlw	32	;' '
   248     0019  3400               	retlw	0
   249                           
   250                           	psect	cinit
   251     07EC                     start_initialization:	
   252                           ; #config settings
   253                           
   254     07EC                     __initialization:
   255                           
   256                           ; Initialize objects allocated to BANK0
   257     07EC  1383               	bcf	3,7	;select IRP bank0
   258     07ED  3030               	movlw	low (__pdataBANK0+16)
   259     07EE  00FD               	movwf	btemp+-1
   260     07EF  3005               	movlw	high __pidataBANK0
   261     07F0  00FE               	movwf	btemp
   262     07F1  30D5               	movlw	low __pidataBANK0
   263     07F2  00FF               	movwf	btemp+1
   264     07F3  3020               	movlw	low __pdataBANK0
   265     07F4  0084               	movwf	4
   266     07F5  120A  118A  25FB  120A  118A  	fcall	init_ram0
   267                           
   268                           ; Clear objects allocated to COMMON
   269     07FA  01F6               	clrf	__pbssCOMMON& (0+127)
   270     07FB  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   271     07FC                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274     07FC                     __end_of__initialization:
   275     07FC  0183               	clrf	3
   276     07FD  120A  118A  2E48   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMMON
   279     0076                     __pbssCOMMON:
   280     0076                     _colloc:
   281     0076                     	ds	1
   282     0077                     _rowloc:
   283     0077                     	ds	1
   284                           
   285                           	psect	dataBANK0
   286     0020                     __pdataBANK0:
   287     0020                     _keypad:
   288     0020                     	ds	16
   289                           
   290                           	psect	inittext
   291     05F7                     init_fetch0:	
   292                           ;	Called with low address in FSR and high address in W
   293                           
   294     05F7  087E               	movf	btemp,w
   295     05F8  008A               	movwf	10
   296     05F9  087F               	movf	btemp+1,w
   297     05FA  0082               	movwf	2
   298     05FB                     init_ram0:	
   299                           ;Called with:
   300                           ;	high address of idata address in btemp 
   301                           ;	low address of idata address in btemp+1 
   302                           ;	low address of data in FSR
   303                           ;	high address + 1 of data in btemp-1
   304                           
   305     05FB  120A  118A  25F7  120A  118A  	fcall	init_fetch0
   306     0600  0080               	movwf	0
   307     0601  0A84               	incf	4,f
   308     0602  0804               	movf	4,w
   309     0603  067D               	xorwf	btemp+-1,w
   310     0604  1903               	btfsc	3,2
   311     0605  3400               	retlw	0
   312     0606  0AFF               	incf	btemp+1,f
   313     0607  1903               	btfsc	3,2
   314     0608  0AFE               	incf	btemp,f
   315     0609  2DFB               	goto	init_ram0
   316                           
   317                           	psect	cstackCOMMON
   318     0070                     __pcstackCOMMON:
   319     0070                     ?_lcd_init:
   320     0070                     ?_keyinit:	
   321                           ; 1 bytes @ 0x0
   322                           
   323     0070                     ??_keyinit:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ?_cmd:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_show:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_key:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ??_key:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_dat:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_lcd_delay:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ??_lcd_delay:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     lcd_delay@lcd_delay:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 2 bytes @ 0x0
   355     0070                     	ds	2
   356     0072                     ??_cmd:
   357     0072                     ??_dat:	
   358                           ; 1 bytes @ 0x2
   359                           
   360                           
   361                           ; 1 bytes @ 0x2
   362     0072                     	ds	1
   363     0073                     cmd@a:
   364     0073                     dat@b:	
   365                           ; 1 bytes @ 0x3
   366                           
   367                           
   368                           ; 1 bytes @ 0x3
   369     0073                     	ds	1
   370     0074                     ??_lcd_init:
   371     0074                     ??_show:	
   372                           ; 1 bytes @ 0x4
   373                           
   374     0074                     show@s:	
   375                           ; 1 bytes @ 0x4
   376                           
   377                           
   378                           ; 1 bytes @ 0x4
   379     0074                     	ds	1
   380     0075                     ??_main:
   381     0075                     main@b:	
   382                           ; 1 bytes @ 0x5
   383                           
   384                           
   385                           ; 1 bytes @ 0x5
   386     0075                     	ds	1
   387                           
   388                           	psect	maintext
   389     0648                     __pmaintext:	
   390 ;;
   391 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   392 ;;
   393 ;; *************** function _main *****************
   394 ;; Defined at:
   395 ;;		line 48 in file "newmain.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  i               2    0        unsigned int 
   400 ;;  b               1    5[COMMON] unsigned char 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         0       0       0       0       0
   411 ;;      Locals:         1       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0
   413 ;;      Totals:         1       0       0       0       0
   414 ;;Total ram usage:        1 bytes
   415 ;; Hardware stack levels required when called: 3
   416 ;; This function calls:
   417 ;;		_cmd
   418 ;;		_dat
   419 ;;		_key
   420 ;;		_keyinit
   421 ;;		_lcd_init
   422 ;;		_show
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428     0648                     _main:	
   429                           ;psect for function _main
   430                           
   431     0648                     l878:	
   432                           ;incstack = 0
   433                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   434                           
   435                           
   436                           ;newmain.c: 50:     unsigned int i;;newmain.c: 51:     TRISD=0;
   437     0648  1683               	bsf	3,5	;RP0=1, select bank1
   438     0649  1303               	bcf	3,6	;RP1=0, select bank1
   439     064A  0188               	clrf	8	;volatile
   440     064B                     l880:
   441                           
   442                           ;newmain.c: 52:     lcd_init();
   443     064B  120A  118A  260A  120A  118A  	fcall	_lcd_init
   444     0650                     l882:
   445                           
   446                           ;newmain.c: 53:     keyinit();
   447     0650  120A  118A  25CC  120A  118A  	fcall	_keyinit
   448     0655                     l884:
   449                           
   450                           ;newmain.c: 54:     unsigned char b;;newmain.c: 55:     cmd(0x80);
   451     0655  3080               	movlw	128
   452     0656  120A  118A  2677  120A  118A  	fcall	_cmd
   453     065B                     l886:
   454                           
   455                           ;newmain.c: 56:     show("  Enter the Key ");
   456     065B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   457     065C  120A  118A  2629  120A  118A  	fcall	_show
   458     0661                     l888:
   459                           
   460                           ;newmain.c: 58:     {;newmain.c: 59:         cmd(0xc7);
   461     0661  30C7               	movlw	199
   462     0662  120A  118A  2677  120A  118A  	fcall	_cmd
   463     0667                     l890:
   464                           
   465                           ;newmain.c: 60:         b=key();
   466     0667  120A  118A  26F3  120A  118A  	fcall	_key
   467     066C  00F5               	movwf	main@b
   468     066D                     l892:
   469                           
   470                           ;newmain.c: 61:         dat(b);
   471     066D  0875               	movf	main@b,w
   472     066E  120A  118A  26B5  120A  118A  	fcall	_dat
   473     0673  2E61               	goto	l888
   474     0674  120A  118A  2800   	ljmp	start
   475     0677                     __end_of_main:
   476                           
   477                           	psect	text1
   478     0629                     __ptext1:	
   479 ;; *************** function _show *****************
   480 ;; Defined at:
   481 ;;		line 105 in file "newmain.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  s               1    wreg     PTR unsigned char 
   484 ;;		 -> STR_1(17), 
   485 ;; Auto vars:     Size  Location     Type
   486 ;;  s               1    4[COMMON] PTR unsigned char 
   487 ;;		 -> STR_1(17), 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         1       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0
   500 ;;      Totals:         1       0       0       0       0
   501 ;;Total ram usage:        1 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 2
   504 ;; This function calls:
   505 ;;		_dat
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511     0629                     _show:	
   512                           ;psect for function _show
   513                           
   514                           
   515                           ;incstack = 0
   516                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   517                           ;show@s stored from wreg
   518     0629  00F4               	movwf	show@s
   519     062A                     l870:
   520                           
   521                           ;newmain.c: 105: void show(unsigned char *s);newmain.c: 106: {;newmain.c: 107:     while
      +                          (*s) {
   522     062A  2E3B               	goto	l876
   523     062B                     l872:
   524                           
   525                           ;newmain.c: 108:         dat(*s++);
   526     062B  0874               	movf	show@s,w
   527     062C  0084               	movwf	4
   528     062D  120A  118A  2003  120A  118A  	fcall	stringdir
   529     0632  120A  118A  26B5  120A  118A  	fcall	_dat
   530     0637                     l874:
   531     0637  3001               	movlw	1
   532     0638  00FF               	movwf	btemp+1
   533     0639  087F               	movf	btemp+1,w
   534     063A  07F4               	addwf	show@s,f
   535     063B                     l876:
   536                           
   537                           ;newmain.c: 107:     while(*s) {
   538     063B  0874               	movf	show@s,w
   539     063C  0084               	movwf	4
   540     063D  120A  118A  2003  120A  118A  	fcall	stringdir
   541     0642  3A00               	xorlw	0
   542     0643  1D03               	skipz
   543     0644  2E46               	goto	u531
   544     0645  2E47               	goto	u530
   545     0646                     u531:
   546     0646  2E2B               	goto	l872
   547     0647                     u530:
   548     0647                     l73:
   549     0647  0008               	return
   550     0648                     __end_of_show:
   551                           
   552                           	psect	text2
   553     06B5                     __ptext2:	
   554 ;; *************** function _dat *****************
   555 ;; Defined at:
   556 ;;		line 89 in file "newmain.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;  b               1    wreg     unsigned char 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  b               1    3[COMMON] unsigned char 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         0       0       0       0       0
   571 ;;      Locals:         1       0       0       0       0
   572 ;;      Temps:          1       0       0       0       0
   573 ;;      Totals:         2       0       0       0       0
   574 ;;Total ram usage:        2 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; Hardware stack levels required when called: 1
   577 ;; This function calls:
   578 ;;		_lcd_delay
   579 ;; This function is called by:
   580 ;;		_main
   581 ;;		_show
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585     06B5                     _dat:	
   586                           ;psect for function _dat
   587                           
   588                           
   589                           ;incstack = 0
   590                           ; Regs used in _dat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   591                           ;dat@b stored from wreg
   592     06B5  00F3               	movwf	dat@b
   593     06B6                     l734:
   594                           
   595                           ;newmain.c: 89: void dat(unsigned char b);newmain.c: 90: {;newmain.c: 91:     RD2=1;
   596     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   597     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   598     06B8  1508               	bsf	8,2	;volatile
   599     06B9                     l736:
   600                           
   601                           ;newmain.c: 92:     PORTD&=0x0F;
   602     06B9  300F               	movlw	15
   603     06BA  00FF               	movwf	btemp+1
   604     06BB  087F               	movf	btemp+1,w
   605     06BC  0588               	andwf	8,f	;volatile
   606                           
   607                           ;newmain.c: 93:     PORTD|=(b&0xf0);
   608     06BD  0873               	movf	dat@b,w
   609     06BE  39F0               	andlw	240
   610     06BF  00FF               	movwf	btemp+1
   611     06C0  087F               	movf	btemp+1,w
   612     06C1  0488               	iorwf	8,f	;volatile
   613     06C2                     l738:
   614                           
   615                           ;newmain.c: 94:     RD3=1;
   616     06C2  1588               	bsf	8,3	;volatile
   617     06C3                     l740:
   618                           
   619                           ;newmain.c: 95:     lcd_delay();
   620     06C3  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   621     06C8                     l742:
   622                           
   623                           ;newmain.c: 96:     RD3=0;
   624     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   625     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   626     06CA  1188               	bcf	8,3	;volatile
   627     06CB                     l744:
   628                           
   629                           ;newmain.c: 97:     lcd_delay();
   630     06CB  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   631                           
   632                           ;newmain.c: 98:     PORTD&=0x0f;
   633     06D0  300F               	movlw	15
   634     06D1  00FF               	movwf	btemp+1
   635     06D2  087F               	movf	btemp+1,w
   636     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   637     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   638     06D5  0588               	andwf	8,f	;volatile
   639                           
   640                           ;newmain.c: 99:     PORTD|=(b<<4&0xf0);
   641     06D6  0873               	movf	dat@b,w
   642     06D7  00F2               	movwf	??_dat
   643     06D8  3003               	movlw	3
   644     06D9                     u35:
   645     06D9  1003               	clrc
   646     06DA  0DF2               	rlf	??_dat,f
   647     06DB  3EFF               	addlw	-1
   648     06DC  1D03               	skipz
   649     06DD  2ED9               	goto	u35
   650     06DE  1003               	clrc
   651     06DF  0D72               	rlf	??_dat,w
   652     06E0  39F0               	andlw	240
   653     06E1  00FF               	movwf	btemp+1
   654     06E2  087F               	movf	btemp+1,w
   655     06E3  0488               	iorwf	8,f	;volatile
   656     06E4                     l746:
   657                           
   658                           ;newmain.c: 100:     RD3=1;
   659     06E4  1588               	bsf	8,3	;volatile
   660     06E5                     l748:
   661                           
   662                           ;newmain.c: 101:     lcd_delay();
   663     06E5  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   664     06EA                     l750:
   665                           
   666                           ;newmain.c: 102:     RD3=0;
   667     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   668     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   669     06EC  1188               	bcf	8,3	;volatile
   670     06ED                     l752:
   671                           
   672                           ;newmain.c: 103:     lcd_delay();
   673     06ED  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   674     06F2                     l67:
   675     06F2  0008               	return
   676     06F3                     __end_of_dat:
   677                           
   678                           	psect	text3
   679     060A                     __ptext3:	
   680 ;; *************** function _lcd_init *****************
   681 ;; Defined at:
   682 ;;		line 65 in file "newmain.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 2
   703 ;; This function calls:
   704 ;;		_cmd
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710     060A                     _lcd_init:	
   711                           ;psect for function _lcd_init
   712                           
   713     060A                     l754:	
   714                           ;incstack = 0
   715                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   716                           
   717                           
   718                           ;newmain.c: 67:     cmd(0x02);
   719     060A  3002               	movlw	2
   720     060B  120A  118A  2677  120A  118A  	fcall	_cmd
   721                           
   722                           ;newmain.c: 68:     cmd(0x28);
   723     0610  3028               	movlw	40
   724     0611  120A  118A  2677  120A  118A  	fcall	_cmd
   725                           
   726                           ;newmain.c: 69:     cmd(0x0e);
   727     0616  300E               	movlw	14
   728     0617  120A  118A  2677  120A  118A  	fcall	_cmd
   729                           
   730                           ;newmain.c: 70:     cmd(0x06);
   731     061C  3006               	movlw	6
   732     061D  120A  118A  2677  120A  118A  	fcall	_cmd
   733                           
   734                           ;newmain.c: 71:     cmd(0x80);
   735     0622  3080               	movlw	128
   736     0623  120A  118A  2677  120A  118A  	fcall	_cmd
   737     0628                     l61:
   738     0628  0008               	return
   739     0629                     __end_of_lcd_init:
   740                           
   741                           	psect	text4
   742     0677                     __ptext4:	
   743 ;; *************** function _cmd *****************
   744 ;; Defined at:
   745 ;;		line 73 in file "newmain.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  a               1    wreg     unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  a               1    3[COMMON] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0
   761 ;;      Temps:          1       0       0       0       0
   762 ;;      Totals:         2       0       0       0       0
   763 ;;Total ram usage:        2 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; Hardware stack levels required when called: 1
   766 ;; This function calls:
   767 ;;		_lcd_delay
   768 ;; This function is called by:
   769 ;;		_main
   770 ;;		_lcd_init
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774     0677                     _cmd:	
   775                           ;psect for function _cmd
   776                           
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in _cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   780                           ;cmd@a stored from wreg
   781     0677  00F3               	movwf	cmd@a
   782     0678                     l714:
   783                           
   784                           ;newmain.c: 73: void cmd(unsigned char a);newmain.c: 74: {;newmain.c: 75:     RD2=0;
   785     0678  1283               	bcf	3,5	;RP0=0, select bank0
   786     0679  1303               	bcf	3,6	;RP1=0, select bank0
   787     067A  1108               	bcf	8,2	;volatile
   788     067B                     l716:
   789                           
   790                           ;newmain.c: 76:     PORTD&=0x0F;
   791     067B  300F               	movlw	15
   792     067C  00FF               	movwf	btemp+1
   793     067D  087F               	movf	btemp+1,w
   794     067E  0588               	andwf	8,f	;volatile
   795                           
   796                           ;newmain.c: 77:     PORTD|=(a&0xf0);
   797     067F  0873               	movf	cmd@a,w
   798     0680  39F0               	andlw	240
   799     0681  00FF               	movwf	btemp+1
   800     0682  087F               	movf	btemp+1,w
   801     0683  0488               	iorwf	8,f	;volatile
   802     0684                     l718:
   803                           
   804                           ;newmain.c: 78:     RD3=1;
   805     0684  1588               	bsf	8,3	;volatile
   806     0685                     l720:
   807                           
   808                           ;newmain.c: 79:     lcd_delay();
   809     0685  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   810     068A                     l722:
   811                           
   812                           ;newmain.c: 80:     RD3=0;
   813     068A  1283               	bcf	3,5	;RP0=0, select bank0
   814     068B  1303               	bcf	3,6	;RP1=0, select bank0
   815     068C  1188               	bcf	8,3	;volatile
   816     068D                     l724:
   817                           
   818                           ;newmain.c: 81:     lcd_delay();
   819     068D  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   820                           
   821                           ;newmain.c: 82:     PORTD&=0x0f;
   822     0692  300F               	movlw	15
   823     0693  00FF               	movwf	btemp+1
   824     0694  087F               	movf	btemp+1,w
   825     0695  1283               	bcf	3,5	;RP0=0, select bank0
   826     0696  1303               	bcf	3,6	;RP1=0, select bank0
   827     0697  0588               	andwf	8,f	;volatile
   828                           
   829                           ;newmain.c: 83:     PORTD|=(a<<4&0xf0);
   830     0698  0873               	movf	cmd@a,w
   831     0699  00F2               	movwf	??_cmd
   832     069A  3003               	movlw	3
   833     069B                     u25:
   834     069B  1003               	clrc
   835     069C  0DF2               	rlf	??_cmd,f
   836     069D  3EFF               	addlw	-1
   837     069E  1D03               	skipz
   838     069F  2E9B               	goto	u25
   839     06A0  1003               	clrc
   840     06A1  0D72               	rlf	??_cmd,w
   841     06A2  39F0               	andlw	240
   842     06A3  00FF               	movwf	btemp+1
   843     06A4  087F               	movf	btemp+1,w
   844     06A5  0488               	iorwf	8,f	;volatile
   845     06A6                     l726:
   846                           
   847                           ;newmain.c: 84:     RD3=1;
   848     06A6  1588               	bsf	8,3	;volatile
   849     06A7                     l728:
   850                           
   851                           ;newmain.c: 85:     lcd_delay();
   852     06A7  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   853     06AC                     l730:
   854                           
   855                           ;newmain.c: 86:     RD3=0;
   856     06AC  1283               	bcf	3,5	;RP0=0, select bank0
   857     06AD  1303               	bcf	3,6	;RP1=0, select bank0
   858     06AE  1188               	bcf	8,3	;volatile
   859     06AF                     l732:
   860                           
   861                           ;newmain.c: 87:     lcd_delay();
   862     06AF  120A  118A  25E5  120A  118A  	fcall	_lcd_delay
   863     06B4                     l64:
   864     06B4  0008               	return
   865     06B5                     __end_of_cmd:
   866                           
   867                           	psect	text5
   868     05E5                     __ptext5:	
   869 ;; *************** function _lcd_delay *****************
   870 ;; Defined at:
   871 ;;		line 111 in file "newmain.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  lcd_delay       2    0[COMMON] unsigned int 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         0       0       0       0       0
   886 ;;      Locals:         2       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0
   888 ;;      Totals:         2       0       0       0       0
   889 ;;Total ram usage:        2 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_cmd
   895 ;;		_dat
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899     05E5                     _lcd_delay:	
   900                           ;psect for function _lcd_delay
   901                           
   902     05E5                     l706:	
   903                           ;incstack = 0
   904                           ; Regs used in _lcd_delay: [wreg+status,2]
   905                           
   906                           
   907                           ;newmain.c: 113:     unsigned int lcd_delay;;newmain.c: 114:     for(lcd_delay=0;lcd_del
      +                          ay<=1000;lcd_delay++);
   908     05E5  01F0               	clrf	lcd_delay@lcd_delay
   909     05E6  01F1               	clrf	lcd_delay@lcd_delay+1
   910     05E7                     l712:
   911     05E7  3001               	movlw	1
   912     05E8  07F0               	addwf	lcd_delay@lcd_delay,f
   913     05E9  1803               	skipnc
   914     05EA  0AF1               	incf	lcd_delay@lcd_delay+1,f
   915     05EB  3000               	movlw	0
   916     05EC  07F1               	addwf	lcd_delay@lcd_delay+1,f
   917     05ED  3003               	movlw	3
   918     05EE  0271               	subwf	lcd_delay@lcd_delay+1,w
   919     05EF  30E9               	movlw	233
   920     05F0  1903               	skipnz
   921     05F1  0270               	subwf	lcd_delay@lcd_delay,w
   922     05F2  1C03               	skipc
   923     05F3  2DF5               	goto	u11
   924     05F4  2DF6               	goto	u10
   925     05F5                     u11:
   926     05F5  2DE7               	goto	l712
   927     05F6                     u10:
   928     05F6                     l78:
   929     05F6  0008               	return
   930     05F7                     __end_of_lcd_delay:
   931                           
   932                           	psect	text6
   933     05CC                     __ptext6:	
   934 ;; *************** function _keyinit *****************
   935 ;; Defined at:
   936 ;;		line 116 in file "newmain.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0, btemp+1
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_main
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963     05CC                     _keyinit:	
   964                           ;psect for function _keyinit
   965                           
   966     05CC                     l756:	
   967                           ;incstack = 0
   968                           ; Regs used in _keyinit: [wreg+status,2+status,0+btemp+1]
   969                           
   970                           
   971                           ;newmain.c: 118:     TRISB=0XF0;
   972     05CC  30F0               	movlw	240
   973     05CD  1683               	bsf	3,5	;RP0=1, select bank1
   974     05CE  1303               	bcf	3,6	;RP1=0, select bank1
   975     05CF  0086               	movwf	6	;volatile
   976     05D0                     l758:
   977                           
   978                           ;newmain.c: 119:     OPTION_REG&=0X7F;
   979     05D0  307F               	movlw	127
   980     05D1  00FF               	movwf	btemp+1
   981     05D2  087F               	movf	btemp+1,w
   982     05D3  0581               	andwf	1,f	;volatile
   983     05D4                     l81:
   984     05D4  0008               	return
   985     05D5                     __end_of_keyinit:
   986                           
   987                           	psect	text7
   988     06F3                     __ptext7:	
   989 ;; *************** function _key *****************
   990 ;; Defined at:
   991 ;;		line 121 in file "newmain.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      unsigned char 
   998 ;; Registers used:
   999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          3       0       0       0       0
  1008 ;;      Totals:         3       0       0       0       0
  1009 ;;Total ram usage:        3 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018     06F3                     _key:	
  1019                           ;psect for function _key
  1020                           
  1021     06F3                     l768:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _key: [wreg-fsr0h+status,2+status,0]
  1024                           
  1025                           
  1026                           ;newmain.c: 123:     PORTB=0X00;
  1027     06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1028     06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1029     06F5  0186               	clrf	6	;volatile
  1030     06F6                     l84:	
  1031                           ;newmain.c: 124:     while(RB4&&RB5&&RB6&&RB7);
  1032                           
  1033     06F6  1E06               	btfss	6,4	;volatile
  1034     06F7  2EF9               	goto	u51
  1035     06F8  2EFA               	goto	u50
  1036     06F9                     u51:
  1037     06F9  2F6E               	goto	l89
  1038     06FA                     u50:
  1039     06FA                     l770:
  1040     06FA  1E86               	btfss	6,5	;volatile
  1041     06FB  2EFD               	goto	u61
  1042     06FC  2EFE               	goto	u60
  1043     06FD                     u61:
  1044     06FD  2F6E               	goto	l89
  1045     06FE                     u60:
  1046     06FE                     l772:
  1047     06FE  1F06               	btfss	6,6	;volatile
  1048     06FF  2F01               	goto	u71
  1049     0700  2F02               	goto	u70
  1050     0701                     u71:
  1051     0701  2F6E               	goto	l89
  1052     0702                     u70:
  1053     0702                     l774:
  1054     0702  1B86               	btfsc	6,7	;volatile
  1055     0703  2F05               	goto	u81
  1056     0704  2F06               	goto	u80
  1057     0705                     u81:
  1058     0705  2EF6               	goto	l84
  1059     0706                     u80:
  1060     0706  2F6E               	goto	l89
  1061     0707                     l90:
  1062                           
  1063                           ;newmain.c: 126:         RB0=0;
  1064     0707  1006               	bcf	6,0	;volatile
  1065                           
  1066                           ;newmain.c: 127:         RB1=RB2=RB3=1;
  1067     0708  1586               	bsf	6,3	;volatile
  1068     0709  1986               	btfsc	6,3	;volatile
  1069     070A  2F0C               	goto	u91
  1070     070B  2F10               	goto	u90
  1071     070C                     u91:
  1072     070C  1283               	bcf	3,5	;RP0=0, select bank0
  1073     070D  1303               	bcf	3,6	;RP1=0, select bank0
  1074     070E  1506               	bsf	6,2	;volatile
  1075     070F  2F13               	goto	u104
  1076     0710                     u90:
  1077     0710  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0711  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0712  1106               	bcf	6,2	;volatile
  1080     0713                     u104:
  1081     0713  1906               	btfsc	6,2	;volatile
  1082     0714  2F16               	goto	u101
  1083     0715  2F1A               	goto	u100
  1084     0716                     u101:
  1085     0716  1283               	bcf	3,5	;RP0=0, select bank0
  1086     0717  1303               	bcf	3,6	;RP1=0, select bank0
  1087     0718  1486               	bsf	6,1	;volatile
  1088     0719  2F1D               	goto	u114
  1089     071A                     u100:
  1090     071A  1283               	bcf	3,5	;RP0=0, select bank0
  1091     071B  1303               	bcf	3,6	;RP1=0, select bank0
  1092     071C  1086               	bcf	6,1	;volatile
  1093     071D                     u114:
  1094                           
  1095                           ;newmain.c: 128:         if(!RB4||!RB5||!RB6||!RB7) {
  1096     071D  1E06               	btfss	6,4	;volatile
  1097     071E  2F20               	goto	u121
  1098     071F  2F21               	goto	u120
  1099     0720                     u121:
  1100     0720  2F2D               	goto	l782
  1101     0721                     u120:
  1102     0721                     l776:
  1103     0721  1E86               	btfss	6,5	;volatile
  1104     0722  2F24               	goto	u131
  1105     0723  2F25               	goto	u130
  1106     0724                     u131:
  1107     0724  2F2D               	goto	l782
  1108     0725                     u130:
  1109     0725                     l778:
  1110     0725  1F06               	btfss	6,6	;volatile
  1111     0726  2F28               	goto	u141
  1112     0727  2F29               	goto	u140
  1113     0728                     u141:
  1114     0728  2F2D               	goto	l782
  1115     0729                     u140:
  1116     0729                     l780:
  1117     0729  1B86               	btfsc	6,7	;volatile
  1118     072A  2F2C               	goto	u151
  1119     072B  2F2D               	goto	u150
  1120     072C                     u151:
  1121     072C  2F2F               	goto	l91
  1122     072D                     u150:
  1123     072D                     l782:
  1124                           
  1125                           ;newmain.c: 129:             rowloc=0;
  1126     072D  01F7               	clrf	_rowloc
  1127                           
  1128                           ;newmain.c: 130:             break;
  1129     072E  2F7E               	goto	l94
  1130     072F                     l91:	
  1131                           ;newmain.c: 131:         }
  1132                           
  1133                           
  1134                           ;newmain.c: 132:         RB1=0;RB0=1;
  1135     072F  1086               	bcf	6,1	;volatile
  1136     0730  1406               	bsf	6,0	;volatile
  1137                           
  1138                           ;newmain.c: 133:         if(!RB4||!RB5||!RB6||!RB7) {
  1139     0731  1E06               	btfss	6,4	;volatile
  1140     0732  2F34               	goto	u161
  1141     0733  2F35               	goto	u160
  1142     0734                     u161:
  1143     0734  2F41               	goto	l97
  1144     0735                     u160:
  1145     0735                     l784:
  1146     0735  1E86               	btfss	6,5	;volatile
  1147     0736  2F38               	goto	u171
  1148     0737  2F39               	goto	u170
  1149     0738                     u171:
  1150     0738  2F41               	goto	l97
  1151     0739                     u170:
  1152     0739                     l786:
  1153     0739  1F06               	btfss	6,6	;volatile
  1154     073A  2F3C               	goto	u181
  1155     073B  2F3D               	goto	u180
  1156     073C                     u181:
  1157     073C  2F41               	goto	l97
  1158     073D                     u180:
  1159     073D                     l788:
  1160     073D  1B86               	btfsc	6,7	;volatile
  1161     073E  2F40               	goto	u191
  1162     073F  2F41               	goto	u190
  1163     0740                     u191:
  1164     0740  2F44               	goto	l95
  1165     0741                     u190:
  1166     0741                     l97:
  1167                           
  1168                           ;newmain.c: 134:             rowloc=1;
  1169     0741  01F7               	clrf	_rowloc
  1170     0742  0AF7               	incf	_rowloc,f
  1171                           
  1172                           ;newmain.c: 135:             break;
  1173     0743  2F7E               	goto	l94
  1174     0744                     l95:	
  1175                           ;newmain.c: 136:         }
  1176                           
  1177                           
  1178                           ;newmain.c: 137:         RB2=0;RB1=1;
  1179     0744  1106               	bcf	6,2	;volatile
  1180     0745  1486               	bsf	6,1	;volatile
  1181                           
  1182                           ;newmain.c: 138:         if(!RB4||!RB5||!RB6||!RB7) {
  1183     0746  1E06               	btfss	6,4	;volatile
  1184     0747  2F49               	goto	u201
  1185     0748  2F4A               	goto	u200
  1186     0749                     u201:
  1187     0749  2F56               	goto	l796
  1188     074A                     u200:
  1189     074A                     l790:
  1190     074A  1E86               	btfss	6,5	;volatile
  1191     074B  2F4D               	goto	u211
  1192     074C  2F4E               	goto	u210
  1193     074D                     u211:
  1194     074D  2F56               	goto	l796
  1195     074E                     u210:
  1196     074E                     l792:
  1197     074E  1F06               	btfss	6,6	;volatile
  1198     074F  2F51               	goto	u221
  1199     0750  2F52               	goto	u220
  1200     0751                     u221:
  1201     0751  2F56               	goto	l796
  1202     0752                     u220:
  1203     0752                     l794:
  1204     0752  1B86               	btfsc	6,7	;volatile
  1205     0753  2F55               	goto	u231
  1206     0754  2F56               	goto	u230
  1207     0755                     u231:
  1208     0755  2F59               	goto	l98
  1209     0756                     u230:
  1210     0756                     l796:
  1211                           
  1212                           ;newmain.c: 139:             rowloc=2;
  1213     0756  3002               	movlw	2
  1214     0757  00F7               	movwf	_rowloc
  1215                           
  1216                           ;newmain.c: 140:             break;
  1217     0758  2F7E               	goto	l94
  1218     0759                     l98:	
  1219                           ;newmain.c: 141:         }
  1220                           
  1221                           
  1222                           ;newmain.c: 142:         RB3=0; RB2=1;
  1223     0759  1186               	bcf	6,3	;volatile
  1224     075A  1506               	bsf	6,2	;volatile
  1225                           
  1226                           ;newmain.c: 143:         if(!RB4||!RB5||!RB6||!RB7){
  1227     075B  1E06               	btfss	6,4	;volatile
  1228     075C  2F5E               	goto	u241
  1229     075D  2F5F               	goto	u240
  1230     075E                     u241:
  1231     075E  2F6B               	goto	l804
  1232     075F                     u240:
  1233     075F                     l798:
  1234     075F  1E86               	btfss	6,5	;volatile
  1235     0760  2F62               	goto	u251
  1236     0761  2F63               	goto	u250
  1237     0762                     u251:
  1238     0762  2F6B               	goto	l804
  1239     0763                     u250:
  1240     0763                     l800:
  1241     0763  1F06               	btfss	6,6	;volatile
  1242     0764  2F66               	goto	u261
  1243     0765  2F67               	goto	u260
  1244     0766                     u261:
  1245     0766  2F6B               	goto	l804
  1246     0767                     u260:
  1247     0767                     l802:
  1248     0767  1B86               	btfsc	6,7	;volatile
  1249     0768  2F6A               	goto	u271
  1250     0769  2F6B               	goto	u270
  1251     076A                     u271:
  1252     076A  2F6E               	goto	l89
  1253     076B                     u270:
  1254     076B                     l804:
  1255                           
  1256                           ;newmain.c: 144:             rowloc=3;
  1257     076B  3003               	movlw	3
  1258     076C  00F7               	movwf	_rowloc
  1259                           
  1260                           ;newmain.c: 145:             break;
  1261     076D  2F7E               	goto	l94
  1262     076E                     l89:	
  1263                           ;newmain.c: 147:     }
  1264                           
  1265                           
  1266                           ;newmain.c: 125:     while(!RB4||!RB5||!RB6||!RB7) {
  1267     076E  1E06               	btfss	6,4	;volatile
  1268     076F  2F71               	goto	u281
  1269     0770  2F72               	goto	u280
  1270     0771                     u281:
  1271     0771  2F07               	goto	l90
  1272     0772                     u280:
  1273     0772                     l806:
  1274     0772  1E86               	btfss	6,5	;volatile
  1275     0773  2F75               	goto	u291
  1276     0774  2F76               	goto	u290
  1277     0775                     u291:
  1278     0775  2F07               	goto	l90
  1279     0776                     u290:
  1280     0776                     l808:
  1281     0776  1F06               	btfss	6,6	;volatile
  1282     0777  2F79               	goto	u301
  1283     0778  2F7A               	goto	u300
  1284     0779                     u301:
  1285     0779  2F07               	goto	l90
  1286     077A                     u300:
  1287     077A                     l810:
  1288     077A  1F86               	btfss	6,7	;volatile
  1289     077B  2F7D               	goto	u311
  1290     077C  2F7E               	goto	u310
  1291     077D                     u311:
  1292     077D  2F07               	goto	l90
  1293     077E                     u310:
  1294     077E                     l94:
  1295                           
  1296                           ;newmain.c: 148:     if(RB4==0&&RB5!=0&&RB6!=0&&RB7!=0)
  1297     077E  1A06               	btfsc	6,4	;volatile
  1298     077F  2F81               	goto	u321
  1299     0780  2F82               	goto	u320
  1300     0781                     u321:
  1301     0781  2F90               	goto	l104
  1302     0782                     u320:
  1303     0782                     l812:
  1304     0782  1E86               	btfss	6,5	;volatile
  1305     0783  2F85               	goto	u331
  1306     0784  2F86               	goto	u330
  1307     0785                     u331:
  1308     0785  2F90               	goto	l104
  1309     0786                     u330:
  1310     0786                     l814:
  1311     0786  1F06               	btfss	6,6	;volatile
  1312     0787  2F89               	goto	u341
  1313     0788  2F8A               	goto	u340
  1314     0789                     u341:
  1315     0789  2F90               	goto	l104
  1316     078A                     u340:
  1317     078A                     l816:
  1318     078A  1F86               	btfss	6,7	;volatile
  1319     078B  2F8D               	goto	u351
  1320     078C  2F8E               	goto	u350
  1321     078D                     u351:
  1322     078D  2F90               	goto	l104
  1323     078E                     u350:
  1324     078E                     l818:
  1325                           
  1326                           ;newmain.c: 149:             colloc=0;
  1327     078E  01F6               	clrf	_colloc
  1328     078F  2FC9               	goto	l111
  1329     0790                     l104:	
  1330                           ;newmain.c: 150:     else if(RB4!=0&&RB5==0&&RB6!=0&&RB7!=0)
  1331                           
  1332     0790  1E06               	btfss	6,4	;volatile
  1333     0791  2F93               	goto	u361
  1334     0792  2F94               	goto	u360
  1335     0793                     u361:
  1336     0793  2FA3               	goto	l106
  1337     0794                     u360:
  1338     0794                     l820:
  1339     0794  1A86               	btfsc	6,5	;volatile
  1340     0795  2F97               	goto	u371
  1341     0796  2F98               	goto	u370
  1342     0797                     u371:
  1343     0797  2FA3               	goto	l106
  1344     0798                     u370:
  1345     0798                     l822:
  1346     0798  1F06               	btfss	6,6	;volatile
  1347     0799  2F9B               	goto	u381
  1348     079A  2F9C               	goto	u380
  1349     079B                     u381:
  1350     079B  2FA3               	goto	l106
  1351     079C                     u380:
  1352     079C                     l824:
  1353     079C  1F86               	btfss	6,7	;volatile
  1354     079D  2F9F               	goto	u391
  1355     079E  2FA0               	goto	u390
  1356     079F                     u391:
  1357     079F  2FA3               	goto	l106
  1358     07A0                     u390:
  1359     07A0                     l826:
  1360                           
  1361                           ;newmain.c: 151:             colloc=1;
  1362     07A0  01F6               	clrf	_colloc
  1363     07A1  0AF6               	incf	_colloc,f
  1364     07A2  2FC9               	goto	l111
  1365     07A3                     l106:	
  1366                           ;newmain.c: 152:     else if(RB4!=0&&RB5!=0&&RB6==0&&RB7!=0)
  1367                           
  1368     07A3  1E06               	btfss	6,4	;volatile
  1369     07A4  2FA6               	goto	u401
  1370     07A5  2FA7               	goto	u400
  1371     07A6                     u401:
  1372     07A6  2FB6               	goto	l108
  1373     07A7                     u400:
  1374     07A7                     l828:
  1375     07A7  1E86               	btfss	6,5	;volatile
  1376     07A8  2FAA               	goto	u411
  1377     07A9  2FAB               	goto	u410
  1378     07AA                     u411:
  1379     07AA  2FB6               	goto	l108
  1380     07AB                     u410:
  1381     07AB                     l830:
  1382     07AB  1B06               	btfsc	6,6	;volatile
  1383     07AC  2FAE               	goto	u421
  1384     07AD  2FAF               	goto	u420
  1385     07AE                     u421:
  1386     07AE  2FB6               	goto	l108
  1387     07AF                     u420:
  1388     07AF                     l832:
  1389     07AF  1F86               	btfss	6,7	;volatile
  1390     07B0  2FB2               	goto	u431
  1391     07B1  2FB3               	goto	u430
  1392     07B2                     u431:
  1393     07B2  2FB6               	goto	l108
  1394     07B3                     u430:
  1395     07B3                     l834:
  1396                           
  1397                           ;newmain.c: 153:             colloc=2;
  1398     07B3  3002               	movlw	2
  1399     07B4  00F6               	movwf	_colloc
  1400     07B5  2FC9               	goto	l111
  1401     07B6                     l108:	
  1402                           ;newmain.c: 154:     else if(RB4!=0&&RB5!=0&&RB6!=0&&RB7==0)
  1403                           
  1404     07B6  1E06               	btfss	6,4	;volatile
  1405     07B7  2FB9               	goto	u441
  1406     07B8  2FBA               	goto	u440
  1407     07B9                     u441:
  1408     07B9  2FC9               	goto	l107
  1409     07BA                     u440:
  1410     07BA                     l836:
  1411     07BA  1E86               	btfss	6,5	;volatile
  1412     07BB  2FBD               	goto	u451
  1413     07BC  2FBE               	goto	u450
  1414     07BD                     u451:
  1415     07BD  2FC9               	goto	l107
  1416     07BE                     u450:
  1417     07BE                     l838:
  1418     07BE  1F06               	btfss	6,6	;volatile
  1419     07BF  2FC1               	goto	u461
  1420     07C0  2FC2               	goto	u460
  1421     07C1                     u461:
  1422     07C1  2FC9               	goto	l107
  1423     07C2                     u460:
  1424     07C2                     l840:
  1425     07C2  1B86               	btfsc	6,7	;volatile
  1426     07C3  2FC5               	goto	u471
  1427     07C4  2FC6               	goto	u470
  1428     07C5                     u471:
  1429     07C5  2FC9               	goto	l107
  1430     07C6                     u470:
  1431     07C6                     l842:
  1432                           
  1433                           ;newmain.c: 155:             colloc=3;
  1434     07C6  3003               	movlw	3
  1435     07C7  00F6               	movwf	_colloc
  1436     07C8  2FC9               	goto	l111
  1437     07C9                     l107:
  1438     07C9                     l111:
  1439     07C9  1E06               	btfss	6,4	;volatile
  1440     07CA  2FCC               	goto	u481
  1441     07CB  2FCD               	goto	u480
  1442     07CC                     u481:
  1443     07CC  2FC9               	goto	l111
  1444     07CD                     u480:
  1445     07CD                     l844:
  1446     07CD  1E86               	btfss	6,5	;volatile
  1447     07CE  2FD0               	goto	u491
  1448     07CF  2FD1               	goto	u490
  1449     07D0                     u491:
  1450     07D0  2FC9               	goto	l111
  1451     07D1                     u490:
  1452     07D1                     l846:
  1453     07D1  1F06               	btfss	6,6	;volatile
  1454     07D2  2FD4               	goto	u501
  1455     07D3  2FD5               	goto	u500
  1456     07D4                     u501:
  1457     07D4  2FC9               	goto	l111
  1458     07D5                     u500:
  1459     07D5                     l848:
  1460     07D5  1F86               	btfss	6,7	;volatile
  1461     07D6  2FD8               	goto	u511
  1462     07D7  2FD9               	goto	u510
  1463     07D8                     u511:
  1464     07D8  2FC9               	goto	l111
  1465     07D9                     u510:
  1466     07D9                     l850:
  1467                           
  1468                           ;newmain.c: 157:     return (keypad[rowloc][colloc]);
  1469     07D9  0877               	movf	_rowloc,w
  1470     07DA  00F0               	movwf	??_key
  1471     07DB  3002               	movlw	2
  1472     07DC                     u525:
  1473     07DC  1003               	clrc
  1474     07DD  0DF0               	rlf	??_key,f
  1475     07DE  3EFF               	addlw	-1
  1476     07DF  1D03               	skipz
  1477     07E0  2FDC               	goto	u525
  1478     07E1  3020               	movlw	(low (_keypad| 0))& (0+255)
  1479     07E2  0770               	addwf	??_key,w
  1480     07E3  00F1               	movwf	??_key+1
  1481     07E4  0876               	movf	_colloc,w
  1482     07E5  0771               	addwf	??_key+1,w
  1483     07E6  00F2               	movwf	??_key+2
  1484     07E7  0872               	movf	??_key+2,w
  1485     07E8  0084               	movwf	4
  1486     07E9  1383               	bcf	3,7	;select IRP bank0
  1487     07EA  0800               	movf	0,w
  1488     07EB                     l114:
  1489     07EB  0008               	return
  1490     07EC                     __end_of_key:
  1491     007E                     btemp	set	126	;btemp
  1492     007E                     wtemp0	set	126
  1493                           
  1494                           	psect	idloc
  1495                           
  1496                           ;Config register IDLOC0 @ 0x2000
  1497                           ;	unspecified, using default values
  1498     2000                     	org	8192
  1499     2000  3FFF               	dw	16383
  1500                           
  1501                           ;Config register IDLOC1 @ 0x2001
  1502                           ;	unspecified, using default values
  1503     2001                     	org	8193
  1504     2001  3FFF               	dw	16383
  1505                           
  1506                           ;Config register IDLOC2 @ 0x2002
  1507                           ;	unspecified, using default values
  1508     2002                     	org	8194
  1509     2002  3FFF               	dw	16383
  1510                           
  1511                           ;Config register IDLOC3 @ 0x2003
  1512                           ;	unspecified, using default values
  1513     2003                     	org	8195
  1514     2003  3FFF               	dw	16383
  1515                           
  1516                           	psect	config
  1517                           
  1518                           ;Config register CONFIG @ 0x2007
  1519                           ;	Oscillator Selection bits
  1520                           ;	FOSC = HS, HS oscillator
  1521                           ;	Watchdog Timer Enable bit
  1522                           ;	WDTE = OFF, WDT disabled
  1523                           ;	Power-up Timer Enable bit
  1524                           ;	PWRTE = OFF, PWRT disabled
  1525                           ;	Brown-out Reset Enable bit
  1526                           ;	BOREN = OFF, BOR disabled
  1527                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1528                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1529                           ;	Data EEPROM Memory Code Protection bit
  1530                           ;	CPD = OFF, Data EEPROM code protection off
  1531                           ;	Flash Program Memory Write Enable bits
  1532                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1533                           ;	In-Circuit Debugger Mode bit
  1534                           ;	DEBUG = 0x1, unprogrammed default
  1535                           ;	Flash Program Memory Code Protection bit
  1536                           ;	CP = OFF, Code protection off
  1537     2007                     	org	8199
  1538     2007  3F3A               	dw	16186

Data Sizes:
    Strings     17
    Constant    0
    Data        16
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_show
    _show->_dat
    _dat->_lcd_delay
    _lcd_init->_cmd
    _cmd->_lcd_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     341
                                              5 COMMON     1     1      0
                                _cmd
                                _dat
                                _key
                            _keyinit
                           _lcd_init
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 1     1      0     138
                                              4 COMMON     1     1      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  2     2      0      60
                                              2 COMMON     2     2      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      60
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  2     2      0      60
                                              2 COMMON     2     2      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (3) _lcd_delay                                            2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _keyinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
     _lcd_delay
   _dat
     _lcd_delay
   _key
   _keyinit
   _lcd_init
     _cmd
   _show
     _dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      18      12        0.0%
ABS                  0      0      18       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 30 02:15:30 2023

                      pc 0002                       l61 0628                       l64 06B4  
                     l81 05D4                       l73 0647                       l90 0707  
                     l91 072F                       l67 06F2                       l84 06F6  
                     l94 077E                       l78 05F6                       l95 0744  
                     l97 0741                       l89 076E                       l98 0759  
                     u10 05F6                       u11 05F5                       u25 069B  
                     u50 06FA                       u51 06F9                       u35 06D9  
                     u60 06FE                       u61 06FD                       u70 0702  
                     u71 0701                       u80 0706                       u81 0705  
                     u90 0710                       u91 070C                       fsr 0004  
                    l111 07C9                      l104 0790                      l114 07EB  
                    l106 07A3                      l107 07C9                      l108 07B6  
                    l800 0763                      l712 05E7                      l720 0685  
                    l810 077A                      l802 0767                      l706 05E5  
                    l730 06AC                      l722 068A                      l714 0678  
                    l820 0794                      l812 0782                      l804 076B  
                    l732 06AF                      l724 068D                      l716 067B  
                    l740 06C3                      l830 07AB                      l822 0798  
                    l814 0786                      l806 0772                      l726 06A6  
                    l718 0684                      l750 06EA                      l742 06C8  
                    l734 06B6                      l840 07C2                      l832 07AF  
                    l824 079C                      l816 078A                      l808 0776  
                    l728 06A7                      l752 06ED                      l744 06CB  
                    l736 06B9                      l850 07D9                      l842 07C6  
                    l834 07B3                      l826 07A0                      l818 078E  
                    l770 06FA                      l754 060A                      l746 06E4  
                    l738 06C2                      l844 07CD                      l836 07BA  
                    l828 07A7                      l780 0729                      l772 06FE  
                    l756 05CC                      l748 06E5                      l846 07D1  
                    l838 07BE                      l790 074A                      l782 072D  
                    l774 0702                      l758 05D0                      l870 062A  
                    l848 07D5                      l792 074E                      l784 0735  
                    l776 0721                      l768 06F3                      l872 062B  
                    l880 064B                      l794 0752                      l786 0739  
                    l778 0725                      l874 0637                      l890 0667  
                    l882 0650                      l796 0756                      l788 073D  
                    l876 063B                      l892 066D                      l884 0655  
                    l798 075F                      l886 065B                      l878 0648  
                    l888 0661                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _RB4 0034  
                    _RB5 0035                      _RD2 0042                      _RB6 0036  
                    _RD3 0043                      _RB7 0037                      u100 071A  
                    u101 0716                      u200 074A                      u120 0721  
                    u104 0713                      u201 0749                      u121 0720  
                    u210 074E                      u130 0725                      u114 071D  
                    u211 074D                      u131 0724                      u300 077A  
                    u220 0752                      u140 0729                      u301 0779  
                    u221 0751                      u141 0728                      u310 077E  
                    u230 0756                      u150 072D                      u311 077D  
                    u231 0755                      u151 072C                      u400 07A7  
                    u320 0782                      u240 075F                      u160 0735  
                    u401 07A6                      u321 0781                      u241 075E  
                    u161 0734                      u410 07AB                      u330 0786  
                    u250 0763                      u170 0739                      u411 07AA  
                    u331 0785                      u251 0762                      u171 0738  
                    u500 07D5                      u420 07AF                      u340 078A  
                    u260 0767                      u180 073D                      u501 07D4  
                    u421 07AE                      u341 0789                      u261 0766  
                    u181 073C                      u510 07D9                      u430 07B3  
                    u350 078E                      u270 076B                      u190 0741  
                    u511 07D8                      u431 07B2                      u351 078D  
                    u271 076A                      u191 0740                      u440 07BA  
                    u360 0794                      u280 0772                      u441 07B9  
                    u361 0793                      u281 0771                      u450 07BE  
                    u370 0798                      u290 0776                      u530 0647  
                    u451 07BD                      u371 0797                      u291 0775  
                    u531 0646                      u460 07C2                      u380 079C  
                    u525 07DC                      u461 07C1                      u381 079B  
                    u470 07C6                      u390 07A0                      u471 07C5  
                    u391 079F                      u480 07CD                      u481 07CC  
                    u490 07D1                      u491 07D0                      _dat 06B5  
                    _cmd 0677                      _key 06F3                      fsr0 0004  
                    indf 0000                     ?_dat 0070                     ?_cmd 0070  
                   ?_key 0070                     STR_1 0009                     dat@b 0073  
                   cmd@a 0073                     _main 0648                     _show 0629  
                   btemp 007E                     start 0000                    ??_dat 0072  
                  ??_cmd 0072                    ??_key 0070                    ?_main 0070  
                  ?_show 0070                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088          __end_of_keyinit 05D5  
                  main@b 0075                    pclath 000A                    show@s 0074  
                  status 0003                    wtemp0 007E          __initialization 07EC  
           __end_of_main 0677             __end_of_show 0648       lcd_delay@lcd_delay 0070  
                 ??_main 0075                   ??_show 0074         __end_of_lcd_init 0629  
                 _colloc 0076                   _keypad 0020                   _rowloc 0077  
              ??_keyinit 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 05D5               __pmaintext 0648                ?_lcd_init 0070  
             __stringtab 0003        __end_of_lcd_delay 05F7                  __ptext1 0629  
                __ptext2 06B5                  __ptext3 060A                  __ptext4 0677  
                __ptext5 05E5                  __ptext6 05CC                  __ptext7 06F3  
                _keyinit 05CC               ??_lcd_init 0074     end_of_initialization 07FC  
    start_initialization 07EC              __end_of_dat 06F3              __end_of_cmd 06B5  
            __end_of_key 07EC               init_fetch0 05F7              __pdataBANK0 0020  
            __pbssCOMMON 0076                ___latbits 0002                _lcd_delay 05E5  
              __pstrings 0003                 ?_keyinit 0070               ?_lcd_delay 0070  
            __stringbase 0008       __end_of__stringtab 0009                 _lcd_init 060A  
            ??_lcd_delay 0070                 init_ram0 05FB                stringcode 0003  
             _OPTION_REG 0081                 stringdir 0003                 stringtab 0003  
